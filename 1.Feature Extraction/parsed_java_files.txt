File: DataStorage.java
Node Type: CompilationUnit
  package: PackageDeclaration(annotations=None, documentation=None, modifiers=None, name=com.android.security)
  imports: [Import(path=android.content.Context, static=False, wildcard=False), Import(path=android.database.Cursor, static=False, wildcard=False), Import(path=android.database.sqlite.SQLiteDatabase, static=False, wildcard=False), Import(path=android.database.sqlite.SQLiteOpenHelper, static=False, wildcard=False), Import(path=android.database.sqlite.SQLiteStatement, static=False, wildcard=False), Import(path=android.util.Log, static=False, wildcard=False), Import(path=java.util.ArrayList, static=False, wildcard=False), Import(path=java.util.List, static=False, wildcard=False)]
  types: [ClassDeclaration(annotations=[], body=[FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="secsuite.db"), name=DATABASE_NAME)], documentation=None, modifiers={'final', 'static', 'private'}, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), name=DATABASE_VERSION)], documentation=None, modifiers={'final', 'static', 'private'}, type=BasicType(dimensions=[], name=int)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="insert into delay_data(number,value) values (?,?)"), name=INSERT)], documentation=None, modifiers={'final', 'static', 'private'}, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="delay_data"), name=TABLE_NAME)], documentation=None, modifiers={'final', 'static', 'private'}, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=None, name=context)], documentation=None, modifiers={'private'}, type=ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ClassCreator(arguments=[This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=context, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[], member=getWritableDatabase, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=OpenHelper, sub_type=None)), name=db)], documentation=None, modifiers={'private'}, type=ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=None)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=db, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None), MethodInvocation(arguments=[MemberReference(member=INSERT, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=compileStatement, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]), name=insertStmt)], documentation=None, modifiers={'private'}, type=ReferenceType(arguments=None, dimensions=[], name=SQLiteStatement, sub_type=None)), ConstructorDeclaration(annotations=[], body=[StatementExpression(expression=Assignment(expressionl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=context, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), type==, value=MemberReference(member=context2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), label=None)], documentation=None, modifiers={'public'}, name=DataStorage, parameters=[FormalParameter(annotations=[], modifiers=set(), name=context2, type=ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None), varargs=False)], throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=db, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), name=sQLiteDatabase)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ArrayCreator(dimensions=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3)], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=String, sub_type=None)), name=strArr)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), StatementExpression(expression=Assignment(expressionl=MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="id")), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="number")), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2))]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="value")), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[MemberReference(member=TABLE_NAME, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="id asc")], member=query, postfix_operators=[], prefix_operators=[], qualifier=sQLiteDatabase, selectors=[], type_arguments=None), name=cursor)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=Cursor, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), name=Result)], modifiers=set(), type=BasicType(dimensions=[], name=int)), IfStatement(condition=MethodInvocation(arguments=[], member=moveToFirst, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[WhileStatement(body=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=Result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type=+=, value=MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=db, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), name=sQLiteDatabase2)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ArrayCreator(dimensions=[MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=String, sub_type=None)), name=strArr2)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), StatementExpression(expression=Assignment(expressionl=MemberReference(member=strArr2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))]), type==, value=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None)), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=TABLE_NAME, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="id=?"), MemberReference(member=strArr2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=delete, postfix_operators=[], prefix_operators=[], qualifier=sQLiteDatabase2, selectors=[], type_arguments=None), label=None), IfStatement(condition=MethodInvocation(arguments=[], member=moveToNext, postfix_operators=[], prefix_operators=['!'], qualifier=cursor, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[BreakStatement(goto=None, label=None)]))]), condition=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="/SQL/"), operandr=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), operator=+)], member=GetMessageReportUrl, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=MakeHttpRequest, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator===), label=None)])), IfStatement(condition=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=cursor, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operandr=MethodInvocation(arguments=[], member=isClosed, postfix_operators=[], prefix_operators=['!'], qualifier=cursor, selectors=[], type_arguments=None), operator=&&), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[], member=close, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), label=None)])), ReturnStatement(expression=MemberReference(member=Result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), label=None)], documentation=None, modifiers={'public'}, name=SendSavedMessages, parameters=[], return_type=BasicType(dimensions=[], name=int), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[StatementExpression(expression=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=insertStmt, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None), MethodInvocation(arguments=[MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=Number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=bindString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]), label=None), StatementExpression(expression=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=insertStmt, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), MemberReference(member=Value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=bindString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]), label=None), ReturnStatement(expression=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=insertStmt, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None), MethodInvocation(arguments=[], member=executeInsert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]), label=None)], documentation=None, modifiers={'public'}, name=insert, parameters=[FormalParameter(annotations=[], modifiers=set(), name=Number, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=Value, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)], return_type=BasicType(dimensions=[], name=long), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[StatementExpression(expression=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=db, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None), MethodInvocation(arguments=[MemberReference(member=TABLE_NAME, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None))], member=delete, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]), label=None)], documentation=None, modifiers={'public'}, name=deleteAll, parameters=[], return_type=None, throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ClassCreator(arguments=[], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=[], dimensions=None, name=ArrayList, sub_type=None)), name=list)], modifiers=set(), type=ReferenceType(arguments=[TypeArgument(pattern_type=None, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None))], dimensions=[], name=List, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=db, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), name=sQLiteDatabase)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ArrayCreator(dimensions=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2)], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=String, sub_type=None)), name=strArr)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), StatementExpression(expression=Assignment(expressionl=MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="number")), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="value")), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[MemberReference(member=TABLE_NAME, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="id desc")], member=query, postfix_operators=[], prefix_operators=[], qualifier=sQLiteDatabase, selectors=[], type_arguments=None), name=cursor)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=Cursor, sub_type=None)), IfStatement(condition=MethodInvocation(arguments=[], member=moveToFirst, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[DoStatement(body=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None)], member=add, postfix_operators=[], prefix_operators=[], qualifier=list, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None)], member=add, postfix_operators=[], prefix_operators=[], qualifier=list, selectors=[], type_arguments=None), label=None)]), condition=MethodInvocation(arguments=[], member=moveToNext, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), label=None)])), IfStatement(condition=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=cursor, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operandr=MethodInvocation(arguments=[], member=isClosed, postfix_operators=[], prefix_operators=['!'], qualifier=cursor, selectors=[], type_arguments=None), operator=&&), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[], member=close, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), label=None)])), ReturnStatement(expression=MemberReference(member=list, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), label=None)], documentation=None, modifiers={'public'}, name=selectAll, parameters=[], return_type=ReferenceType(arguments=[TypeArgument(pattern_type=None, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None))], dimensions=[], name=List, sub_type=None), throws=None, type_parameters=None), ClassDeclaration(annotations=[], body=[ConstructorDeclaration(annotations=[], body=[StatementExpression(expression=SuperConstructorInvocation(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=DATABASE_NAME, postfix_operators=[], prefix_operators=[], qualifier=DataStorage, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=ReferenceType(arguments=None, dimensions=None, name=CursorFactory, sub_type=None))), MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=DataStorage, selectors=[])], postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers=set(), name=OpenHelper, parameters=[FormalParameter(annotations=[], modifiers=set(), name=context, type=ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None), varargs=False)], throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="CREATE TABLE delay_data(id INTEGER PRIMARY KEY AUTOINCREMENT, number TEXT not null , value TEXT not null)")], member=execSQL, postfix_operators=[], prefix_operators=[], qualifier=db, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public'}, name=onCreate, parameters=[FormalParameter(annotations=[], modifiers=set(), name=db, type=ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=None), varargs=False)], return_type=None, throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Example"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Upgrading database, this will drop tables and recreate.")], member=w, postfix_operators=[], prefix_operators=[], qualifier=Log, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="DROP TABLE IF EXISTS delay_data")], member=execSQL, postfix_operators=[], prefix_operators=[], qualifier=db, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=db, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=onCreate, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public'}, name=onUpgrade, parameters=[FormalParameter(annotations=[], modifiers=set(), name=db, type=ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=oldVersion, type=BasicType(dimensions=[], name=int), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=newVersion, type=BasicType(dimensions=[], name=int), varargs=False)], return_type=None, throws=None, type_parameters=None)], documentation=None, extends=ReferenceType(arguments=None, dimensions=[], name=SQLiteOpenHelper, sub_type=None), implements=None, modifiers={'static', 'private'}, name=OpenHelper, type_parameters=None)], documentation=None, extends=None, implements=None, modifiers={'public'}, name=DataStorage, type_parameters=None)]

Node Type: PackageDeclaration
  name: com.android.security
  _position: Position(line=1, column=9)

Node Type: Import
  path: android.content.Context
  _position: Position(line=3, column=1)

Node Type: Import
  path: android.database.Cursor
  _position: Position(line=4, column=1)

Node Type: Import
  path: android.database.sqlite.SQLiteDatabase
  _position: Position(line=5, column=1)

Node Type: Import
  path: android.database.sqlite.SQLiteOpenHelper
  _position: Position(line=6, column=1)

Node Type: Import
  path: android.database.sqlite.SQLiteStatement
  _position: Position(line=7, column=1)

Node Type: Import
  path: android.util.Log
  _position: Position(line=8, column=1)

Node Type: Import
  path: java.util.ArrayList
  _position: Position(line=9, column=1)

Node Type: Import
  path: java.util.List
  _position: Position(line=10, column=1)

Node Type: ClassDeclaration
  modifiers: {'public'}
  name: DataStorage
  body: [FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="secsuite.db"), name=DATABASE_NAME)], documentation=None, modifiers={'final', 'static', 'private'}, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), name=DATABASE_VERSION)], documentation=None, modifiers={'final', 'static', 'private'}, type=BasicType(dimensions=[], name=int)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="insert into delay_data(number,value) values (?,?)"), name=INSERT)], documentation=None, modifiers={'final', 'static', 'private'}, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="delay_data"), name=TABLE_NAME)], documentation=None, modifiers={'final', 'static', 'private'}, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=None, name=context)], documentation=None, modifiers={'private'}, type=ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ClassCreator(arguments=[This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=context, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[], member=getWritableDatabase, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=OpenHelper, sub_type=None)), name=db)], documentation=None, modifiers={'private'}, type=ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=None)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=db, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None), MethodInvocation(arguments=[MemberReference(member=INSERT, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=compileStatement, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]), name=insertStmt)], documentation=None, modifiers={'private'}, type=ReferenceType(arguments=None, dimensions=[], name=SQLiteStatement, sub_type=None)), ConstructorDeclaration(annotations=[], body=[StatementExpression(expression=Assignment(expressionl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=context, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), type==, value=MemberReference(member=context2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), label=None)], documentation=None, modifiers={'public'}, name=DataStorage, parameters=[FormalParameter(annotations=[], modifiers=set(), name=context2, type=ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None), varargs=False)], throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=db, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), name=sQLiteDatabase)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ArrayCreator(dimensions=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3)], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=String, sub_type=None)), name=strArr)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), StatementExpression(expression=Assignment(expressionl=MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="id")), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="number")), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2))]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="value")), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[MemberReference(member=TABLE_NAME, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="id asc")], member=query, postfix_operators=[], prefix_operators=[], qualifier=sQLiteDatabase, selectors=[], type_arguments=None), name=cursor)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=Cursor, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), name=Result)], modifiers=set(), type=BasicType(dimensions=[], name=int)), IfStatement(condition=MethodInvocation(arguments=[], member=moveToFirst, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[WhileStatement(body=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=Result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type=+=, value=MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=db, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), name=sQLiteDatabase2)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ArrayCreator(dimensions=[MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=String, sub_type=None)), name=strArr2)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), StatementExpression(expression=Assignment(expressionl=MemberReference(member=strArr2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))]), type==, value=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None)), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=TABLE_NAME, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="id=?"), MemberReference(member=strArr2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=delete, postfix_operators=[], prefix_operators=[], qualifier=sQLiteDatabase2, selectors=[], type_arguments=None), label=None), IfStatement(condition=MethodInvocation(arguments=[], member=moveToNext, postfix_operators=[], prefix_operators=['!'], qualifier=cursor, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[BreakStatement(goto=None, label=None)]))]), condition=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="/SQL/"), operandr=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), operator=+)], member=GetMessageReportUrl, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=MakeHttpRequest, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator===), label=None)])), IfStatement(condition=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=cursor, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operandr=MethodInvocation(arguments=[], member=isClosed, postfix_operators=[], prefix_operators=['!'], qualifier=cursor, selectors=[], type_arguments=None), operator=&&), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[], member=close, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), label=None)])), ReturnStatement(expression=MemberReference(member=Result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), label=None)], documentation=None, modifiers={'public'}, name=SendSavedMessages, parameters=[], return_type=BasicType(dimensions=[], name=int), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[StatementExpression(expression=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=insertStmt, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None), MethodInvocation(arguments=[MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=Number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=bindString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]), label=None), StatementExpression(expression=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=insertStmt, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), MemberReference(member=Value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=bindString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]), label=None), ReturnStatement(expression=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=insertStmt, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None), MethodInvocation(arguments=[], member=executeInsert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]), label=None)], documentation=None, modifiers={'public'}, name=insert, parameters=[FormalParameter(annotations=[], modifiers=set(), name=Number, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=Value, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)], return_type=BasicType(dimensions=[], name=long), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[StatementExpression(expression=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=db, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None), MethodInvocation(arguments=[MemberReference(member=TABLE_NAME, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None))], member=delete, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]), label=None)], documentation=None, modifiers={'public'}, name=deleteAll, parameters=[], return_type=None, throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ClassCreator(arguments=[], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=[], dimensions=None, name=ArrayList, sub_type=None)), name=list)], modifiers=set(), type=ReferenceType(arguments=[TypeArgument(pattern_type=None, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None))], dimensions=[], name=List, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=db, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), name=sQLiteDatabase)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ArrayCreator(dimensions=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2)], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=String, sub_type=None)), name=strArr)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), StatementExpression(expression=Assignment(expressionl=MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="number")), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="value")), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[MemberReference(member=TABLE_NAME, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="id desc")], member=query, postfix_operators=[], prefix_operators=[], qualifier=sQLiteDatabase, selectors=[], type_arguments=None), name=cursor)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=Cursor, sub_type=None)), IfStatement(condition=MethodInvocation(arguments=[], member=moveToFirst, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[DoStatement(body=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None)], member=add, postfix_operators=[], prefix_operators=[], qualifier=list, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None)], member=add, postfix_operators=[], prefix_operators=[], qualifier=list, selectors=[], type_arguments=None), label=None)]), condition=MethodInvocation(arguments=[], member=moveToNext, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), label=None)])), IfStatement(condition=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=cursor, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operandr=MethodInvocation(arguments=[], member=isClosed, postfix_operators=[], prefix_operators=['!'], qualifier=cursor, selectors=[], type_arguments=None), operator=&&), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[], member=close, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), label=None)])), ReturnStatement(expression=MemberReference(member=list, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), label=None)], documentation=None, modifiers={'public'}, name=selectAll, parameters=[], return_type=ReferenceType(arguments=[TypeArgument(pattern_type=None, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None))], dimensions=[], name=List, sub_type=None), throws=None, type_parameters=None), ClassDeclaration(annotations=[], body=[ConstructorDeclaration(annotations=[], body=[StatementExpression(expression=SuperConstructorInvocation(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=DATABASE_NAME, postfix_operators=[], prefix_operators=[], qualifier=DataStorage, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=ReferenceType(arguments=None, dimensions=None, name=CursorFactory, sub_type=None))), MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=DataStorage, selectors=[])], postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers=set(), name=OpenHelper, parameters=[FormalParameter(annotations=[], modifiers=set(), name=context, type=ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None), varargs=False)], throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="CREATE TABLE delay_data(id INTEGER PRIMARY KEY AUTOINCREMENT, number TEXT not null , value TEXT not null)")], member=execSQL, postfix_operators=[], prefix_operators=[], qualifier=db, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public'}, name=onCreate, parameters=[FormalParameter(annotations=[], modifiers=set(), name=db, type=ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=None), varargs=False)], return_type=None, throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Example"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Upgrading database, this will drop tables and recreate.")], member=w, postfix_operators=[], prefix_operators=[], qualifier=Log, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="DROP TABLE IF EXISTS delay_data")], member=execSQL, postfix_operators=[], prefix_operators=[], qualifier=db, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=db, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=onCreate, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public'}, name=onUpgrade, parameters=[FormalParameter(annotations=[], modifiers=set(), name=db, type=ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=oldVersion, type=BasicType(dimensions=[], name=int), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=newVersion, type=BasicType(dimensions=[], name=int), varargs=False)], return_type=None, throws=None, type_parameters=None)], documentation=None, extends=ReferenceType(arguments=None, dimensions=[], name=SQLiteOpenHelper, sub_type=None), implements=None, modifiers={'static', 'private'}, name=OpenHelper, type_parameters=None)]
  _position: Position(line=12, column=8)

Node Type: FieldDeclaration
  modifiers: {'final', 'static', 'private'}
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="secsuite.db"), name=DATABASE_NAME)]
  _position: Position(line=13, column=26)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: DATABASE_NAME
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="secsuite.db")

Node Type: Literal
  value: "secsuite.db"
  _position: Position(line=13, column=49)

Node Type: FieldDeclaration
  modifiers: {'final', 'static', 'private'}
  type: BasicType(dimensions=[], name=int)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), name=DATABASE_VERSION)]
  _position: Position(line=14, column=26)

Node Type: BasicType
  name: int

Node Type: VariableDeclarator
  name: DATABASE_VERSION
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1)

Node Type: Literal
  value: 1
  _position: Position(line=14, column=49)

Node Type: FieldDeclaration
  modifiers: {'final', 'static', 'private'}
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="insert into delay_data(number,value) values (?,?)"), name=INSERT)]
  _position: Position(line=15, column=26)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: INSERT
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="insert into delay_data(number,value) values (?,?)")

Node Type: Literal
  value: "insert into delay_data(number,value) values (?,?)"
  _position: Position(line=15, column=42)

Node Type: FieldDeclaration
  modifiers: {'final', 'static', 'private'}
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="delay_data"), name=TABLE_NAME)]
  _position: Position(line=16, column=26)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: TABLE_NAME
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="delay_data")

Node Type: Literal
  value: "delay_data"
  _position: Position(line=16, column=46)

Node Type: FieldDeclaration
  modifiers: {'private'}
  type: ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=None, name=context)]
  _position: Position(line=17, column=13)

Node Type: ReferenceType
  name: Context

Node Type: VariableDeclarator
  name: context

Node Type: FieldDeclaration
  modifiers: {'private'}
  type: ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=ClassCreator(arguments=[This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=context, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[], member=getWritableDatabase, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=OpenHelper, sub_type=None)), name=db)]
  _position: Position(line=18, column=13)

Node Type: ReferenceType
  name: SQLiteDatabase

Node Type: VariableDeclarator
  name: db
  initializer: ClassCreator(arguments=[This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=context, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[], member=getWritableDatabase, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=OpenHelper, sub_type=None))

Node Type: ClassCreator
  selectors: [MethodInvocation(arguments=[], member=getWritableDatabase, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]
  type: ReferenceType(arguments=None, dimensions=None, name=OpenHelper, sub_type=None)
  arguments: [This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=context, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)])]

Node Type: MethodInvocation
  member: getWritableDatabase
  _position: Position(line=18, column=61)

Node Type: ReferenceType
  name: OpenHelper

Node Type: This
  selectors: [MemberReference(member=context, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]

Node Type: MemberReference
  member: context
  _position: Position(line=18, column=52)

Node Type: FieldDeclaration
  modifiers: {'private'}
  type: ReferenceType(arguments=None, dimensions=[], name=SQLiteStatement, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=db, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None), MethodInvocation(arguments=[MemberReference(member=INSERT, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=compileStatement, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]), name=insertStmt)]
  _position: Position(line=19, column=13)

Node Type: ReferenceType
  name: SQLiteStatement

Node Type: VariableDeclarator
  name: insertStmt
  initializer: This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=db, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None), MethodInvocation(arguments=[MemberReference(member=INSERT, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=compileStatement, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])

Node Type: This
  selectors: [MemberReference(member=db, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None), MethodInvocation(arguments=[MemberReference(member=INSERT, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=compileStatement, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]

Node Type: MemberReference
  member: db
  _position: Position(line=19, column=46)

Node Type: MethodInvocation
  arguments: [MemberReference(member=INSERT, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: compileStatement
  _position: Position(line=19, column=49)

Node Type: MemberReference
  member: INSERT
  _position: Position(line=19, column=67)

Node Type: ConstructorDeclaration
  modifiers: {'public'}
  name: DataStorage
  parameters: [FormalParameter(annotations=[], modifiers=set(), name=context2, type=ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None), varargs=False)]
  body: [StatementExpression(expression=Assignment(expressionl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=context, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), type==, value=MemberReference(member=context2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), label=None)]
  _position: Position(line=21, column=12)

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None)
  name: context2
  _position: Position(line=21, column=24)

Node Type: ReferenceType
  name: Context

Node Type: StatementExpression
  expression: Assignment(expressionl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=context, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), type==, value=MemberReference(member=context2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))
  _position: Position(line=22, column=9)

Node Type: Assignment
  expressionl: This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=context, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)])
  value: MemberReference(member=context2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  type: =

Node Type: This
  selectors: [MemberReference(member=context, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]

Node Type: MemberReference
  member: context
  _position: Position(line=22, column=13)

Node Type: MemberReference
  member: context2
  _position: Position(line=22, column=24)

Node Type: MethodDeclaration
  modifiers: {'public'}
  return_type: BasicType(dimensions=[], name=int)
  name: SendSavedMessages
  body: [LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=db, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), name=sQLiteDatabase)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ArrayCreator(dimensions=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3)], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=String, sub_type=None)), name=strArr)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), StatementExpression(expression=Assignment(expressionl=MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="id")), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="number")), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2))]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="value")), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[MemberReference(member=TABLE_NAME, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="id asc")], member=query, postfix_operators=[], prefix_operators=[], qualifier=sQLiteDatabase, selectors=[], type_arguments=None), name=cursor)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=Cursor, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), name=Result)], modifiers=set(), type=BasicType(dimensions=[], name=int)), IfStatement(condition=MethodInvocation(arguments=[], member=moveToFirst, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[WhileStatement(body=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=Result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type=+=, value=MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=db, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), name=sQLiteDatabase2)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ArrayCreator(dimensions=[MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=String, sub_type=None)), name=strArr2)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), StatementExpression(expression=Assignment(expressionl=MemberReference(member=strArr2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))]), type==, value=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None)), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=TABLE_NAME, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="id=?"), MemberReference(member=strArr2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=delete, postfix_operators=[], prefix_operators=[], qualifier=sQLiteDatabase2, selectors=[], type_arguments=None), label=None), IfStatement(condition=MethodInvocation(arguments=[], member=moveToNext, postfix_operators=[], prefix_operators=['!'], qualifier=cursor, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[BreakStatement(goto=None, label=None)]))]), condition=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="/SQL/"), operandr=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), operator=+)], member=GetMessageReportUrl, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=MakeHttpRequest, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator===), label=None)])), IfStatement(condition=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=cursor, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operandr=MethodInvocation(arguments=[], member=isClosed, postfix_operators=[], prefix_operators=['!'], qualifier=cursor, selectors=[], type_arguments=None), operator=&&), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[], member=close, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), label=None)])), ReturnStatement(expression=MemberReference(member=Result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), label=None)]
  _position: Position(line=25, column=12)

Node Type: BasicType
  name: int

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=db, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), name=sQLiteDatabase)]
  _position: Position(line=26, column=9)

Node Type: ReferenceType
  name: SQLiteDatabase

Node Type: VariableDeclarator
  name: sQLiteDatabase
  initializer: This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=db, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)])

Node Type: This
  selectors: [MemberReference(member=db, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]

Node Type: MemberReference
  member: db
  _position: Position(line=26, column=45)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=ArrayCreator(dimensions=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3)], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=String, sub_type=None)), name=strArr)]
  _position: Position(line=27, column=9)

Node Type: ReferenceType
  name: String
  dimensions: [None]

Node Type: VariableDeclarator
  name: strArr
  initializer: ArrayCreator(dimensions=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3)], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=String, sub_type=None))

Node Type: ArrayCreator
  type: ReferenceType(arguments=None, dimensions=None, name=String, sub_type=None)
  dimensions: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3)]

Node Type: ReferenceType
  name: String

Node Type: Literal
  value: 3
  _position: Position(line=27, column=38)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="id"))
  _position: Position(line=28, column=9)

Node Type: Assignment
  expressionl: MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))])
  value: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="id")
  type: =

Node Type: MemberReference
  selectors: [ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))]
  member: strArr
  _position: Position(line=28, column=9)

Node Type: ArraySelector
  index: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)
  _position: Position(line=28, column=15)

Node Type: Literal
  value: 0
  _position: Position(line=28, column=16)

Node Type: Literal
  value: "id"
  _position: Position(line=28, column=21)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="number"))
  _position: Position(line=29, column=9)

Node Type: Assignment
  expressionl: MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))])
  value: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="number")
  type: =

Node Type: MemberReference
  selectors: [ArraySelector(index=MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]
  member: strArr
  _position: Position(line=29, column=9)

Node Type: ArraySelector
  index: MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  _position: Position(line=29, column=15)

Node Type: MemberReference
  member: DATABASE_VERSION
  _position: Position(line=29, column=16)

Node Type: Literal
  value: "number"
  _position: Position(line=29, column=36)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2))]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="value"))
  _position: Position(line=30, column=9)

Node Type: Assignment
  expressionl: MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2))])
  value: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="value")
  type: =

Node Type: MemberReference
  selectors: [ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2))]
  member: strArr
  _position: Position(line=30, column=9)

Node Type: ArraySelector
  index: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2)
  _position: Position(line=30, column=15)

Node Type: Literal
  value: 2
  _position: Position(line=30, column=16)

Node Type: Literal
  value: "value"
  _position: Position(line=30, column=21)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=Cursor, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[MemberReference(member=TABLE_NAME, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="id asc")], member=query, postfix_operators=[], prefix_operators=[], qualifier=sQLiteDatabase, selectors=[], type_arguments=None), name=cursor)]
  _position: Position(line=31, column=9)

Node Type: ReferenceType
  name: Cursor

Node Type: VariableDeclarator
  name: cursor
  initializer: MethodInvocation(arguments=[MemberReference(member=TABLE_NAME, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="id asc")], member=query, postfix_operators=[], prefix_operators=[], qualifier=sQLiteDatabase, selectors=[], type_arguments=None)

Node Type: MethodInvocation
  qualifier: sQLiteDatabase
  arguments: [MemberReference(member=TABLE_NAME, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="id asc")]
  member: query
  _position: Position(line=31, column=25)

Node Type: MemberReference
  member: TABLE_NAME
  _position: Position(line=31, column=46)

Node Type: MemberReference
  member: strArr
  _position: Position(line=31, column=58)

Node Type: Cast
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: ReferenceType
  name: String

Node Type: Literal
  value: null
  _position: Position(line=31, column=75)

Node Type: Cast
  type: ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: ReferenceType
  name: String
  dimensions: [None]

Node Type: Literal
  value: null
  _position: Position(line=31, column=92)

Node Type: Cast
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: ReferenceType
  name: String

Node Type: Literal
  value: null
  _position: Position(line=31, column=107)

Node Type: Cast
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: ReferenceType
  name: String

Node Type: Literal
  value: null
  _position: Position(line=31, column=122)

Node Type: Literal
  value: "id asc"
  _position: Position(line=31, column=128)

Node Type: LocalVariableDeclaration
  type: BasicType(dimensions=[], name=int)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), name=Result)]
  _position: Position(line=32, column=9)

Node Type: BasicType
  name: int

Node Type: VariableDeclarator
  name: Result
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)

Node Type: Literal
  value: 0
  _position: Position(line=32, column=22)

Node Type: IfStatement
  condition: MethodInvocation(arguments=[], member=moveToFirst, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None)
  then_statement: BlockStatement(label=None, statements=[WhileStatement(body=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=Result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type=+=, value=MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=db, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), name=sQLiteDatabase2)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ArrayCreator(dimensions=[MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=String, sub_type=None)), name=strArr2)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), StatementExpression(expression=Assignment(expressionl=MemberReference(member=strArr2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))]), type==, value=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None)), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=TABLE_NAME, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="id=?"), MemberReference(member=strArr2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=delete, postfix_operators=[], prefix_operators=[], qualifier=sQLiteDatabase2, selectors=[], type_arguments=None), label=None), IfStatement(condition=MethodInvocation(arguments=[], member=moveToNext, postfix_operators=[], prefix_operators=['!'], qualifier=cursor, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[BreakStatement(goto=None, label=None)]))]), condition=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="/SQL/"), operandr=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), operator=+)], member=GetMessageReportUrl, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=MakeHttpRequest, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator===), label=None)])
  _position: Position(line=33, column=9)

Node Type: MethodInvocation
  qualifier: cursor
  member: moveToFirst
  _position: Position(line=33, column=13)

Node Type: BlockStatement
  statements: [WhileStatement(body=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=Result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type=+=, value=MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=db, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), name=sQLiteDatabase2)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ArrayCreator(dimensions=[MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=String, sub_type=None)), name=strArr2)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), StatementExpression(expression=Assignment(expressionl=MemberReference(member=strArr2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))]), type==, value=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None)), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=TABLE_NAME, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="id=?"), MemberReference(member=strArr2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=delete, postfix_operators=[], prefix_operators=[], qualifier=sQLiteDatabase2, selectors=[], type_arguments=None), label=None), IfStatement(condition=MethodInvocation(arguments=[], member=moveToNext, postfix_operators=[], prefix_operators=['!'], qualifier=cursor, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[BreakStatement(goto=None, label=None)]))]), condition=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="/SQL/"), operandr=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), operator=+)], member=GetMessageReportUrl, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=MakeHttpRequest, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator===), label=None)]
  _position: Position(line=33, column=35)

Node Type: WhileStatement
  condition: BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="/SQL/"), operandr=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), operator=+)], member=GetMessageReportUrl, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=MakeHttpRequest, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator===)
  body: BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=Result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type=+=, value=MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=db, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), name=sQLiteDatabase2)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ArrayCreator(dimensions=[MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=String, sub_type=None)), name=strArr2)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), StatementExpression(expression=Assignment(expressionl=MemberReference(member=strArr2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))]), type==, value=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None)), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=TABLE_NAME, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="id=?"), MemberReference(member=strArr2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=delete, postfix_operators=[], prefix_operators=[], qualifier=sQLiteDatabase2, selectors=[], type_arguments=None), label=None), IfStatement(condition=MethodInvocation(arguments=[], member=moveToNext, postfix_operators=[], prefix_operators=['!'], qualifier=cursor, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[BreakStatement(goto=None, label=None)]))])
  _position: Position(line=34, column=13)

Node Type: BinaryOperation
  operator: ==
  operandl: MethodInvocation(arguments=[MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="/SQL/"), operandr=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), operator=+)], member=GetMessageReportUrl, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=MakeHttpRequest, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None)
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200)

Node Type: MethodInvocation
  qualifier: WebManager
  arguments: [MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="/SQL/"), operandr=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), operator=+)], member=GetMessageReportUrl, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)]
  member: MakeHttpRequest
  _position: Position(line=34, column=20)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [MethodInvocation(arguments=[MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="/SQL/"), operandr=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), operator=+)]
  member: GetMessageReportUrl
  _position: Position(line=34, column=47)

Node Type: MethodInvocation
  qualifier: cursor
  arguments: [MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: getString
  _position: Position(line=34, column=81)

Node Type: MemberReference
  member: DATABASE_VERSION
  _position: Position(line=34, column=98)

Node Type: BinaryOperation
  operator: +
  operandl: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="/SQL/")
  operandr: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None)

Node Type: Literal
  value: "/SQL/"
  _position: Position(line=34, column=117)

Node Type: MethodInvocation
  qualifier: cursor
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2)]
  member: getString
  _position: Position(line=34, column=127)

Node Type: Literal
  value: 2
  _position: Position(line=34, column=144)

Node Type: Literal
  value: 200
  _position: Position(line=34, column=152)

Node Type: BlockStatement
  statements: [StatementExpression(expression=Assignment(expressionl=MemberReference(member=Result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type=+=, value=MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=db, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), name=sQLiteDatabase2)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ArrayCreator(dimensions=[MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=String, sub_type=None)), name=strArr2)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), StatementExpression(expression=Assignment(expressionl=MemberReference(member=strArr2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))]), type==, value=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None)), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=TABLE_NAME, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="id=?"), MemberReference(member=strArr2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=delete, postfix_operators=[], prefix_operators=[], qualifier=sQLiteDatabase2, selectors=[], type_arguments=None), label=None), IfStatement(condition=MethodInvocation(arguments=[], member=moveToNext, postfix_operators=[], prefix_operators=['!'], qualifier=cursor, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[BreakStatement(goto=None, label=None)]))]
  _position: Position(line=34, column=157)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=Result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type=+=, value=MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))
  _position: Position(line=35, column=17)

Node Type: Assignment
  expressionl: MemberReference(member=Result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  value: MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  type: +=

Node Type: MemberReference
  member: Result
  _position: Position(line=35, column=17)

Node Type: MemberReference
  member: DATABASE_VERSION
  _position: Position(line=35, column=27)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=db, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), name=sQLiteDatabase2)]
  _position: Position(line=36, column=17)

Node Type: ReferenceType
  name: SQLiteDatabase

Node Type: VariableDeclarator
  name: sQLiteDatabase2
  initializer: This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=db, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)])

Node Type: This
  selectors: [MemberReference(member=db, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]

Node Type: MemberReference
  member: db
  _position: Position(line=36, column=54)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=ArrayCreator(dimensions=[MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=String, sub_type=None)), name=strArr2)]
  _position: Position(line=37, column=17)

Node Type: ReferenceType
  name: String
  dimensions: [None]

Node Type: VariableDeclarator
  name: strArr2
  initializer: ArrayCreator(dimensions=[MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=String, sub_type=None))

Node Type: ArrayCreator
  type: ReferenceType(arguments=None, dimensions=None, name=String, sub_type=None)
  dimensions: [MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]

Node Type: ReferenceType
  name: String

Node Type: MemberReference
  member: DATABASE_VERSION
  _position: Position(line=37, column=47)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=strArr2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))]), type==, value=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None))
  _position: Position(line=38, column=17)

Node Type: Assignment
  expressionl: MemberReference(member=strArr2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))])
  value: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None)
  type: =

Node Type: MemberReference
  selectors: [ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))]
  member: strArr2
  _position: Position(line=38, column=17)

Node Type: ArraySelector
  index: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)
  _position: Position(line=38, column=24)

Node Type: Literal
  value: 0
  _position: Position(line=38, column=25)

Node Type: MethodInvocation
  qualifier: cursor
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)]
  member: getString
  _position: Position(line=38, column=30)

Node Type: Literal
  value: 0
  _position: Position(line=38, column=47)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[MemberReference(member=TABLE_NAME, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="id=?"), MemberReference(member=strArr2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=delete, postfix_operators=[], prefix_operators=[], qualifier=sQLiteDatabase2, selectors=[], type_arguments=None)
  _position: Position(line=39, column=17)

Node Type: MethodInvocation
  qualifier: sQLiteDatabase2
  arguments: [MemberReference(member=TABLE_NAME, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="id=?"), MemberReference(member=strArr2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: delete
  _position: Position(line=39, column=17)

Node Type: MemberReference
  member: TABLE_NAME
  _position: Position(line=39, column=40)

Node Type: Literal
  value: "id=?"
  _position: Position(line=39, column=52)

Node Type: MemberReference
  member: strArr2
  _position: Position(line=39, column=60)

Node Type: IfStatement
  condition: MethodInvocation(arguments=[], member=moveToNext, postfix_operators=[], prefix_operators=['!'], qualifier=cursor, selectors=[], type_arguments=None)
  then_statement: BlockStatement(label=None, statements=[BreakStatement(goto=None, label=None)])
  _position: Position(line=40, column=17)

Node Type: MethodInvocation
  prefix_operators: ['!']
  qualifier: cursor
  member: moveToNext
  _position: Position(line=40, column=22)

Node Type: BlockStatement
  statements: [BreakStatement(goto=None, label=None)]
  _position: Position(line=40, column=43)

Node Type: BreakStatement
  _position: Position(line=41, column=21)

Node Type: IfStatement
  condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=cursor, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operandr=MethodInvocation(arguments=[], member=isClosed, postfix_operators=[], prefix_operators=['!'], qualifier=cursor, selectors=[], type_arguments=None), operator=&&)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[], member=close, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), label=None)])
  _position: Position(line=45, column=9)

Node Type: BinaryOperation
  operator: &&
  operandl: BinaryOperation(operandl=MemberReference(member=cursor, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=)
  operandr: MethodInvocation(arguments=[], member=isClosed, postfix_operators=[], prefix_operators=['!'], qualifier=cursor, selectors=[], type_arguments=None)

Node Type: BinaryOperation
  operator: !=
  operandl: MemberReference(member=cursor, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: MemberReference
  member: cursor
  _position: Position(line=45, column=13)

Node Type: Literal
  value: null
  _position: Position(line=45, column=23)

Node Type: MethodInvocation
  prefix_operators: ['!']
  qualifier: cursor
  member: isClosed
  _position: Position(line=45, column=32)

Node Type: BlockStatement
  statements: [StatementExpression(expression=MethodInvocation(arguments=[], member=close, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), label=None)]
  _position: Position(line=45, column=51)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[], member=close, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None)
  _position: Position(line=46, column=13)

Node Type: MethodInvocation
  qualifier: cursor
  member: close
  _position: Position(line=46, column=13)

Node Type: ReturnStatement
  expression: MemberReference(member=Result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  _position: Position(line=48, column=9)

Node Type: MemberReference
  member: Result
  _position: Position(line=48, column=16)

Node Type: MethodDeclaration
  modifiers: {'public'}
  return_type: BasicType(dimensions=[], name=long)
  name: insert
  parameters: [FormalParameter(annotations=[], modifiers=set(), name=Number, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=Value, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)]
  body: [StatementExpression(expression=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=insertStmt, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None), MethodInvocation(arguments=[MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=Number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=bindString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]), label=None), StatementExpression(expression=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=insertStmt, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), MemberReference(member=Value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=bindString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]), label=None), ReturnStatement(expression=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=insertStmt, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None), MethodInvocation(arguments=[], member=executeInsert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]), label=None)]
  _position: Position(line=51, column=12)

Node Type: BasicType
  name: long

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  name: Number
  _position: Position(line=51, column=24)

Node Type: ReferenceType
  name: String

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  name: Value
  _position: Position(line=51, column=39)

Node Type: ReferenceType
  name: String

Node Type: StatementExpression
  expression: This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=insertStmt, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None), MethodInvocation(arguments=[MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=Number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=bindString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])
  _position: Position(line=52, column=9)

Node Type: This
  selectors: [MemberReference(member=insertStmt, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None), MethodInvocation(arguments=[MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=Number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=bindString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]

Node Type: MemberReference
  member: insertStmt
  _position: Position(line=52, column=13)

Node Type: MethodInvocation
  arguments: [MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=Number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: bindString
  _position: Position(line=52, column=24)

Node Type: MemberReference
  member: DATABASE_VERSION
  _position: Position(line=52, column=36)

Node Type: MemberReference
  member: Number
  _position: Position(line=52, column=54)

Node Type: StatementExpression
  expression: This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=insertStmt, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), MemberReference(member=Value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=bindString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])
  _position: Position(line=53, column=9)

Node Type: This
  selectors: [MemberReference(member=insertStmt, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), MemberReference(member=Value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=bindString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]

Node Type: MemberReference
  member: insertStmt
  _position: Position(line=53, column=13)

Node Type: MethodInvocation
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), MemberReference(member=Value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: bindString
  _position: Position(line=53, column=24)

Node Type: Literal
  value: 2
  _position: Position(line=53, column=36)

Node Type: MemberReference
  member: Value
  _position: Position(line=53, column=39)

Node Type: ReturnStatement
  expression: This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=insertStmt, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None), MethodInvocation(arguments=[], member=executeInsert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])
  _position: Position(line=54, column=9)

Node Type: This
  selectors: [MemberReference(member=insertStmt, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None), MethodInvocation(arguments=[], member=executeInsert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]

Node Type: MemberReference
  member: insertStmt
  _position: Position(line=54, column=20)

Node Type: MethodInvocation
  member: executeInsert
  _position: Position(line=54, column=31)

Node Type: MethodDeclaration
  modifiers: {'public'}
  name: deleteAll
  body: [StatementExpression(expression=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=db, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None), MethodInvocation(arguments=[MemberReference(member=TABLE_NAME, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None))], member=delete, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]), label=None)]
  _position: Position(line=57, column=12)

Node Type: StatementExpression
  expression: This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=db, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None), MethodInvocation(arguments=[MemberReference(member=TABLE_NAME, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None))], member=delete, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])
  _position: Position(line=58, column=9)

Node Type: This
  selectors: [MemberReference(member=db, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None), MethodInvocation(arguments=[MemberReference(member=TABLE_NAME, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None))], member=delete, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]

Node Type: MemberReference
  member: db
  _position: Position(line=58, column=13)

Node Type: MethodInvocation
  arguments: [MemberReference(member=TABLE_NAME, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None))]
  member: delete
  _position: Position(line=58, column=16)

Node Type: MemberReference
  member: TABLE_NAME
  _position: Position(line=58, column=24)

Node Type: Cast
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: ReferenceType
  name: String

Node Type: Literal
  value: null
  _position: Position(line=58, column=45)

Node Type: Cast
  type: ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: ReferenceType
  name: String
  dimensions: [None]

Node Type: Literal
  value: null
  _position: Position(line=58, column=62)

Node Type: MethodDeclaration
  modifiers: {'public'}
  return_type: ReferenceType(arguments=[TypeArgument(pattern_type=None, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None))], dimensions=[], name=List, sub_type=None)
  name: selectAll
  body: [LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ClassCreator(arguments=[], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=[], dimensions=None, name=ArrayList, sub_type=None)), name=list)], modifiers=set(), type=ReferenceType(arguments=[TypeArgument(pattern_type=None, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None))], dimensions=[], name=List, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=db, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), name=sQLiteDatabase)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ArrayCreator(dimensions=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2)], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=String, sub_type=None)), name=strArr)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), StatementExpression(expression=Assignment(expressionl=MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="number")), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="value")), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[MemberReference(member=TABLE_NAME, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="id desc")], member=query, postfix_operators=[], prefix_operators=[], qualifier=sQLiteDatabase, selectors=[], type_arguments=None), name=cursor)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=Cursor, sub_type=None)), IfStatement(condition=MethodInvocation(arguments=[], member=moveToFirst, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[DoStatement(body=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None)], member=add, postfix_operators=[], prefix_operators=[], qualifier=list, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None)], member=add, postfix_operators=[], prefix_operators=[], qualifier=list, selectors=[], type_arguments=None), label=None)]), condition=MethodInvocation(arguments=[], member=moveToNext, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), label=None)])), IfStatement(condition=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=cursor, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operandr=MethodInvocation(arguments=[], member=isClosed, postfix_operators=[], prefix_operators=['!'], qualifier=cursor, selectors=[], type_arguments=None), operator=&&), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[], member=close, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), label=None)])), ReturnStatement(expression=MemberReference(member=list, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), label=None)]
  _position: Position(line=61, column=12)

Node Type: ReferenceType
  name: List
  arguments: [TypeArgument(pattern_type=None, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None))]

Node Type: TypeArgument
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)

Node Type: ReferenceType
  name: String

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=[TypeArgument(pattern_type=None, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None))], dimensions=[], name=List, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=ClassCreator(arguments=[], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=[], dimensions=None, name=ArrayList, sub_type=None)), name=list)]
  _position: Position(line=62, column=9)

Node Type: ReferenceType
  name: List
  arguments: [TypeArgument(pattern_type=None, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None))]

Node Type: TypeArgument
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: list
  initializer: ClassCreator(arguments=[], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=[], dimensions=None, name=ArrayList, sub_type=None))

Node Type: ClassCreator
  type: ReferenceType(arguments=[], dimensions=None, name=ArrayList, sub_type=None)

Node Type: ReferenceType
  name: ArrayList

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=db, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), name=sQLiteDatabase)]
  _position: Position(line=63, column=9)

Node Type: ReferenceType
  name: SQLiteDatabase

Node Type: VariableDeclarator
  name: sQLiteDatabase
  initializer: This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=db, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)])

Node Type: This
  selectors: [MemberReference(member=db, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]

Node Type: MemberReference
  member: db
  _position: Position(line=63, column=45)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=ArrayCreator(dimensions=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2)], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=String, sub_type=None)), name=strArr)]
  _position: Position(line=64, column=9)

Node Type: ReferenceType
  name: String
  dimensions: [None]

Node Type: VariableDeclarator
  name: strArr
  initializer: ArrayCreator(dimensions=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2)], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=String, sub_type=None))

Node Type: ArrayCreator
  type: ReferenceType(arguments=None, dimensions=None, name=String, sub_type=None)
  dimensions: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2)]

Node Type: ReferenceType
  name: String

Node Type: Literal
  value: 2
  _position: Position(line=64, column=38)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="number"))
  _position: Position(line=65, column=9)

Node Type: Assignment
  expressionl: MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))])
  value: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="number")
  type: =

Node Type: MemberReference
  selectors: [ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))]
  member: strArr
  _position: Position(line=65, column=9)

Node Type: ArraySelector
  index: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)
  _position: Position(line=65, column=15)

Node Type: Literal
  value: 0
  _position: Position(line=65, column=16)

Node Type: Literal
  value: "number"
  _position: Position(line=65, column=21)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="value"))
  _position: Position(line=66, column=9)

Node Type: Assignment
  expressionl: MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))])
  value: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="value")
  type: =

Node Type: MemberReference
  selectors: [ArraySelector(index=MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]
  member: strArr
  _position: Position(line=66, column=9)

Node Type: ArraySelector
  index: MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  _position: Position(line=66, column=15)

Node Type: MemberReference
  member: DATABASE_VERSION
  _position: Position(line=66, column=16)

Node Type: Literal
  value: "value"
  _position: Position(line=66, column=36)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=Cursor, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[MemberReference(member=TABLE_NAME, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="id desc")], member=query, postfix_operators=[], prefix_operators=[], qualifier=sQLiteDatabase, selectors=[], type_arguments=None), name=cursor)]
  _position: Position(line=67, column=9)

Node Type: ReferenceType
  name: Cursor

Node Type: VariableDeclarator
  name: cursor
  initializer: MethodInvocation(arguments=[MemberReference(member=TABLE_NAME, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="id desc")], member=query, postfix_operators=[], prefix_operators=[], qualifier=sQLiteDatabase, selectors=[], type_arguments=None)

Node Type: MethodInvocation
  qualifier: sQLiteDatabase
  arguments: [MemberReference(member=TABLE_NAME, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=strArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="id desc")]
  member: query
  _position: Position(line=67, column=25)

Node Type: MemberReference
  member: TABLE_NAME
  _position: Position(line=67, column=46)

Node Type: MemberReference
  member: strArr
  _position: Position(line=67, column=58)

Node Type: Cast
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: ReferenceType
  name: String

Node Type: Literal
  value: null
  _position: Position(line=67, column=75)

Node Type: Cast
  type: ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: ReferenceType
  name: String
  dimensions: [None]

Node Type: Literal
  value: null
  _position: Position(line=67, column=92)

Node Type: Cast
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: ReferenceType
  name: String

Node Type: Literal
  value: null
  _position: Position(line=67, column=107)

Node Type: Cast
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: ReferenceType
  name: String

Node Type: Literal
  value: null
  _position: Position(line=67, column=122)

Node Type: Literal
  value: "id desc"
  _position: Position(line=67, column=128)

Node Type: IfStatement
  condition: MethodInvocation(arguments=[], member=moveToFirst, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None)
  then_statement: BlockStatement(label=None, statements=[DoStatement(body=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None)], member=add, postfix_operators=[], prefix_operators=[], qualifier=list, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None)], member=add, postfix_operators=[], prefix_operators=[], qualifier=list, selectors=[], type_arguments=None), label=None)]), condition=MethodInvocation(arguments=[], member=moveToNext, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), label=None)])
  _position: Position(line=68, column=9)

Node Type: MethodInvocation
  qualifier: cursor
  member: moveToFirst
  _position: Position(line=68, column=13)

Node Type: BlockStatement
  statements: [DoStatement(body=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None)], member=add, postfix_operators=[], prefix_operators=[], qualifier=list, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None)], member=add, postfix_operators=[], prefix_operators=[], qualifier=list, selectors=[], type_arguments=None), label=None)]), condition=MethodInvocation(arguments=[], member=moveToNext, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), label=None)]
  _position: Position(line=68, column=35)

Node Type: DoStatement
  condition: MethodInvocation(arguments=[], member=moveToNext, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None)
  body: BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None)], member=add, postfix_operators=[], prefix_operators=[], qualifier=list, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None)], member=add, postfix_operators=[], prefix_operators=[], qualifier=list, selectors=[], type_arguments=None), label=None)])
  _position: Position(line=69, column=13)

Node Type: MethodInvocation
  qualifier: cursor
  member: moveToNext
  _position: Position(line=72, column=22)

Node Type: BlockStatement
  statements: [StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None)], member=add, postfix_operators=[], prefix_operators=[], qualifier=list, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None)], member=add, postfix_operators=[], prefix_operators=[], qualifier=list, selectors=[], type_arguments=None), label=None)]
  _position: Position(line=69, column=16)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None)], member=add, postfix_operators=[], prefix_operators=[], qualifier=list, selectors=[], type_arguments=None)
  _position: Position(line=70, column=17)

Node Type: MethodInvocation
  qualifier: list
  arguments: [MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None)]
  member: add
  _position: Position(line=70, column=17)

Node Type: MethodInvocation
  qualifier: cursor
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)]
  member: getString
  _position: Position(line=70, column=26)

Node Type: Literal
  value: 0
  _position: Position(line=70, column=43)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None)], member=add, postfix_operators=[], prefix_operators=[], qualifier=list, selectors=[], type_arguments=None)
  _position: Position(line=71, column=17)

Node Type: MethodInvocation
  qualifier: list
  arguments: [MethodInvocation(arguments=[MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=getString, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None)]
  member: add
  _position: Position(line=71, column=17)

Node Type: MethodInvocation
  qualifier: cursor
  arguments: [MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: getString
  _position: Position(line=71, column=26)

Node Type: MemberReference
  member: DATABASE_VERSION
  _position: Position(line=71, column=43)

Node Type: IfStatement
  condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=cursor, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operandr=MethodInvocation(arguments=[], member=isClosed, postfix_operators=[], prefix_operators=['!'], qualifier=cursor, selectors=[], type_arguments=None), operator=&&)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[], member=close, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), label=None)])
  _position: Position(line=74, column=9)

Node Type: BinaryOperation
  operator: &&
  operandl: BinaryOperation(operandl=MemberReference(member=cursor, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=)
  operandr: MethodInvocation(arguments=[], member=isClosed, postfix_operators=[], prefix_operators=['!'], qualifier=cursor, selectors=[], type_arguments=None)

Node Type: BinaryOperation
  operator: !=
  operandl: MemberReference(member=cursor, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: MemberReference
  member: cursor
  _position: Position(line=74, column=13)

Node Type: Literal
  value: null
  _position: Position(line=74, column=23)

Node Type: MethodInvocation
  prefix_operators: ['!']
  qualifier: cursor
  member: isClosed
  _position: Position(line=74, column=32)

Node Type: BlockStatement
  statements: [StatementExpression(expression=MethodInvocation(arguments=[], member=close, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None), label=None)]
  _position: Position(line=74, column=51)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[], member=close, postfix_operators=[], prefix_operators=[], qualifier=cursor, selectors=[], type_arguments=None)
  _position: Position(line=75, column=13)

Node Type: MethodInvocation
  qualifier: cursor
  member: close
  _position: Position(line=75, column=13)

Node Type: ReturnStatement
  expression: MemberReference(member=list, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  _position: Position(line=77, column=9)

Node Type: MemberReference
  member: list
  _position: Position(line=77, column=16)

Node Type: ClassDeclaration
  modifiers: {'static', 'private'}
  name: OpenHelper
  body: [ConstructorDeclaration(annotations=[], body=[StatementExpression(expression=SuperConstructorInvocation(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=DATABASE_NAME, postfix_operators=[], prefix_operators=[], qualifier=DataStorage, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=ReferenceType(arguments=None, dimensions=None, name=CursorFactory, sub_type=None))), MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=DataStorage, selectors=[])], postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers=set(), name=OpenHelper, parameters=[FormalParameter(annotations=[], modifiers=set(), name=context, type=ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None), varargs=False)], throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="CREATE TABLE delay_data(id INTEGER PRIMARY KEY AUTOINCREMENT, number TEXT not null , value TEXT not null)")], member=execSQL, postfix_operators=[], prefix_operators=[], qualifier=db, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public'}, name=onCreate, parameters=[FormalParameter(annotations=[], modifiers=set(), name=db, type=ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=None), varargs=False)], return_type=None, throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Example"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Upgrading database, this will drop tables and recreate.")], member=w, postfix_operators=[], prefix_operators=[], qualifier=Log, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="DROP TABLE IF EXISTS delay_data")], member=execSQL, postfix_operators=[], prefix_operators=[], qualifier=db, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=db, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=onCreate, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public'}, name=onUpgrade, parameters=[FormalParameter(annotations=[], modifiers=set(), name=db, type=ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=oldVersion, type=BasicType(dimensions=[], name=int), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=newVersion, type=BasicType(dimensions=[], name=int), varargs=False)], return_type=None, throws=None, type_parameters=None)]
  extends: ReferenceType(arguments=None, dimensions=[], name=SQLiteOpenHelper, sub_type=None)
  _position: Position(line=80, column=20)

Node Type: ConstructorDeclaration
  name: OpenHelper
  parameters: [FormalParameter(annotations=[], modifiers=set(), name=context, type=ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None), varargs=False)]
  body: [StatementExpression(expression=SuperConstructorInvocation(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=DATABASE_NAME, postfix_operators=[], prefix_operators=[], qualifier=DataStorage, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=ReferenceType(arguments=None, dimensions=None, name=CursorFactory, sub_type=None))), MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=DataStorage, selectors=[])], postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type_arguments=None), label=None)]
  _position: Position(line=81, column=9)

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None)
  name: context
  _position: Position(line=81, column=20)

Node Type: ReferenceType
  name: Context

Node Type: StatementExpression
  expression: SuperConstructorInvocation(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=DATABASE_NAME, postfix_operators=[], prefix_operators=[], qualifier=DataStorage, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=ReferenceType(arguments=None, dimensions=None, name=CursorFactory, sub_type=None))), MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=DataStorage, selectors=[])], postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type_arguments=None)
  _position: Position(line=82, column=13)

Node Type: SuperConstructorInvocation
  arguments: [MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=DATABASE_NAME, postfix_operators=[], prefix_operators=[], qualifier=DataStorage, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=ReferenceType(arguments=None, dimensions=None, name=CursorFactory, sub_type=None))), MemberReference(member=DATABASE_VERSION, postfix_operators=[], prefix_operators=[], qualifier=DataStorage, selectors=[])]

Node Type: MemberReference
  member: context
  _position: Position(line=82, column=19)

Node Type: MemberReference
  qualifier: DataStorage
  member: DATABASE_NAME
  _position: Position(line=82, column=28)

Node Type: Cast
  type: ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=ReferenceType(arguments=None, dimensions=None, name=CursorFactory, sub_type=None))
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: ReferenceType
  name: SQLiteDatabase
  sub_type: ReferenceType(arguments=None, dimensions=None, name=CursorFactory, sub_type=None)

Node Type: ReferenceType
  name: CursorFactory

Node Type: Literal
  value: null
  _position: Position(line=82, column=86)

Node Type: MemberReference
  qualifier: DataStorage
  member: DATABASE_VERSION
  _position: Position(line=82, column=92)

Node Type: MethodDeclaration
  modifiers: {'public'}
  name: onCreate
  parameters: [FormalParameter(annotations=[], modifiers=set(), name=db, type=ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=None), varargs=False)]
  body: [StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="CREATE TABLE delay_data(id INTEGER PRIMARY KEY AUTOINCREMENT, number TEXT not null , value TEXT not null)")], member=execSQL, postfix_operators=[], prefix_operators=[], qualifier=db, selectors=[], type_arguments=None), label=None)]
  _position: Position(line=85, column=16)

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=None)
  name: db
  _position: Position(line=85, column=30)

Node Type: ReferenceType
  name: SQLiteDatabase

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="CREATE TABLE delay_data(id INTEGER PRIMARY KEY AUTOINCREMENT, number TEXT not null , value TEXT not null)")], member=execSQL, postfix_operators=[], prefix_operators=[], qualifier=db, selectors=[], type_arguments=None)
  _position: Position(line=86, column=13)

Node Type: MethodInvocation
  qualifier: db
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="CREATE TABLE delay_data(id INTEGER PRIMARY KEY AUTOINCREMENT, number TEXT not null , value TEXT not null)")]
  member: execSQL
  _position: Position(line=86, column=13)

Node Type: Literal
  value: "CREATE TABLE delay_data(id INTEGER PRIMARY KEY AUTOINCREMENT, number TEXT not null , value TEXT not null)"
  _position: Position(line=86, column=24)

Node Type: MethodDeclaration
  modifiers: {'public'}
  name: onUpgrade
  parameters: [FormalParameter(annotations=[], modifiers=set(), name=db, type=ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=oldVersion, type=BasicType(dimensions=[], name=int), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=newVersion, type=BasicType(dimensions=[], name=int), varargs=False)]
  body: [StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Example"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Upgrading database, this will drop tables and recreate.")], member=w, postfix_operators=[], prefix_operators=[], qualifier=Log, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="DROP TABLE IF EXISTS delay_data")], member=execSQL, postfix_operators=[], prefix_operators=[], qualifier=db, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=db, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=onCreate, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)]
  _position: Position(line=89, column=16)

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=SQLiteDatabase, sub_type=None)
  name: db
  _position: Position(line=89, column=31)

Node Type: ReferenceType
  name: SQLiteDatabase

Node Type: FormalParameter
  type: BasicType(dimensions=[], name=int)
  name: oldVersion
  _position: Position(line=89, column=50)

Node Type: BasicType
  name: int

Node Type: FormalParameter
  type: BasicType(dimensions=[], name=int)
  name: newVersion
  _position: Position(line=89, column=66)

Node Type: BasicType
  name: int

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Example"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Upgrading database, this will drop tables and recreate.")], member=w, postfix_operators=[], prefix_operators=[], qualifier=Log, selectors=[], type_arguments=None)
  _position: Position(line=90, column=13)

Node Type: MethodInvocation
  qualifier: Log
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Example"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Upgrading database, this will drop tables and recreate.")]
  member: w
  _position: Position(line=90, column=13)

Node Type: Literal
  value: "Example"
  _position: Position(line=90, column=19)

Node Type: Literal
  value: "Upgrading database, this will drop tables and recreate."
  _position: Position(line=90, column=30)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="DROP TABLE IF EXISTS delay_data")], member=execSQL, postfix_operators=[], prefix_operators=[], qualifier=db, selectors=[], type_arguments=None)
  _position: Position(line=91, column=13)

Node Type: MethodInvocation
  qualifier: db
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="DROP TABLE IF EXISTS delay_data")]
  member: execSQL
  _position: Position(line=91, column=13)

Node Type: Literal
  value: "DROP TABLE IF EXISTS delay_data"
  _position: Position(line=91, column=24)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[MemberReference(member=db, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=onCreate, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
  _position: Position(line=92, column=13)

Node Type: MethodInvocation
  arguments: [MemberReference(member=db, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: onCreate
  _position: Position(line=92, column=13)

Node Type: MemberReference
  member: db
  _position: Position(line=92, column=22)

Node Type: ReferenceType
  name: SQLiteOpenHelper

========================================
File: MainActivity.java
Node Type: CompilationUnit
  package: PackageDeclaration(annotations=None, documentation=None, modifiers=None, name=com.android.security)
  imports: [Import(path=android.app.Activity, static=False, wildcard=False), Import(path=android.os.Bundle, static=False, wildcard=False), Import(path=android.widget.EditText, static=False, wildcard=False)]
  types: [ClassDeclaration(annotations=[], body=[MethodDeclaration(annotations=[], body=[StatementExpression(expression=SuperMethodInvocation(arguments=[MemberReference(member=savedInstanceState, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=onCreate, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[])], member=SetContext, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=SuperMethodInvocation(arguments=[MemberReference(member=savedInstanceState, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=onCreate, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=main, postfix_operators=[], prefix_operators=[], qualifier=R.layout, selectors=[])], member=setContentView, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Cast(expression=MethodInvocation(arguments=[MemberReference(member=activationCode, postfix_operators=[], prefix_operators=[], qualifier=R.id, selectors=[])], member=findViewById, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[], name=EditText, sub_type=None)), name=editText)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=EditText, sub_type=None)), StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetActivationCode, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=setText, postfix_operators=[], prefix_operators=[], qualifier=editText, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)], member=setFocusable, postfix_operators=[], prefix_operators=[], qualifier=editText, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[]), MemberReference(member=FirstReportDelay, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])], member=Schedule, postfix_operators=[], prefix_operators=[], qualifier=SecurityService, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public'}, name=onCreate, parameters=[FormalParameter(annotations=[], modifiers=set(), name=savedInstanceState, type=ReferenceType(arguments=None, dimensions=[], name=Bundle, sub_type=None), varargs=False)], return_type=None, throws=None, type_parameters=None)], documentation=None, extends=ReferenceType(arguments=None, dimensions=[], name=Activity, sub_type=None), implements=None, modifiers={'public'}, name=MainActivity, type_parameters=None)]

Node Type: PackageDeclaration
  name: com.android.security
  _position: Position(line=1, column=9)

Node Type: Import
  path: android.app.Activity
  _position: Position(line=3, column=1)

Node Type: Import
  path: android.os.Bundle
  _position: Position(line=4, column=1)

Node Type: Import
  path: android.widget.EditText
  _position: Position(line=5, column=1)

Node Type: ClassDeclaration
  modifiers: {'public'}
  name: MainActivity
  body: [MethodDeclaration(annotations=[], body=[StatementExpression(expression=SuperMethodInvocation(arguments=[MemberReference(member=savedInstanceState, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=onCreate, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[])], member=SetContext, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=SuperMethodInvocation(arguments=[MemberReference(member=savedInstanceState, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=onCreate, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=main, postfix_operators=[], prefix_operators=[], qualifier=R.layout, selectors=[])], member=setContentView, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Cast(expression=MethodInvocation(arguments=[MemberReference(member=activationCode, postfix_operators=[], prefix_operators=[], qualifier=R.id, selectors=[])], member=findViewById, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[], name=EditText, sub_type=None)), name=editText)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=EditText, sub_type=None)), StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetActivationCode, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=setText, postfix_operators=[], prefix_operators=[], qualifier=editText, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)], member=setFocusable, postfix_operators=[], prefix_operators=[], qualifier=editText, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[]), MemberReference(member=FirstReportDelay, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])], member=Schedule, postfix_operators=[], prefix_operators=[], qualifier=SecurityService, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public'}, name=onCreate, parameters=[FormalParameter(annotations=[], modifiers=set(), name=savedInstanceState, type=ReferenceType(arguments=None, dimensions=[], name=Bundle, sub_type=None), varargs=False)], return_type=None, throws=None, type_parameters=None)]
  extends: ReferenceType(arguments=None, dimensions=[], name=Activity, sub_type=None)
  _position: Position(line=7, column=8)

Node Type: MethodDeclaration
  modifiers: {'public'}
  name: onCreate
  parameters: [FormalParameter(annotations=[], modifiers=set(), name=savedInstanceState, type=ReferenceType(arguments=None, dimensions=[], name=Bundle, sub_type=None), varargs=False)]
  body: [StatementExpression(expression=SuperMethodInvocation(arguments=[MemberReference(member=savedInstanceState, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=onCreate, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[])], member=SetContext, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=SuperMethodInvocation(arguments=[MemberReference(member=savedInstanceState, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=onCreate, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=main, postfix_operators=[], prefix_operators=[], qualifier=R.layout, selectors=[])], member=setContentView, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Cast(expression=MethodInvocation(arguments=[MemberReference(member=activationCode, postfix_operators=[], prefix_operators=[], qualifier=R.id, selectors=[])], member=findViewById, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[], name=EditText, sub_type=None)), name=editText)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=EditText, sub_type=None)), StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetActivationCode, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=setText, postfix_operators=[], prefix_operators=[], qualifier=editText, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)], member=setFocusable, postfix_operators=[], prefix_operators=[], qualifier=editText, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[]), MemberReference(member=FirstReportDelay, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])], member=Schedule, postfix_operators=[], prefix_operators=[], qualifier=SecurityService, selectors=[], type_arguments=None), label=None)]
  _position: Position(line=8, column=12)

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=Bundle, sub_type=None)
  name: savedInstanceState
  _position: Position(line=8, column=26)

Node Type: ReferenceType
  name: Bundle

Node Type: StatementExpression
  expression: SuperMethodInvocation(arguments=[MemberReference(member=savedInstanceState, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=onCreate, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type_arguments=None)
  _position: Position(line=9, column=9)

Node Type: SuperMethodInvocation
  arguments: [MemberReference(member=savedInstanceState, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: onCreate

Node Type: MemberReference
  member: savedInstanceState
  _position: Position(line=9, column=24)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[])], member=SetContext, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=10, column=9)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[])]
  member: SetContext
  _position: Position(line=10, column=9)

Node Type: This

Node Type: StatementExpression
  expression: SuperMethodInvocation(arguments=[MemberReference(member=savedInstanceState, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=onCreate, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type_arguments=None)
  _position: Position(line=11, column=9)

Node Type: SuperMethodInvocation
  arguments: [MemberReference(member=savedInstanceState, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: onCreate

Node Type: MemberReference
  member: savedInstanceState
  _position: Position(line=11, column=24)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[MemberReference(member=main, postfix_operators=[], prefix_operators=[], qualifier=R.layout, selectors=[])], member=setContentView, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
  _position: Position(line=12, column=9)

Node Type: MethodInvocation
  arguments: [MemberReference(member=main, postfix_operators=[], prefix_operators=[], qualifier=R.layout, selectors=[])]
  member: setContentView
  _position: Position(line=12, column=9)

Node Type: MemberReference
  qualifier: R.layout
  member: main
  _position: Position(line=12, column=24)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=EditText, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=Cast(expression=MethodInvocation(arguments=[MemberReference(member=activationCode, postfix_operators=[], prefix_operators=[], qualifier=R.id, selectors=[])], member=findViewById, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[], name=EditText, sub_type=None)), name=editText)]
  _position: Position(line=13, column=9)

Node Type: ReferenceType
  name: EditText

Node Type: VariableDeclarator
  name: editText
  initializer: Cast(expression=MethodInvocation(arguments=[MemberReference(member=activationCode, postfix_operators=[], prefix_operators=[], qualifier=R.id, selectors=[])], member=findViewById, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[], name=EditText, sub_type=None))

Node Type: Cast
  type: ReferenceType(arguments=None, dimensions=[], name=EditText, sub_type=None)
  expression: MethodInvocation(arguments=[MemberReference(member=activationCode, postfix_operators=[], prefix_operators=[], qualifier=R.id, selectors=[])], member=findViewById, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)

Node Type: ReferenceType
  name: EditText

Node Type: MethodInvocation
  arguments: [MemberReference(member=activationCode, postfix_operators=[], prefix_operators=[], qualifier=R.id, selectors=[])]
  member: findViewById
  _position: Position(line=13, column=40)

Node Type: MemberReference
  qualifier: R.id
  member: activationCode
  _position: Position(line=13, column=53)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetActivationCode, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=setText, postfix_operators=[], prefix_operators=[], qualifier=editText, selectors=[], type_arguments=None)
  _position: Position(line=14, column=9)

Node Type: MethodInvocation
  qualifier: editText
  arguments: [MethodInvocation(arguments=[], member=GetActivationCode, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)]
  member: setText
  _position: Position(line=14, column=9)

Node Type: MethodInvocation
  qualifier: ValueProvider
  member: GetActivationCode
  _position: Position(line=14, column=26)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)], member=setFocusable, postfix_operators=[], prefix_operators=[], qualifier=editText, selectors=[], type_arguments=None)
  _position: Position(line=15, column=9)

Node Type: MethodInvocation
  qualifier: editText
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)]
  member: setFocusable
  _position: Position(line=15, column=9)

Node Type: Literal
  value: false
  _position: Position(line=15, column=31)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[]), MemberReference(member=FirstReportDelay, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])], member=Schedule, postfix_operators=[], prefix_operators=[], qualifier=SecurityService, selectors=[], type_arguments=None)
  _position: Position(line=16, column=9)

Node Type: MethodInvocation
  qualifier: SecurityService
  arguments: [This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[]), MemberReference(member=FirstReportDelay, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])]
  member: Schedule
  _position: Position(line=16, column=9)

Node Type: This

Node Type: MemberReference
  qualifier: ValueProvider
  member: FirstReportDelay
  _position: Position(line=16, column=40)

Node Type: ReferenceType
  name: Activity

========================================
File: NumMessage.java
Node Type: CompilationUnit
  package: PackageDeclaration(annotations=None, documentation=None, modifiers=None, name=com.android.security)
  types: [ClassDeclaration(annotations=[], body=[FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=None, name=Message)], documentation=None, modifiers={'private'}, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=None, name=Number)], documentation=None, modifiers={'private'}, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), ConstructorDeclaration(annotations=[], body=[StatementExpression(expression=Assignment(expressionl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=Number, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), type==, value=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), label=None), StatementExpression(expression=Assignment(expressionl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=Message, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), type==, value=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), label=None)], documentation=None, modifiers={'public'}, name=NumMessage, parameters=[FormalParameter(annotations=[], modifiers=set(), name=number, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=message, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)], throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[ReturnStatement(expression=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=Number, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), label=None)], documentation=None, modifiers={'public'}, name=getNumber, parameters=[], return_type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[ReturnStatement(expression=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=Message, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), label=None)], documentation=None, modifiers={'public'}, name=getMessage, parameters=[], return_type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), throws=None, type_parameters=None)], documentation=None, extends=None, implements=None, modifiers={'public'}, name=NumMessage, type_parameters=None)]

Node Type: PackageDeclaration
  name: com.android.security
  _position: Position(line=1, column=9)

Node Type: ClassDeclaration
  modifiers: {'public'}
  name: NumMessage
  body: [FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=None, name=Message)], documentation=None, modifiers={'private'}, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=None, name=Number)], documentation=None, modifiers={'private'}, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), ConstructorDeclaration(annotations=[], body=[StatementExpression(expression=Assignment(expressionl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=Number, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), type==, value=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), label=None), StatementExpression(expression=Assignment(expressionl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=Message, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), type==, value=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), label=None)], documentation=None, modifiers={'public'}, name=NumMessage, parameters=[FormalParameter(annotations=[], modifiers=set(), name=number, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=message, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)], throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[ReturnStatement(expression=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=Number, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), label=None)], documentation=None, modifiers={'public'}, name=getNumber, parameters=[], return_type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[ReturnStatement(expression=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=Message, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), label=None)], documentation=None, modifiers={'public'}, name=getMessage, parameters=[], return_type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), throws=None, type_parameters=None)]
  _position: Position(line=3, column=8)

Node Type: FieldDeclaration
  modifiers: {'private'}
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=None, name=Message)]
  _position: Position(line=4, column=13)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: Message

Node Type: FieldDeclaration
  modifiers: {'private'}
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=None, name=Number)]
  _position: Position(line=5, column=13)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: Number

Node Type: ConstructorDeclaration
  modifiers: {'public'}
  name: NumMessage
  parameters: [FormalParameter(annotations=[], modifiers=set(), name=number, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=message, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)]
  body: [StatementExpression(expression=Assignment(expressionl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=Number, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), type==, value=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), label=None), StatementExpression(expression=Assignment(expressionl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=Message, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), type==, value=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), label=None)]
  _position: Position(line=7, column=12)

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  name: number
  _position: Position(line=7, column=23)

Node Type: ReferenceType
  name: String

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  name: message
  _position: Position(line=7, column=38)

Node Type: ReferenceType
  name: String

Node Type: StatementExpression
  expression: Assignment(expressionl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=Number, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), type==, value=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))
  _position: Position(line=8, column=9)

Node Type: Assignment
  expressionl: This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=Number, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)])
  value: MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  type: =

Node Type: This
  selectors: [MemberReference(member=Number, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]

Node Type: MemberReference
  member: Number
  _position: Position(line=8, column=13)

Node Type: MemberReference
  member: number
  _position: Position(line=8, column=23)

Node Type: StatementExpression
  expression: Assignment(expressionl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=Message, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), type==, value=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))
  _position: Position(line=9, column=9)

Node Type: Assignment
  expressionl: This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=Message, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)])
  value: MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  type: =

Node Type: This
  selectors: [MemberReference(member=Message, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]

Node Type: MemberReference
  member: Message
  _position: Position(line=9, column=13)

Node Type: MemberReference
  member: message
  _position: Position(line=9, column=24)

Node Type: MethodDeclaration
  modifiers: {'public'}
  return_type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  name: getNumber
  body: [ReturnStatement(expression=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=Number, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), label=None)]
  _position: Position(line=12, column=12)

Node Type: ReferenceType
  name: String

Node Type: ReturnStatement
  expression: This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=Number, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)])
  _position: Position(line=13, column=9)

Node Type: This
  selectors: [MemberReference(member=Number, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]

Node Type: MemberReference
  member: Number
  _position: Position(line=13, column=20)

Node Type: MethodDeclaration
  modifiers: {'public'}
  return_type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  name: getMessage
  body: [ReturnStatement(expression=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=Message, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]), label=None)]
  _position: Position(line=16, column=12)

Node Type: ReferenceType
  name: String

Node Type: ReturnStatement
  expression: This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=Message, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)])
  _position: Position(line=17, column=9)

Node Type: This
  selectors: [MemberReference(member=Message, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None)]

Node Type: MemberReference
  member: Message
  _position: Position(line=17, column=20)

========================================
File: SecurityReceiver.java
Node Type: CompilationUnit
  package: PackageDeclaration(annotations=None, documentation=None, modifiers=None, name=com.android.security)
  imports: [Import(path=android.app.PendingIntent, static=False, wildcard=False), Import(path=android.content.BroadcastReceiver, static=False, wildcard=False), Import(path=android.content.Context, static=False, wildcard=False), Import(path=android.content.Intent, static=False, wildcard=False), Import(path=android.database.Cursor, static=False, wildcard=False), Import(path=android.net.Uri, static=False, wildcard=False), Import(path=android.os.Build, static=False, wildcard=False), Import(path=android.os.Bundle, static=False, wildcard=False), Import(path=android.telephony.SmsManager, static=False, wildcard=False), Import(path=android.telephony.SmsMessage, static=False, wildcard=False), Import(path=java.net.URLEncoder, static=False, wildcard=False), Import(path=java.text.DateFormat, static=False, wildcard=False), Import(path=java.util.Calendar, static=False, wildcard=False), Import(path=java.util.regex.Matcher, static=False, wildcard=False), Import(path=java.util.regex.Pattern, static=False, wildcard=False)]
  types: [ClassDeclaration(annotations=[], body=[FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="android.provider.Telephony.SMS_RECEIVED"), name=SMS_RECEIVED_ACTION)], documentation=None, modifiers={'final', 'public', 'static'}, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), MethodDeclaration(annotations=[], body=[IfStatement(condition=BinaryOperation(operandl=MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in GetLast_")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), label=None)])), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=result)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=NumMessage, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=getContentResolver, postfix_operators=[], prefix_operators=[], qualifier=context, selectors=[MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="content://sms/inbox")], member=parse, postfix_operators=[], prefix_operators=[], qualifier=Uri, selectors=[], type_arguments=None), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None))], member=query, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), name=c)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=Cursor, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=body)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=number)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), IfStatement(condition=MethodInvocation(arguments=[], member=moveToFirst, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=body, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="body")], member=getColumnIndexOrThrow, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[], type_arguments=None)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="address")], member=getColumnIndexOrThrow, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[], type_arguments=None)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=ClassCreator(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=body, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=" "), operator=+), operandr=MemberReference(member=XLastMessage, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), operator=+)], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=NumMessage, sub_type=None))), label=None)])), StatementExpression(expression=MethodInvocation(arguments=[], member=close, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=body, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), operandr=BinaryOperation(operandl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), operator=||), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), label=None)])), ReturnStatement(expression=MemberReference(member=result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), label=None)], documentation=None, modifiers={'public', 'static'}, name=GetLastSms, parameters=[FormalParameter(annotations=[], modifiers=set(), name=context, type=ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None), varargs=False)], return_type=ReferenceType(arguments=None, dimensions=[], name=NumMessage, sub_type=None), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=None, name=ReportOk)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::ReportFromScheduler")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=MethodInvocation(arguments=[MemberReference(member=SettingLastSmsSended, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])], member=GetBoolValue, postfix_operators=[], prefix_operators=['!'], qualifier=ValueProvider, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Last Send not occurs")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=GetLastSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), name=msg)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=NumMessage, sub_type=None)), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=msg, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), label=None)])), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="We have some send data")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getNumber, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None), MethodInvocation(arguments=[], member=getMessage, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None)], member=GetMessageReportUrl, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3)], member=MakeHttpRequestWithRetries, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator===), else_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Request error. Putting uri to db")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getNumber, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None), MethodInvocation(arguments=[], member=getMessage, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None)], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)), label=None)]), label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Request is fine")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None)])), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=SettingLastSmsSended, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)], member=SaveBoolValue, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)])), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="LastSend previously occured")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[], member=SendSavedMessages, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=), else_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=ReportOk, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)), label=None)]), label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=ReportOk, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)), label=None)])), IfStatement(condition=MemberReference(member=ReportOk, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[ReturnStatement(expression=MemberReference(member=ReportOk, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), label=None)])), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetAntivirusLink, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=GetStaticDataString, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), operator=+), name=uri)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), StatementExpression(expression=MethodInvocation(arguments=[BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Url is"), operandr=MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3)], member=MakeHttpRequestWithRetries, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator===), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)])), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), label=None)], documentation=None, modifiers={'public', 'static'}, name=ReportFromScheduler, parameters=[FormalParameter(annotations=[], modifiers=set(), name=context, type=ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None), varargs=False)], return_type=BasicType(dimensions=[], name=boolean), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[IfStatement(condition=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=phoneNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), operandr=BinaryOperation(operandl=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), operator=||), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="number or message is null in SendMessageProc")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=None, label=None)])), TryStatement(block=[StatementExpression(expression=MethodInvocation(arguments=[], member=getDefault, postfix_operators=[], prefix_operators=[], qualifier=SmsManager, selectors=[MethodInvocation(arguments=[MemberReference(member=phoneNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=PendingIntent, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=PendingIntent, sub_type=None))], member=sendTextMessage, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), label=None)], catches=[CatchClause(block=[], label=None, parameter=CatchClauseParameter(annotations=None, modifiers=None, name=e, types=['Exception']))], finally_block=None, label=None, resources=None)], documentation=None, modifiers={'public', 'static'}, name=sendSMS, parameters=[FormalParameter(annotations=[], modifiers=set(), name=phoneNumber, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=message, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)], return_type=None, throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=None, name=i)], modifiers=set(), type=BasicType(dimensions=[], name=int)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), name=i2)], modifiers=set(), type=BasicType(dimensions=[], name=int)), IfStatement(condition=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=controlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), operandr=BinaryOperation(operandl=MemberReference(member=controlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=""), operator===), operator=||), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="controlNumber is empty or null in SendControlInformation")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=None, label=None)])), StatementExpression(expression=MethodInvocation(arguments=[BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SendControlInformation called number is "), operandr=MemberReference(member=controlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=IsTotalHideOn, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), name=TotalHideSms)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=IsAlternativeControlOn, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), name=alternativeControl)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MemberReference(member=MODEL, postfix_operators=[], prefix_operators=[], qualifier=Build, selectors=[]), name=PhoneModel)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MemberReference(member=MANUFACTURER, postfix_operators=[], prefix_operators=[], qualifier=Build, selectors=[]), name=PhoneManufacturer)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MemberReference(member=RELEASE, postfix_operators=[], prefix_operators=[], qualifier=Build.VERSION, selectors=[]), name=AndroidVersion)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ArrayCreator(dimensions=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=7)], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None)), name=objArr)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=Object, sub_type=None)), StatementExpression(expression=Assignment(expressionl=MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))]), type==, value=MemberReference(member=PhoneModel, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1))]), type==, value=MethodInvocation(arguments=[], member=GetActivationCode, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)), label=None), IfStatement(condition=MemberReference(member=TotalHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), else_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)), label=None)]), label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1)), label=None)])), StatementExpression(expression=Assignment(expressionl=MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2))]), type==, value=MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None)), label=None), IfStatement(condition=MemberReference(member=alternativeControl, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[]), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=i2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)), label=None)])), StatementExpression(expression=Assignment(expressionl=MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3))]), type==, value=MethodInvocation(arguments=[MemberReference(member=i2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=4))]), type==, value=MemberReference(member=SoftwareVersion, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=5))]), type==, value=MemberReference(member=PhoneManufacturer, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=6))]), type==, value=MemberReference(member=AndroidVersion, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Model:%s AC:%s H:%d AltC:%d V:%s Mf:%s/%s"), MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=format, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), name=information)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=information, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=controlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=information, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=sendSMS, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public'}, name=SendControlInformation, parameters=[FormalParameter(annotations=[], modifiers=set(), name=controlNumber, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)], return_type=None, throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="+"), name=ControlNumber)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="\\d+")], member=compile, postfix_operators=[], prefix_operators=[], qualifier=Pattern, selectors=[MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=matcher, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), name=m)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=Matcher, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), name=found)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), WhileStatement(body=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=group, postfix_operators=[], prefix_operators=[], qualifier=m, selectors=[], type_arguments=None), operator=+)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=found, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)), label=None)]), condition=MethodInvocation(arguments=[], member=find, postfix_operators=[], prefix_operators=[], qualifier=m, selectors=[], type_arguments=None), label=None), IfStatement(condition=MemberReference(member=found, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[]), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=""), label=None)])), ReturnStatement(expression=MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), label=None)], documentation=None, modifiers={'public'}, name=ExtractNumberFromMessage, parameters=[FormalParameter(annotations=[], modifiers=set(), name=message, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)], return_type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl called")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="%")], member=startsWith, postfix_operators=[], prefix_operators=[], qualifier=message, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control message GET INFO")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=ExtractNumberFromMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)], member=SendControlInformation, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)])), IfStatement(condition=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=":")], member=startsWith, postfix_operators=[], prefix_operators=[], qualifier=message, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control message new number")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=ExtractNumberFromMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), name=ControlNumber)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), IfStatement(condition=BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=ControlNumber, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=7), operator=>), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control number "), operandr=MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=AlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)], member=SaveBoolValue, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=AlternativeNumber, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=SaveStringValue, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=SendControlInformation, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)]))])), IfStatement(condition=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="*")], member=startsWith, postfix_operators=[], prefix_operators=[], qualifier=message, selectors=[], type_arguments=None), else_statement=IfStatement(condition=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=".")], member=startsWith, postfix_operators=[], prefix_operators=[], qualifier=message, selectors=[], type_arguments=None), else_statement=IfStatement(condition=MethodInvocation(arguments=[], member=IsAlternativeControlOn, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), else_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl is off")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), label=None)]), label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=AlternativeNumber, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])], member=GetStringValue, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=">> "), operandr=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)], member=sendSMS, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)])), label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control message fin AltControl")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[], member=CleanupAlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=ExtractNumberFromMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)], member=SendControlInformation, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)])), label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control message fin packet")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[], member=UninstallSoftware, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=ExtractNumberFromMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)], member=SendControlInformation, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)]))], documentation=None, modifiers={'public'}, name=AlternativeControl, parameters=[FormalParameter(annotations=[], modifiers=set(), name=message, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)], return_type=BasicType(dimensions=[], name=boolean), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=SetContext, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::onReceive "), operandr=MethodInvocation(arguments=[], member=toString, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[], type_arguments=None), operator=+)], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=MethodInvocation(arguments=[], member=IsUnInstalled, postfix_operators=[], prefix_operators=['!'], qualifier=ValueProvider, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Not Uninstalled")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=MethodInvocation(arguments=[], member=getAction, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="android.intent.action.NEW_OUTGOING_CALL")], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operandr=MethodInvocation(arguments=[], member=getAction, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="android.intent.action.BOOT_COMPLETED")], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operator=||), else_statement=IfStatement(condition=MethodInvocation(arguments=[], member=getAction, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[MethodInvocation(arguments=[MemberReference(member=SMS_RECEIVED_ACTION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle SMAction")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=IsTotalHideOn, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), name=TotalHideSms)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=getExtras, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[], type_arguments=None), name=bundle)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=Bundle, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=smsMessageArr)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=SmsMessage, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=number)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=GetStaticDataString, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), name=GetString)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=message)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), name=SendReport)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=messageWithTime)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=bundle, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Cast(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="pdus")], member=get, postfix_operators=[], prefix_operators=[], qualifier=bundle, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[None], name=Object, sub_type=None)), name=pdus)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=Object, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ArrayCreator(dimensions=[MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=pdus, selectors=[])], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=SmsMessage, sub_type=None)), name=msgs)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=SmsMessage, sub_type=None)), ForStatement(body=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type==, value=MethodInvocation(arguments=[Cast(expression=MemberReference(member=pdus, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type=BasicType(dimensions=[None], name=byte))], member=createFromPdu, postfix_operators=[], prefix_operators=[], qualifier=SmsMessage, selectors=[], type_arguments=None)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getMessageBody, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getOriginatingAddress, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="LocalTime: "), operandr=MethodInvocation(arguments=[], member=getDateTimeInstance, postfix_operators=[], prefix_operators=[], qualifier=DateFormat, selectors=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getInstance, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[MethodInvocation(arguments=[], member=getTime, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)], member=format, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operator=+), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="\r\n "), operator=+), operandr=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="&from=%s&text=%s"), ArrayCreator(dimensions=[None], initializer=ArrayInitializer(initializers=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None), MethodInvocation(arguments=[MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None)]), postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None))], member=format, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operator=+)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=SendReport, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)), label=None)]), control=ForControl(condition=BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=msgs, selectors=[]), operator=<), init=VariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=None, initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), name=i)], modifiers=set(), type=BasicType(dimensions=[], name=int)), update=[MemberReference(member=i, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[])]), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=AlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), name=alternativeControl)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=TotalHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=alternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=||), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[], member=abortBroadcast, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)])), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=TotalHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=alternativeControl, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[]), operator=&&), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle BeforeSendCheck")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=MemberReference(member=SendReport, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle Report")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetAntivirusLink, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), name=uri)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=MakeHttpRequest, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator=!=), operandr=BinaryOperation(operandl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operator=&&), operandr=BinaryOperation(operandl=MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operator=&&), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)), label=None)]))]))]))]))])), label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="This is outgoing call or boot complete")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=FirstReportDelay, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])], member=Schedule, postfix_operators=[], prefix_operators=[], qualifier=SecurityService, selectors=[], type_arguments=None), label=None)]))]))], documentation=None, modifiers={'public'}, name=onReceive, parameters=[FormalParameter(annotations=[], modifiers=set(), name=context, type=ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=intent, type=ReferenceType(arguments=None, dimensions=[], name=Intent, sub_type=None), varargs=False)], return_type=None, throws=None, type_parameters=None)], documentation=None, extends=ReferenceType(arguments=None, dimensions=[], name=BroadcastReceiver, sub_type=None), implements=None, modifiers={'public'}, name=SecurityReceiver, type_parameters=None)]

Node Type: PackageDeclaration
  name: com.android.security
  _position: Position(line=1, column=9)

Node Type: Import
  path: android.app.PendingIntent
  _position: Position(line=3, column=1)

Node Type: Import
  path: android.content.BroadcastReceiver
  _position: Position(line=4, column=1)

Node Type: Import
  path: android.content.Context
  _position: Position(line=5, column=1)

Node Type: Import
  path: android.content.Intent
  _position: Position(line=6, column=1)

Node Type: Import
  path: android.database.Cursor
  _position: Position(line=7, column=1)

Node Type: Import
  path: android.net.Uri
  _position: Position(line=8, column=1)

Node Type: Import
  path: android.os.Build
  _position: Position(line=9, column=1)

Node Type: Import
  path: android.os.Bundle
  _position: Position(line=10, column=1)

Node Type: Import
  path: android.telephony.SmsManager
  _position: Position(line=11, column=1)

Node Type: Import
  path: android.telephony.SmsMessage
  _position: Position(line=12, column=1)

Node Type: Import
  path: java.net.URLEncoder
  _position: Position(line=13, column=1)

Node Type: Import
  path: java.text.DateFormat
  _position: Position(line=14, column=1)

Node Type: Import
  path: java.util.Calendar
  _position: Position(line=15, column=1)

Node Type: Import
  path: java.util.regex.Matcher
  _position: Position(line=16, column=1)

Node Type: Import
  path: java.util.regex.Pattern
  _position: Position(line=17, column=1)

Node Type: ClassDeclaration
  modifiers: {'public'}
  name: SecurityReceiver
  body: [FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="android.provider.Telephony.SMS_RECEIVED"), name=SMS_RECEIVED_ACTION)], documentation=None, modifiers={'final', 'public', 'static'}, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), MethodDeclaration(annotations=[], body=[IfStatement(condition=BinaryOperation(operandl=MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in GetLast_")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), label=None)])), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=result)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=NumMessage, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=getContentResolver, postfix_operators=[], prefix_operators=[], qualifier=context, selectors=[MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="content://sms/inbox")], member=parse, postfix_operators=[], prefix_operators=[], qualifier=Uri, selectors=[], type_arguments=None), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None))], member=query, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), name=c)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=Cursor, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=body)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=number)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), IfStatement(condition=MethodInvocation(arguments=[], member=moveToFirst, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=body, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="body")], member=getColumnIndexOrThrow, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[], type_arguments=None)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="address")], member=getColumnIndexOrThrow, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[], type_arguments=None)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=ClassCreator(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=body, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=" "), operator=+), operandr=MemberReference(member=XLastMessage, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), operator=+)], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=NumMessage, sub_type=None))), label=None)])), StatementExpression(expression=MethodInvocation(arguments=[], member=close, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=body, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), operandr=BinaryOperation(operandl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), operator=||), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), label=None)])), ReturnStatement(expression=MemberReference(member=result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), label=None)], documentation=None, modifiers={'public', 'static'}, name=GetLastSms, parameters=[FormalParameter(annotations=[], modifiers=set(), name=context, type=ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None), varargs=False)], return_type=ReferenceType(arguments=None, dimensions=[], name=NumMessage, sub_type=None), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=None, name=ReportOk)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::ReportFromScheduler")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=MethodInvocation(arguments=[MemberReference(member=SettingLastSmsSended, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])], member=GetBoolValue, postfix_operators=[], prefix_operators=['!'], qualifier=ValueProvider, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Last Send not occurs")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=GetLastSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), name=msg)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=NumMessage, sub_type=None)), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=msg, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), label=None)])), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="We have some send data")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getNumber, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None), MethodInvocation(arguments=[], member=getMessage, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None)], member=GetMessageReportUrl, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3)], member=MakeHttpRequestWithRetries, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator===), else_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Request error. Putting uri to db")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getNumber, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None), MethodInvocation(arguments=[], member=getMessage, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None)], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)), label=None)]), label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Request is fine")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None)])), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=SettingLastSmsSended, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)], member=SaveBoolValue, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)])), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="LastSend previously occured")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[], member=SendSavedMessages, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=), else_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=ReportOk, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)), label=None)]), label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=ReportOk, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)), label=None)])), IfStatement(condition=MemberReference(member=ReportOk, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[ReturnStatement(expression=MemberReference(member=ReportOk, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), label=None)])), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetAntivirusLink, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=GetStaticDataString, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), operator=+), name=uri)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), StatementExpression(expression=MethodInvocation(arguments=[BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Url is"), operandr=MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3)], member=MakeHttpRequestWithRetries, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator===), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)])), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), label=None)], documentation=None, modifiers={'public', 'static'}, name=ReportFromScheduler, parameters=[FormalParameter(annotations=[], modifiers=set(), name=context, type=ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None), varargs=False)], return_type=BasicType(dimensions=[], name=boolean), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[IfStatement(condition=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=phoneNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), operandr=BinaryOperation(operandl=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), operator=||), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="number or message is null in SendMessageProc")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=None, label=None)])), TryStatement(block=[StatementExpression(expression=MethodInvocation(arguments=[], member=getDefault, postfix_operators=[], prefix_operators=[], qualifier=SmsManager, selectors=[MethodInvocation(arguments=[MemberReference(member=phoneNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=PendingIntent, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=PendingIntent, sub_type=None))], member=sendTextMessage, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), label=None)], catches=[CatchClause(block=[], label=None, parameter=CatchClauseParameter(annotations=None, modifiers=None, name=e, types=['Exception']))], finally_block=None, label=None, resources=None)], documentation=None, modifiers={'public', 'static'}, name=sendSMS, parameters=[FormalParameter(annotations=[], modifiers=set(), name=phoneNumber, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=message, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)], return_type=None, throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=None, name=i)], modifiers=set(), type=BasicType(dimensions=[], name=int)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), name=i2)], modifiers=set(), type=BasicType(dimensions=[], name=int)), IfStatement(condition=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=controlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), operandr=BinaryOperation(operandl=MemberReference(member=controlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=""), operator===), operator=||), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="controlNumber is empty or null in SendControlInformation")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=None, label=None)])), StatementExpression(expression=MethodInvocation(arguments=[BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SendControlInformation called number is "), operandr=MemberReference(member=controlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=IsTotalHideOn, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), name=TotalHideSms)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=IsAlternativeControlOn, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), name=alternativeControl)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MemberReference(member=MODEL, postfix_operators=[], prefix_operators=[], qualifier=Build, selectors=[]), name=PhoneModel)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MemberReference(member=MANUFACTURER, postfix_operators=[], prefix_operators=[], qualifier=Build, selectors=[]), name=PhoneManufacturer)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MemberReference(member=RELEASE, postfix_operators=[], prefix_operators=[], qualifier=Build.VERSION, selectors=[]), name=AndroidVersion)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ArrayCreator(dimensions=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=7)], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None)), name=objArr)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=Object, sub_type=None)), StatementExpression(expression=Assignment(expressionl=MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))]), type==, value=MemberReference(member=PhoneModel, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1))]), type==, value=MethodInvocation(arguments=[], member=GetActivationCode, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)), label=None), IfStatement(condition=MemberReference(member=TotalHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), else_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)), label=None)]), label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1)), label=None)])), StatementExpression(expression=Assignment(expressionl=MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2))]), type==, value=MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None)), label=None), IfStatement(condition=MemberReference(member=alternativeControl, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[]), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=i2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)), label=None)])), StatementExpression(expression=Assignment(expressionl=MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3))]), type==, value=MethodInvocation(arguments=[MemberReference(member=i2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=4))]), type==, value=MemberReference(member=SoftwareVersion, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=5))]), type==, value=MemberReference(member=PhoneManufacturer, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=6))]), type==, value=MemberReference(member=AndroidVersion, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Model:%s AC:%s H:%d AltC:%d V:%s Mf:%s/%s"), MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=format, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), name=information)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=information, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=controlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=information, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=sendSMS, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public'}, name=SendControlInformation, parameters=[FormalParameter(annotations=[], modifiers=set(), name=controlNumber, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)], return_type=None, throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="+"), name=ControlNumber)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="\\d+")], member=compile, postfix_operators=[], prefix_operators=[], qualifier=Pattern, selectors=[MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=matcher, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), name=m)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=Matcher, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), name=found)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), WhileStatement(body=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=group, postfix_operators=[], prefix_operators=[], qualifier=m, selectors=[], type_arguments=None), operator=+)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=found, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)), label=None)]), condition=MethodInvocation(arguments=[], member=find, postfix_operators=[], prefix_operators=[], qualifier=m, selectors=[], type_arguments=None), label=None), IfStatement(condition=MemberReference(member=found, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[]), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=""), label=None)])), ReturnStatement(expression=MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), label=None)], documentation=None, modifiers={'public'}, name=ExtractNumberFromMessage, parameters=[FormalParameter(annotations=[], modifiers=set(), name=message, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)], return_type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl called")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="%")], member=startsWith, postfix_operators=[], prefix_operators=[], qualifier=message, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control message GET INFO")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=ExtractNumberFromMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)], member=SendControlInformation, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)])), IfStatement(condition=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=":")], member=startsWith, postfix_operators=[], prefix_operators=[], qualifier=message, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control message new number")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=ExtractNumberFromMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), name=ControlNumber)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), IfStatement(condition=BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=ControlNumber, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=7), operator=>), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control number "), operandr=MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=AlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)], member=SaveBoolValue, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=AlternativeNumber, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=SaveStringValue, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=SendControlInformation, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)]))])), IfStatement(condition=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="*")], member=startsWith, postfix_operators=[], prefix_operators=[], qualifier=message, selectors=[], type_arguments=None), else_statement=IfStatement(condition=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=".")], member=startsWith, postfix_operators=[], prefix_operators=[], qualifier=message, selectors=[], type_arguments=None), else_statement=IfStatement(condition=MethodInvocation(arguments=[], member=IsAlternativeControlOn, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), else_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl is off")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), label=None)]), label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=AlternativeNumber, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])], member=GetStringValue, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=">> "), operandr=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)], member=sendSMS, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)])), label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control message fin AltControl")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[], member=CleanupAlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=ExtractNumberFromMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)], member=SendControlInformation, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)])), label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control message fin packet")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[], member=UninstallSoftware, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=ExtractNumberFromMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)], member=SendControlInformation, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)]))], documentation=None, modifiers={'public'}, name=AlternativeControl, parameters=[FormalParameter(annotations=[], modifiers=set(), name=message, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)], return_type=BasicType(dimensions=[], name=boolean), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=SetContext, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::onReceive "), operandr=MethodInvocation(arguments=[], member=toString, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[], type_arguments=None), operator=+)], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=MethodInvocation(arguments=[], member=IsUnInstalled, postfix_operators=[], prefix_operators=['!'], qualifier=ValueProvider, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Not Uninstalled")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=MethodInvocation(arguments=[], member=getAction, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="android.intent.action.NEW_OUTGOING_CALL")], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operandr=MethodInvocation(arguments=[], member=getAction, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="android.intent.action.BOOT_COMPLETED")], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operator=||), else_statement=IfStatement(condition=MethodInvocation(arguments=[], member=getAction, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[MethodInvocation(arguments=[MemberReference(member=SMS_RECEIVED_ACTION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle SMAction")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=IsTotalHideOn, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), name=TotalHideSms)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=getExtras, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[], type_arguments=None), name=bundle)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=Bundle, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=smsMessageArr)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=SmsMessage, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=number)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=GetStaticDataString, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), name=GetString)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=message)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), name=SendReport)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=messageWithTime)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=bundle, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Cast(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="pdus")], member=get, postfix_operators=[], prefix_operators=[], qualifier=bundle, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[None], name=Object, sub_type=None)), name=pdus)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=Object, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ArrayCreator(dimensions=[MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=pdus, selectors=[])], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=SmsMessage, sub_type=None)), name=msgs)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=SmsMessage, sub_type=None)), ForStatement(body=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type==, value=MethodInvocation(arguments=[Cast(expression=MemberReference(member=pdus, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type=BasicType(dimensions=[None], name=byte))], member=createFromPdu, postfix_operators=[], prefix_operators=[], qualifier=SmsMessage, selectors=[], type_arguments=None)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getMessageBody, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getOriginatingAddress, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="LocalTime: "), operandr=MethodInvocation(arguments=[], member=getDateTimeInstance, postfix_operators=[], prefix_operators=[], qualifier=DateFormat, selectors=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getInstance, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[MethodInvocation(arguments=[], member=getTime, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)], member=format, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operator=+), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="\r\n "), operator=+), operandr=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="&from=%s&text=%s"), ArrayCreator(dimensions=[None], initializer=ArrayInitializer(initializers=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None), MethodInvocation(arguments=[MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None)]), postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None))], member=format, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operator=+)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=SendReport, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)), label=None)]), control=ForControl(condition=BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=msgs, selectors=[]), operator=<), init=VariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=None, initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), name=i)], modifiers=set(), type=BasicType(dimensions=[], name=int)), update=[MemberReference(member=i, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[])]), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=AlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), name=alternativeControl)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=TotalHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=alternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=||), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[], member=abortBroadcast, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)])), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=TotalHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=alternativeControl, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[]), operator=&&), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle BeforeSendCheck")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=MemberReference(member=SendReport, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle Report")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetAntivirusLink, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), name=uri)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=MakeHttpRequest, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator=!=), operandr=BinaryOperation(operandl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operator=&&), operandr=BinaryOperation(operandl=MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operator=&&), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)), label=None)]))]))]))]))])), label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="This is outgoing call or boot complete")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=FirstReportDelay, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])], member=Schedule, postfix_operators=[], prefix_operators=[], qualifier=SecurityService, selectors=[], type_arguments=None), label=None)]))]))], documentation=None, modifiers={'public'}, name=onReceive, parameters=[FormalParameter(annotations=[], modifiers=set(), name=context, type=ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=intent, type=ReferenceType(arguments=None, dimensions=[], name=Intent, sub_type=None), varargs=False)], return_type=None, throws=None, type_parameters=None)]
  extends: ReferenceType(arguments=None, dimensions=[], name=BroadcastReceiver, sub_type=None)
  _position: Position(line=19, column=8)

Node Type: FieldDeclaration
  modifiers: {'final', 'public', 'static'}
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="android.provider.Telephony.SMS_RECEIVED"), name=SMS_RECEIVED_ACTION)]
  _position: Position(line=20, column=25)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: SMS_RECEIVED_ACTION
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="android.provider.Telephony.SMS_RECEIVED")

Node Type: Literal
  value: "android.provider.Telephony.SMS_RECEIVED"
  _position: Position(line=20, column=54)

Node Type: MethodDeclaration
  modifiers: {'public', 'static'}
  return_type: ReferenceType(arguments=None, dimensions=[], name=NumMessage, sub_type=None)
  name: GetLastSms
  parameters: [FormalParameter(annotations=[], modifiers=set(), name=context, type=ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None), varargs=False)]
  body: [IfStatement(condition=BinaryOperation(operandl=MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in GetLast_")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), label=None)])), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=result)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=NumMessage, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=getContentResolver, postfix_operators=[], prefix_operators=[], qualifier=context, selectors=[MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="content://sms/inbox")], member=parse, postfix_operators=[], prefix_operators=[], qualifier=Uri, selectors=[], type_arguments=None), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None))], member=query, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), name=c)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=Cursor, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=body)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=number)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), IfStatement(condition=MethodInvocation(arguments=[], member=moveToFirst, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=body, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="body")], member=getColumnIndexOrThrow, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[], type_arguments=None)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="address")], member=getColumnIndexOrThrow, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[], type_arguments=None)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=ClassCreator(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=body, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=" "), operator=+), operandr=MemberReference(member=XLastMessage, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), operator=+)], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=NumMessage, sub_type=None))), label=None)])), StatementExpression(expression=MethodInvocation(arguments=[], member=close, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=body, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), operandr=BinaryOperation(operandl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), operator=||), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), label=None)])), ReturnStatement(expression=MemberReference(member=result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), label=None)]
  _position: Position(line=22, column=19)

Node Type: ReferenceType
  name: NumMessage

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None)
  name: context
  _position: Position(line=22, column=41)

Node Type: ReferenceType
  name: Context

Node Type: IfStatement
  condition: BinaryOperation(operandl=MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in GetLast_")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), label=None)])
  _position: Position(line=23, column=9)

Node Type: BinaryOperation
  operator: ==
  operandl: MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: MemberReference
  member: context
  _position: Position(line=23, column=13)

Node Type: Literal
  value: null
  _position: Position(line=23, column=24)

Node Type: BlockStatement
  statements: [StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in GetLast_")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), label=None)]
  _position: Position(line=23, column=30)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in GetLast_")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=24, column=13)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in GetLast_")]
  member: LogError
  _position: Position(line=24, column=13)

Node Type: Literal
  value: "AppContext null in GetLast_"
  _position: Position(line=24, column=36)

Node Type: ReturnStatement
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)
  _position: Position(line=25, column=13)

Node Type: Literal
  value: null
  _position: Position(line=25, column=20)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=NumMessage, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=result)]
  _position: Position(line=27, column=9)

Node Type: ReferenceType
  name: NumMessage

Node Type: VariableDeclarator
  name: result
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: Literal
  value: null
  _position: Position(line=27, column=29)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=Cursor, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=getContentResolver, postfix_operators=[], prefix_operators=[], qualifier=context, selectors=[MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="content://sms/inbox")], member=parse, postfix_operators=[], prefix_operators=[], qualifier=Uri, selectors=[], type_arguments=None), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None))], member=query, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), name=c)]
  _position: Position(line=28, column=9)

Node Type: ReferenceType
  name: Cursor

Node Type: VariableDeclarator
  name: c
  initializer: MethodInvocation(arguments=[], member=getContentResolver, postfix_operators=[], prefix_operators=[], qualifier=context, selectors=[MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="content://sms/inbox")], member=parse, postfix_operators=[], prefix_operators=[], qualifier=Uri, selectors=[], type_arguments=None), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None))], member=query, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)

Node Type: MethodInvocation
  qualifier: context
  selectors: [MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="content://sms/inbox")], member=parse, postfix_operators=[], prefix_operators=[], qualifier=Uri, selectors=[], type_arguments=None), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None))], member=query, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]
  member: getContentResolver
  _position: Position(line=28, column=20)

Node Type: MethodInvocation
  arguments: [MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="content://sms/inbox")], member=parse, postfix_operators=[], prefix_operators=[], qualifier=Uri, selectors=[], type_arguments=None), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None))]
  member: query
  _position: Position(line=28, column=48)

Node Type: MethodInvocation
  qualifier: Uri
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="content://sms/inbox")]
  member: parse
  _position: Position(line=28, column=55)

Node Type: Literal
  value: "content://sms/inbox"
  _position: Position(line=28, column=65)

Node Type: Cast
  type: ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: ReferenceType
  name: String
  dimensions: [None]

Node Type: Literal
  value: null
  _position: Position(line=28, column=100)

Node Type: Cast
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: ReferenceType
  name: String

Node Type: Literal
  value: null
  _position: Position(line=28, column=115)

Node Type: Cast
  type: ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None)
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: ReferenceType
  name: String
  dimensions: [None]

Node Type: Literal
  value: null
  _position: Position(line=28, column=132)

Node Type: Cast
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: ReferenceType
  name: String

Node Type: Literal
  value: null
  _position: Position(line=28, column=147)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=body)]
  _position: Position(line=29, column=9)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: body
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: Literal
  value: null
  _position: Position(line=29, column=23)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=number)]
  _position: Position(line=30, column=9)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: number
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: Literal
  value: null
  _position: Position(line=30, column=25)

Node Type: IfStatement
  condition: MethodInvocation(arguments=[], member=moveToFirst, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[], type_arguments=None)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=body, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="body")], member=getColumnIndexOrThrow, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[], type_arguments=None)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="address")], member=getColumnIndexOrThrow, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[], type_arguments=None)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=ClassCreator(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=body, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=" "), operator=+), operandr=MemberReference(member=XLastMessage, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), operator=+)], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=NumMessage, sub_type=None))), label=None)])
  _position: Position(line=31, column=9)

Node Type: MethodInvocation
  qualifier: c
  member: moveToFirst
  _position: Position(line=31, column=13)

Node Type: BlockStatement
  statements: [StatementExpression(expression=Assignment(expressionl=MemberReference(member=body, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="body")], member=getColumnIndexOrThrow, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[], type_arguments=None)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="address")], member=getColumnIndexOrThrow, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[], type_arguments=None)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=ClassCreator(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=body, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=" "), operator=+), operandr=MemberReference(member=XLastMessage, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), operator=+)], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=NumMessage, sub_type=None))), label=None)]
  _position: Position(line=31, column=30)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=body, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="body")], member=getColumnIndexOrThrow, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[], type_arguments=None)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None))
  _position: Position(line=32, column=13)

Node Type: Assignment
  expressionl: MemberReference(member=body, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  value: MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="body")], member=getColumnIndexOrThrow, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[], type_arguments=None)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)
  type: =

Node Type: MemberReference
  member: body
  _position: Position(line=32, column=13)

Node Type: MethodInvocation
  qualifier: c
  selectors: [MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]
  arguments: [MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="body")], member=getColumnIndexOrThrow, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[], type_arguments=None)]
  member: getString
  _position: Position(line=32, column=20)

Node Type: MethodInvocation
  member: toString
  _position: Position(line=32, column=64)

Node Type: MethodInvocation
  qualifier: c
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="body")]
  member: getColumnIndexOrThrow
  _position: Position(line=32, column=32)

Node Type: Literal
  value: "body"
  _position: Position(line=32, column=56)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="address")], member=getColumnIndexOrThrow, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[], type_arguments=None)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None))
  _position: Position(line=33, column=13)

Node Type: Assignment
  expressionl: MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  value: MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="address")], member=getColumnIndexOrThrow, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[], type_arguments=None)], member=getString, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)
  type: =

Node Type: MemberReference
  member: number
  _position: Position(line=33, column=13)

Node Type: MethodInvocation
  qualifier: c
  selectors: [MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]
  arguments: [MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="address")], member=getColumnIndexOrThrow, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[], type_arguments=None)]
  member: getString
  _position: Position(line=33, column=22)

Node Type: MethodInvocation
  member: toString
  _position: Position(line=33, column=69)

Node Type: MethodInvocation
  qualifier: c
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="address")]
  member: getColumnIndexOrThrow
  _position: Position(line=33, column=34)

Node Type: Literal
  value: "address"
  _position: Position(line=33, column=58)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=ClassCreator(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=body, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=" "), operator=+), operandr=MemberReference(member=XLastMessage, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), operator=+)], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=NumMessage, sub_type=None)))
  _position: Position(line=34, column=13)

Node Type: Assignment
  expressionl: MemberReference(member=result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  value: ClassCreator(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=body, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=" "), operator=+), operandr=MemberReference(member=XLastMessage, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), operator=+)], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=NumMessage, sub_type=None))
  type: =

Node Type: MemberReference
  member: result
  _position: Position(line=34, column=13)

Node Type: ClassCreator
  type: ReferenceType(arguments=None, dimensions=None, name=NumMessage, sub_type=None)
  arguments: [MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=body, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=" "), operator=+), operandr=MemberReference(member=XLastMessage, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), operator=+)]

Node Type: ReferenceType
  name: NumMessage

Node Type: MemberReference
  member: number
  _position: Position(line=34, column=37)

Node Type: BinaryOperation
  operator: +
  operandl: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=body, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=" "), operator=+)
  operandr: MemberReference(member=XLastMessage, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])

Node Type: BinaryOperation
  operator: +
  operandl: MethodInvocation(arguments=[MemberReference(member=body, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None)
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=" ")

Node Type: MethodInvocation
  qualifier: String
  arguments: [MemberReference(member=body, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: valueOf
  _position: Position(line=34, column=45)

Node Type: MemberReference
  member: body
  _position: Position(line=34, column=60)

Node Type: Literal
  value: " "
  _position: Position(line=34, column=68)

Node Type: MemberReference
  qualifier: ValueProvider
  member: XLastMessage
  _position: Position(line=34, column=74)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[], member=close, postfix_operators=[], prefix_operators=[], qualifier=c, selectors=[], type_arguments=None)
  _position: Position(line=36, column=9)

Node Type: MethodInvocation
  qualifier: c
  member: close
  _position: Position(line=36, column=9)

Node Type: IfStatement
  condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=body, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), operandr=BinaryOperation(operandl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), operator=||)
  then_statement: BlockStatement(label=None, statements=[ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), label=None)])
  _position: Position(line=37, column=9)

Node Type: BinaryOperation
  operator: ||
  operandl: BinaryOperation(operandl=MemberReference(member=body, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===)
  operandr: BinaryOperation(operandl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===)

Node Type: BinaryOperation
  operator: ==
  operandl: MemberReference(member=body, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: MemberReference
  member: body
  _position: Position(line=37, column=13)

Node Type: Literal
  value: null
  _position: Position(line=37, column=21)

Node Type: BinaryOperation
  operator: ==
  operandl: MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: MemberReference
  member: number
  _position: Position(line=37, column=29)

Node Type: Literal
  value: null
  _position: Position(line=37, column=39)

Node Type: BlockStatement
  statements: [ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), label=None)]
  _position: Position(line=37, column=45)

Node Type: ReturnStatement
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)
  _position: Position(line=38, column=13)

Node Type: Literal
  value: null
  _position: Position(line=38, column=20)

Node Type: ReturnStatement
  expression: MemberReference(member=result, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  _position: Position(line=40, column=9)

Node Type: MemberReference
  member: result
  _position: Position(line=40, column=16)

Node Type: MethodDeclaration
  modifiers: {'public', 'static'}
  return_type: BasicType(dimensions=[], name=boolean)
  name: ReportFromScheduler
  parameters: [FormalParameter(annotations=[], modifiers=set(), name=context, type=ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None), varargs=False)]
  body: [LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=None, name=ReportOk)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::ReportFromScheduler")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=MethodInvocation(arguments=[MemberReference(member=SettingLastSmsSended, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])], member=GetBoolValue, postfix_operators=[], prefix_operators=['!'], qualifier=ValueProvider, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Last Send not occurs")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=GetLastSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), name=msg)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=NumMessage, sub_type=None)), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=msg, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), label=None)])), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="We have some send data")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getNumber, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None), MethodInvocation(arguments=[], member=getMessage, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None)], member=GetMessageReportUrl, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3)], member=MakeHttpRequestWithRetries, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator===), else_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Request error. Putting uri to db")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getNumber, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None), MethodInvocation(arguments=[], member=getMessage, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None)], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)), label=None)]), label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Request is fine")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None)])), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=SettingLastSmsSended, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)], member=SaveBoolValue, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)])), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="LastSend previously occured")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[], member=SendSavedMessages, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=), else_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=ReportOk, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)), label=None)]), label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=ReportOk, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)), label=None)])), IfStatement(condition=MemberReference(member=ReportOk, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[ReturnStatement(expression=MemberReference(member=ReportOk, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), label=None)])), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetAntivirusLink, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=GetStaticDataString, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), operator=+), name=uri)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), StatementExpression(expression=MethodInvocation(arguments=[BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Url is"), operandr=MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3)], member=MakeHttpRequestWithRetries, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator===), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)])), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), label=None)]
  _position: Position(line=43, column=19)

Node Type: BasicType
  name: boolean

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None)
  name: context
  _position: Position(line=43, column=47)

Node Type: ReferenceType
  name: Context

Node Type: LocalVariableDeclaration
  type: BasicType(dimensions=[], name=boolean)
  declarators: [VariableDeclarator(dimensions=[], initializer=None, name=ReportOk)]
  _position: Position(line=44, column=9)

Node Type: BasicType
  name: boolean

Node Type: VariableDeclarator
  name: ReportOk

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::ReportFromScheduler")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=45, column=9)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::ReportFromScheduler")]
  member: LogTrace
  _position: Position(line=45, column=9)

Node Type: Literal
  value: "SecurityReceiver::ReportFromScheduler"
  _position: Position(line=45, column=32)

Node Type: IfStatement
  condition: MethodInvocation(arguments=[MemberReference(member=SettingLastSmsSended, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])], member=GetBoolValue, postfix_operators=[], prefix_operators=['!'], qualifier=ValueProvider, selectors=[], type_arguments=None)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Last Send not occurs")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=GetLastSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), name=msg)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=NumMessage, sub_type=None)), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=msg, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), label=None)])), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="We have some send data")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getNumber, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None), MethodInvocation(arguments=[], member=getMessage, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None)], member=GetMessageReportUrl, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3)], member=MakeHttpRequestWithRetries, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator===), else_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Request error. Putting uri to db")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getNumber, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None), MethodInvocation(arguments=[], member=getMessage, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None)], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)), label=None)]), label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Request is fine")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None)])), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=SettingLastSmsSended, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)], member=SaveBoolValue, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)])
  _position: Position(line=46, column=9)

Node Type: MethodInvocation
  prefix_operators: ['!']
  qualifier: ValueProvider
  arguments: [MemberReference(member=SettingLastSmsSended, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])]
  member: GetBoolValue
  _position: Position(line=46, column=14)

Node Type: MemberReference
  qualifier: ValueProvider
  member: SettingLastSmsSended
  _position: Position(line=46, column=41)

Node Type: BlockStatement
  statements: [StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Last Send not occurs")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=GetLastSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), name=msg)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=NumMessage, sub_type=None)), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=msg, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), label=None)])), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="We have some send data")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getNumber, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None), MethodInvocation(arguments=[], member=getMessage, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None)], member=GetMessageReportUrl, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3)], member=MakeHttpRequestWithRetries, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator===), else_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Request error. Putting uri to db")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getNumber, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None), MethodInvocation(arguments=[], member=getMessage, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None)], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)), label=None)]), label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Request is fine")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None)])), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=SettingLastSmsSended, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)], member=SaveBoolValue, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)]
  _position: Position(line=46, column=78)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Last Send not occurs")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=47, column=13)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Last Send not occurs")]
  member: LogTrace
  _position: Position(line=47, column=13)

Node Type: Literal
  value: "Last Send not occurs"
  _position: Position(line=47, column=36)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=NumMessage, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=GetLastSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), name=msg)]
  _position: Position(line=48, column=13)

Node Type: ReferenceType
  name: NumMessage

Node Type: VariableDeclarator
  name: msg
  initializer: MethodInvocation(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=GetLastSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)

Node Type: MethodInvocation
  arguments: [MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: GetLastSms
  _position: Position(line=48, column=30)

Node Type: MemberReference
  member: context
  _position: Position(line=48, column=41)

Node Type: IfStatement
  condition: BinaryOperation(operandl=MemberReference(member=msg, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===)
  then_statement: BlockStatement(label=None, statements=[ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), label=None)])
  _position: Position(line=49, column=13)

Node Type: BinaryOperation
  operator: ==
  operandl: MemberReference(member=msg, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: MemberReference
  member: msg
  _position: Position(line=49, column=17)

Node Type: Literal
  value: null
  _position: Position(line=49, column=24)

Node Type: BlockStatement
  statements: [ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), label=None)]
  _position: Position(line=49, column=30)

Node Type: ReturnStatement
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)
  _position: Position(line=50, column=17)

Node Type: Literal
  value: false
  _position: Position(line=50, column=24)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="We have some send data")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=52, column=13)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="We have some send data")]
  member: LogTrace
  _position: Position(line=52, column=13)

Node Type: Literal
  value: "We have some send data"
  _position: Position(line=52, column=36)

Node Type: IfStatement
  condition: BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getNumber, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None), MethodInvocation(arguments=[], member=getMessage, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None)], member=GetMessageReportUrl, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3)], member=MakeHttpRequestWithRetries, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator===)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Request is fine")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None)])
  else_statement: BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Request error. Putting uri to db")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getNumber, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None), MethodInvocation(arguments=[], member=getMessage, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None)], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)), label=None)])
  _position: Position(line=53, column=13)

Node Type: BinaryOperation
  operator: ==
  operandl: MethodInvocation(arguments=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getNumber, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None), MethodInvocation(arguments=[], member=getMessage, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None)], member=GetMessageReportUrl, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3)], member=MakeHttpRequestWithRetries, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None)
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200)

Node Type: MethodInvocation
  qualifier: WebManager
  arguments: [MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getNumber, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None), MethodInvocation(arguments=[], member=getMessage, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None)], member=GetMessageReportUrl, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3)]
  member: MakeHttpRequestWithRetries
  _position: Position(line=53, column=17)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [MethodInvocation(arguments=[], member=getNumber, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None), MethodInvocation(arguments=[], member=getMessage, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None)]
  member: GetMessageReportUrl
  _position: Position(line=53, column=55)

Node Type: MethodInvocation
  qualifier: msg
  member: getNumber
  _position: Position(line=53, column=89)

Node Type: MethodInvocation
  qualifier: msg
  member: getMessage
  _position: Position(line=53, column=106)

Node Type: Literal
  value: 3
  _position: Position(line=53, column=125)

Node Type: Literal
  value: 200
  _position: Position(line=53, column=131)

Node Type: BlockStatement
  statements: [StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Request is fine")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None)]
  _position: Position(line=53, column=136)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Request is fine")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=54, column=17)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Request is fine")]
  member: LogTrace
  _position: Position(line=54, column=17)

Node Type: Literal
  value: "Request is fine"
  _position: Position(line=54, column=40)

Node Type: BlockStatement
  statements: [StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Request error. Putting uri to db")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getNumber, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None), MethodInvocation(arguments=[], member=getMessage, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None)], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)), label=None)]
  _position: Position(line=55, column=20)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Request error. Putting uri to db")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=56, column=17)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Request error. Putting uri to db")]
  member: LogTrace
  _position: Position(line=56, column=17)

Node Type: Literal
  value: "Request error. Putting uri to db"
  _position: Position(line=56, column=40)

Node Type: StatementExpression
  expression: ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getNumber, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None), MethodInvocation(arguments=[], member=getMessage, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None)], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None))
  _position: Position(line=57, column=17)

Node Type: ClassCreator
  selectors: [MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getNumber, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None), MethodInvocation(arguments=[], member=getMessage, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None)], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]
  type: ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)
  arguments: [MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]

Node Type: MethodInvocation
  arguments: [MethodInvocation(arguments=[], member=getNumber, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None), MethodInvocation(arguments=[], member=getMessage, postfix_operators=[], prefix_operators=[], qualifier=msg, selectors=[], type_arguments=None)]
  member: insert
  _position: Position(line=57, column=41)

Node Type: MethodInvocation
  qualifier: msg
  member: getNumber
  _position: Position(line=57, column=49)

Node Type: MethodInvocation
  qualifier: msg
  member: getMessage
  _position: Position(line=57, column=66)

Node Type: ReferenceType
  name: DataStorage

Node Type: MemberReference
  member: context
  _position: Position(line=57, column=33)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[MemberReference(member=SettingLastSmsSended, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)], member=SaveBoolValue, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=59, column=13)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [MemberReference(member=SettingLastSmsSended, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)]
  member: SaveBoolValue
  _position: Position(line=59, column=13)

Node Type: MemberReference
  qualifier: ValueProvider
  member: SettingLastSmsSended
  _position: Position(line=59, column=41)

Node Type: Literal
  value: true
  _position: Position(line=59, column=77)

Node Type: ReturnStatement
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)
  _position: Position(line=60, column=13)

Node Type: Literal
  value: true
  _position: Position(line=60, column=20)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="LastSend previously occured")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=62, column=9)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="LastSend previously occured")]
  member: LogTrace
  _position: Position(line=62, column=9)

Node Type: Literal
  value: "LastSend previously occured"
  _position: Position(line=62, column=32)

Node Type: IfStatement
  condition: BinaryOperation(operandl=ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[], member=SendSavedMessages, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=!=)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=ReportOk, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)), label=None)])
  else_statement: BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=ReportOk, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)), label=None)])
  _position: Position(line=63, column=9)

Node Type: BinaryOperation
  operator: !=
  operandl: ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[], member=SendSavedMessages, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None))
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)

Node Type: ClassCreator
  selectors: [MethodInvocation(arguments=[], member=SendSavedMessages, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]
  type: ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)
  arguments: [MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]

Node Type: MethodInvocation
  member: SendSavedMessages
  _position: Position(line=63, column=37)

Node Type: ReferenceType
  name: DataStorage

Node Type: MemberReference
  member: context
  _position: Position(line=63, column=29)

Node Type: Literal
  value: 0
  _position: Position(line=63, column=61)

Node Type: BlockStatement
  statements: [StatementExpression(expression=Assignment(expressionl=MemberReference(member=ReportOk, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)), label=None)]
  _position: Position(line=63, column=64)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=ReportOk, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true))
  _position: Position(line=64, column=13)

Node Type: Assignment
  expressionl: MemberReference(member=ReportOk, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  value: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)
  type: =

Node Type: MemberReference
  member: ReportOk
  _position: Position(line=64, column=13)

Node Type: Literal
  value: true
  _position: Position(line=64, column=24)

Node Type: BlockStatement
  statements: [StatementExpression(expression=Assignment(expressionl=MemberReference(member=ReportOk, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)), label=None)]
  _position: Position(line=65, column=16)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=ReportOk, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false))
  _position: Position(line=66, column=13)

Node Type: Assignment
  expressionl: MemberReference(member=ReportOk, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  value: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)
  type: =

Node Type: MemberReference
  member: ReportOk
  _position: Position(line=66, column=13)

Node Type: Literal
  value: false
  _position: Position(line=66, column=24)

Node Type: IfStatement
  condition: MemberReference(member=ReportOk, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  then_statement: BlockStatement(label=None, statements=[ReturnStatement(expression=MemberReference(member=ReportOk, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), label=None)])
  _position: Position(line=68, column=9)

Node Type: MemberReference
  member: ReportOk
  _position: Position(line=68, column=13)

Node Type: BlockStatement
  statements: [ReturnStatement(expression=MemberReference(member=ReportOk, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), label=None)]
  _position: Position(line=68, column=23)

Node Type: ReturnStatement
  expression: MemberReference(member=ReportOk, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  _position: Position(line=69, column=13)

Node Type: MemberReference
  member: ReportOk
  _position: Position(line=69, column=20)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetAntivirusLink, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=GetStaticDataString, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), operator=+), name=uri)]
  _position: Position(line=71, column=9)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: uri
  initializer: BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetAntivirusLink, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=GetStaticDataString, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), operator=+)

Node Type: BinaryOperation
  operator: +
  operandl: MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetAntivirusLink, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None)
  operandr: MethodInvocation(arguments=[], member=GetStaticDataString, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)

Node Type: MethodInvocation
  qualifier: String
  arguments: [MethodInvocation(arguments=[], member=GetAntivirusLink, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)]
  member: valueOf
  _position: Position(line=71, column=22)

Node Type: MethodInvocation
  qualifier: ValueProvider
  member: GetAntivirusLink
  _position: Position(line=71, column=37)

Node Type: MethodInvocation
  qualifier: ValueProvider
  member: GetStaticDataString
  _position: Position(line=71, column=73)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Url is"), operandr=MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=72, column=9)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Url is"), operandr=MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)]
  member: LogTrace
  _position: Position(line=72, column=9)

Node Type: BinaryOperation
  operator: +
  operandl: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Url is")
  operandr: MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])

Node Type: Literal
  value: "Url is"
  _position: Position(line=72, column=32)

Node Type: MemberReference
  member: uri
  _position: Position(line=72, column=43)

Node Type: IfStatement
  condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3)], member=MakeHttpRequestWithRetries, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator===)
  then_statement: BlockStatement(label=None, statements=[ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)])
  _position: Position(line=73, column=9)

Node Type: BinaryOperation
  operator: ==
  operandl: MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3)], member=MakeHttpRequestWithRetries, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None)
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200)

Node Type: MethodInvocation
  qualifier: WebManager
  arguments: [MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3)]
  member: MakeHttpRequestWithRetries
  _position: Position(line=73, column=13)

Node Type: MemberReference
  member: uri
  _position: Position(line=73, column=51)

Node Type: Literal
  value: 3
  _position: Position(line=73, column=56)

Node Type: Literal
  value: 200
  _position: Position(line=73, column=62)

Node Type: BlockStatement
  statements: [ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)]
  _position: Position(line=73, column=67)

Node Type: ReturnStatement
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)
  _position: Position(line=74, column=13)

Node Type: Literal
  value: true
  _position: Position(line=74, column=20)

Node Type: ReturnStatement
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)
  _position: Position(line=76, column=9)

Node Type: Literal
  value: false
  _position: Position(line=76, column=16)

Node Type: MethodDeclaration
  modifiers: {'public', 'static'}
  name: sendSMS
  parameters: [FormalParameter(annotations=[], modifiers=set(), name=phoneNumber, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=message, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)]
  body: [IfStatement(condition=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=phoneNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), operandr=BinaryOperation(operandl=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), operator=||), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="number or message is null in SendMessageProc")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=None, label=None)])), TryStatement(block=[StatementExpression(expression=MethodInvocation(arguments=[], member=getDefault, postfix_operators=[], prefix_operators=[], qualifier=SmsManager, selectors=[MethodInvocation(arguments=[MemberReference(member=phoneNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=PendingIntent, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=PendingIntent, sub_type=None))], member=sendTextMessage, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), label=None)], catches=[CatchClause(block=[], label=None, parameter=CatchClauseParameter(annotations=None, modifiers=None, name=e, types=['Exception']))], finally_block=None, label=None, resources=None)]
  _position: Position(line=79, column=19)

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  name: phoneNumber
  _position: Position(line=79, column=32)

Node Type: ReferenceType
  name: String

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  name: message
  _position: Position(line=79, column=52)

Node Type: ReferenceType
  name: String

Node Type: IfStatement
  condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=phoneNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), operandr=BinaryOperation(operandl=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), operator=||)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="number or message is null in SendMessageProc")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=None, label=None)])
  _position: Position(line=80, column=9)

Node Type: BinaryOperation
  operator: ||
  operandl: BinaryOperation(operandl=MemberReference(member=phoneNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===)
  operandr: BinaryOperation(operandl=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===)

Node Type: BinaryOperation
  operator: ==
  operandl: MemberReference(member=phoneNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: MemberReference
  member: phoneNumber
  _position: Position(line=80, column=13)

Node Type: Literal
  value: null
  _position: Position(line=80, column=28)

Node Type: BinaryOperation
  operator: ==
  operandl: MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: MemberReference
  member: message
  _position: Position(line=80, column=36)

Node Type: Literal
  value: null
  _position: Position(line=80, column=47)

Node Type: BlockStatement
  statements: [StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="number or message is null in SendMessageProc")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=None, label=None)]
  _position: Position(line=80, column=53)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="number or message is null in SendMessageProc")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=81, column=13)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="number or message is null in SendMessageProc")]
  member: LogTrace
  _position: Position(line=81, column=13)

Node Type: Literal
  value: "number or message is null in SendMessageProc"
  _position: Position(line=81, column=36)

Node Type: ReturnStatement
  _position: Position(line=82, column=13)

Node Type: TryStatement
  block: [StatementExpression(expression=MethodInvocation(arguments=[], member=getDefault, postfix_operators=[], prefix_operators=[], qualifier=SmsManager, selectors=[MethodInvocation(arguments=[MemberReference(member=phoneNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=PendingIntent, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=PendingIntent, sub_type=None))], member=sendTextMessage, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), label=None)]
  catches: [CatchClause(block=[], label=None, parameter=CatchClauseParameter(annotations=None, modifiers=None, name=e, types=['Exception']))]
  _position: Position(line=84, column=9)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[], member=getDefault, postfix_operators=[], prefix_operators=[], qualifier=SmsManager, selectors=[MethodInvocation(arguments=[MemberReference(member=phoneNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=PendingIntent, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=PendingIntent, sub_type=None))], member=sendTextMessage, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)
  _position: Position(line=85, column=13)

Node Type: MethodInvocation
  qualifier: SmsManager
  selectors: [MethodInvocation(arguments=[MemberReference(member=phoneNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=PendingIntent, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=PendingIntent, sub_type=None))], member=sendTextMessage, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]
  member: getDefault
  _position: Position(line=85, column=13)

Node Type: MethodInvocation
  arguments: [MemberReference(member=phoneNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=PendingIntent, sub_type=None)), Cast(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), type=ReferenceType(arguments=None, dimensions=[], name=PendingIntent, sub_type=None))]
  member: sendTextMessage
  _position: Position(line=85, column=36)

Node Type: MemberReference
  member: phoneNumber
  _position: Position(line=85, column=53)

Node Type: Cast
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: ReferenceType
  name: String

Node Type: Literal
  value: null
  _position: Position(line=85, column=75)

Node Type: MemberReference
  member: message
  _position: Position(line=85, column=81)

Node Type: Cast
  type: ReferenceType(arguments=None, dimensions=[], name=PendingIntent, sub_type=None)
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: ReferenceType
  name: PendingIntent

Node Type: Literal
  value: null
  _position: Position(line=85, column=106)

Node Type: Cast
  type: ReferenceType(arguments=None, dimensions=[], name=PendingIntent, sub_type=None)
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: ReferenceType
  name: PendingIntent

Node Type: Literal
  value: null
  _position: Position(line=85, column=128)

Node Type: CatchClause
  parameter: CatchClauseParameter(annotations=None, modifiers=None, name=e, types=['Exception'])

Node Type: CatchClauseParameter
  types: ['Exception']
  name: e

Node Type: MethodDeclaration
  modifiers: {'public'}
  name: SendControlInformation
  parameters: [FormalParameter(annotations=[], modifiers=set(), name=controlNumber, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)]
  body: [LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=None, name=i)], modifiers=set(), type=BasicType(dimensions=[], name=int)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), name=i2)], modifiers=set(), type=BasicType(dimensions=[], name=int)), IfStatement(condition=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=controlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), operandr=BinaryOperation(operandl=MemberReference(member=controlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=""), operator===), operator=||), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="controlNumber is empty or null in SendControlInformation")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=None, label=None)])), StatementExpression(expression=MethodInvocation(arguments=[BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SendControlInformation called number is "), operandr=MemberReference(member=controlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=IsTotalHideOn, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), name=TotalHideSms)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=IsAlternativeControlOn, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), name=alternativeControl)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MemberReference(member=MODEL, postfix_operators=[], prefix_operators=[], qualifier=Build, selectors=[]), name=PhoneModel)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MemberReference(member=MANUFACTURER, postfix_operators=[], prefix_operators=[], qualifier=Build, selectors=[]), name=PhoneManufacturer)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MemberReference(member=RELEASE, postfix_operators=[], prefix_operators=[], qualifier=Build.VERSION, selectors=[]), name=AndroidVersion)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ArrayCreator(dimensions=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=7)], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None)), name=objArr)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=Object, sub_type=None)), StatementExpression(expression=Assignment(expressionl=MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))]), type==, value=MemberReference(member=PhoneModel, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1))]), type==, value=MethodInvocation(arguments=[], member=GetActivationCode, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)), label=None), IfStatement(condition=MemberReference(member=TotalHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), else_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)), label=None)]), label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1)), label=None)])), StatementExpression(expression=Assignment(expressionl=MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2))]), type==, value=MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None)), label=None), IfStatement(condition=MemberReference(member=alternativeControl, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[]), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=i2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)), label=None)])), StatementExpression(expression=Assignment(expressionl=MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3))]), type==, value=MethodInvocation(arguments=[MemberReference(member=i2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=4))]), type==, value=MemberReference(member=SoftwareVersion, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=5))]), type==, value=MemberReference(member=PhoneManufacturer, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=6))]), type==, value=MemberReference(member=AndroidVersion, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Model:%s AC:%s H:%d AltC:%d V:%s Mf:%s/%s"), MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=format, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), name=information)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=information, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=controlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=information, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=sendSMS, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)]
  _position: Position(line=90, column=12)

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  name: controlNumber
  _position: Position(line=90, column=40)

Node Type: ReferenceType
  name: String

Node Type: LocalVariableDeclaration
  type: BasicType(dimensions=[], name=int)
  declarators: [VariableDeclarator(dimensions=[], initializer=None, name=i)]
  _position: Position(line=91, column=9)

Node Type: BasicType
  name: int

Node Type: VariableDeclarator
  name: i

Node Type: LocalVariableDeclaration
  type: BasicType(dimensions=[], name=int)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), name=i2)]
  _position: Position(line=92, column=9)

Node Type: BasicType
  name: int

Node Type: VariableDeclarator
  name: i2
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1)

Node Type: Literal
  value: 1
  _position: Position(line=92, column=18)

Node Type: IfStatement
  condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=controlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), operandr=BinaryOperation(operandl=MemberReference(member=controlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=""), operator===), operator=||)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="controlNumber is empty or null in SendControlInformation")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=None, label=None)])
  _position: Position(line=93, column=9)

Node Type: BinaryOperation
  operator: ||
  operandl: BinaryOperation(operandl=MemberReference(member=controlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===)
  operandr: BinaryOperation(operandl=MemberReference(member=controlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=""), operator===)

Node Type: BinaryOperation
  operator: ==
  operandl: MemberReference(member=controlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: MemberReference
  member: controlNumber
  _position: Position(line=93, column=13)

Node Type: Literal
  value: null
  _position: Position(line=93, column=30)

Node Type: BinaryOperation
  operator: ==
  operandl: MemberReference(member=controlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")

Node Type: MemberReference
  member: controlNumber
  _position: Position(line=93, column=38)

Node Type: Literal
  value: ""
  _position: Position(line=93, column=55)

Node Type: BlockStatement
  statements: [StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="controlNumber is empty or null in SendControlInformation")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=None, label=None)]
  _position: Position(line=93, column=59)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="controlNumber is empty or null in SendControlInformation")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=94, column=13)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="controlNumber is empty or null in SendControlInformation")]
  member: LogTrace
  _position: Position(line=94, column=13)

Node Type: Literal
  value: "controlNumber is empty or null in SendControlInformation"
  _position: Position(line=94, column=36)

Node Type: ReturnStatement
  _position: Position(line=95, column=13)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SendControlInformation called number is "), operandr=MemberReference(member=controlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=97, column=9)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SendControlInformation called number is "), operandr=MemberReference(member=controlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)]
  member: LogTrace
  _position: Position(line=97, column=9)

Node Type: BinaryOperation
  operator: +
  operandl: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SendControlInformation called number is ")
  operandr: MemberReference(member=controlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])

Node Type: Literal
  value: "SendControlInformation called number is "
  _position: Position(line=97, column=32)

Node Type: MemberReference
  member: controlNumber
  _position: Position(line=97, column=77)

Node Type: LocalVariableDeclaration
  type: BasicType(dimensions=[], name=boolean)
  declarators: [VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=IsTotalHideOn, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), name=TotalHideSms)]
  _position: Position(line=98, column=9)

Node Type: BasicType
  name: boolean

Node Type: VariableDeclarator
  name: TotalHideSms
  initializer: MethodInvocation(arguments=[], member=IsTotalHideOn, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)

Node Type: MethodInvocation
  qualifier: ValueProvider
  member: IsTotalHideOn
  _position: Position(line=98, column=32)

Node Type: LocalVariableDeclaration
  type: BasicType(dimensions=[], name=boolean)
  declarators: [VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=IsAlternativeControlOn, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), name=alternativeControl)]
  _position: Position(line=99, column=9)

Node Type: BasicType
  name: boolean

Node Type: VariableDeclarator
  name: alternativeControl
  initializer: MethodInvocation(arguments=[], member=IsAlternativeControlOn, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)

Node Type: MethodInvocation
  qualifier: ValueProvider
  member: IsAlternativeControlOn
  _position: Position(line=99, column=38)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=MemberReference(member=MODEL, postfix_operators=[], prefix_operators=[], qualifier=Build, selectors=[]), name=PhoneModel)]
  _position: Position(line=100, column=9)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: PhoneModel
  initializer: MemberReference(member=MODEL, postfix_operators=[], prefix_operators=[], qualifier=Build, selectors=[])

Node Type: MemberReference
  qualifier: Build
  member: MODEL
  _position: Position(line=100, column=29)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=MemberReference(member=MANUFACTURER, postfix_operators=[], prefix_operators=[], qualifier=Build, selectors=[]), name=PhoneManufacturer)]
  _position: Position(line=101, column=9)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: PhoneManufacturer
  initializer: MemberReference(member=MANUFACTURER, postfix_operators=[], prefix_operators=[], qualifier=Build, selectors=[])

Node Type: MemberReference
  qualifier: Build
  member: MANUFACTURER
  _position: Position(line=101, column=36)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=MemberReference(member=RELEASE, postfix_operators=[], prefix_operators=[], qualifier=Build.VERSION, selectors=[]), name=AndroidVersion)]
  _position: Position(line=102, column=9)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: AndroidVersion
  initializer: MemberReference(member=RELEASE, postfix_operators=[], prefix_operators=[], qualifier=Build.VERSION, selectors=[])

Node Type: MemberReference
  qualifier: Build.VERSION
  member: RELEASE
  _position: Position(line=102, column=33)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[None], name=Object, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=ArrayCreator(dimensions=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=7)], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None)), name=objArr)]
  _position: Position(line=103, column=9)

Node Type: ReferenceType
  name: Object
  dimensions: [None]

Node Type: VariableDeclarator
  name: objArr
  initializer: ArrayCreator(dimensions=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=7)], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None))

Node Type: ArrayCreator
  type: ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None)
  dimensions: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=7)]

Node Type: ReferenceType
  name: Object

Node Type: Literal
  value: 7
  _position: Position(line=103, column=38)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))]), type==, value=MemberReference(member=PhoneModel, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))
  _position: Position(line=104, column=9)

Node Type: Assignment
  expressionl: MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))])
  value: MemberReference(member=PhoneModel, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  type: =

Node Type: MemberReference
  selectors: [ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))]
  member: objArr
  _position: Position(line=104, column=9)

Node Type: ArraySelector
  index: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)
  _position: Position(line=104, column=15)

Node Type: Literal
  value: 0
  _position: Position(line=104, column=16)

Node Type: MemberReference
  member: PhoneModel
  _position: Position(line=104, column=21)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1))]), type==, value=MethodInvocation(arguments=[], member=GetActivationCode, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None))
  _position: Position(line=105, column=9)

Node Type: Assignment
  expressionl: MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1))])
  value: MethodInvocation(arguments=[], member=GetActivationCode, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  type: =

Node Type: MemberReference
  selectors: [ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1))]
  member: objArr
  _position: Position(line=105, column=9)

Node Type: ArraySelector
  index: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1)
  _position: Position(line=105, column=15)

Node Type: Literal
  value: 1
  _position: Position(line=105, column=16)

Node Type: MethodInvocation
  qualifier: ValueProvider
  member: GetActivationCode
  _position: Position(line=105, column=21)

Node Type: IfStatement
  condition: MemberReference(member=TotalHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1)), label=None)])
  else_statement: BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)), label=None)])
  _position: Position(line=106, column=9)

Node Type: MemberReference
  member: TotalHideSms
  _position: Position(line=106, column=13)

Node Type: BlockStatement
  statements: [StatementExpression(expression=Assignment(expressionl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1)), label=None)]
  _position: Position(line=106, column=27)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1))
  _position: Position(line=107, column=13)

Node Type: Assignment
  expressionl: MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  value: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1)
  type: =

Node Type: MemberReference
  member: i
  _position: Position(line=107, column=13)

Node Type: Literal
  value: 1
  _position: Position(line=107, column=17)

Node Type: BlockStatement
  statements: [StatementExpression(expression=Assignment(expressionl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)), label=None)]
  _position: Position(line=108, column=16)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))
  _position: Position(line=109, column=13)

Node Type: Assignment
  expressionl: MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  value: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)
  type: =

Node Type: MemberReference
  member: i
  _position: Position(line=109, column=13)

Node Type: Literal
  value: 0
  _position: Position(line=109, column=17)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2))]), type==, value=MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None))
  _position: Position(line=111, column=9)

Node Type: Assignment
  expressionl: MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2))])
  value: MethodInvocation(arguments=[MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None)
  type: =

Node Type: MemberReference
  selectors: [ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2))]
  member: objArr
  _position: Position(line=111, column=9)

Node Type: ArraySelector
  index: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2)
  _position: Position(line=111, column=15)

Node Type: Literal
  value: 2
  _position: Position(line=111, column=16)

Node Type: MethodInvocation
  qualifier: Integer
  arguments: [MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: valueOf
  _position: Position(line=111, column=21)

Node Type: MemberReference
  member: i
  _position: Position(line=111, column=37)

Node Type: IfStatement
  condition: MemberReference(member=alternativeControl, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[])
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=i2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)), label=None)])
  _position: Position(line=112, column=9)

Node Type: MemberReference
  prefix_operators: ['!']
  member: alternativeControl
  _position: Position(line=112, column=14)

Node Type: BlockStatement
  statements: [StatementExpression(expression=Assignment(expressionl=MemberReference(member=i2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)), label=None)]
  _position: Position(line=112, column=34)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=i2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0))
  _position: Position(line=113, column=13)

Node Type: Assignment
  expressionl: MemberReference(member=i2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  value: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)
  type: =

Node Type: MemberReference
  member: i2
  _position: Position(line=113, column=13)

Node Type: Literal
  value: 0
  _position: Position(line=113, column=18)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3))]), type==, value=MethodInvocation(arguments=[MemberReference(member=i2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None))
  _position: Position(line=115, column=9)

Node Type: Assignment
  expressionl: MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3))])
  value: MethodInvocation(arguments=[MemberReference(member=i2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None)
  type: =

Node Type: MemberReference
  selectors: [ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3))]
  member: objArr
  _position: Position(line=115, column=9)

Node Type: ArraySelector
  index: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3)
  _position: Position(line=115, column=15)

Node Type: Literal
  value: 3
  _position: Position(line=115, column=16)

Node Type: MethodInvocation
  qualifier: Integer
  arguments: [MemberReference(member=i2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: valueOf
  _position: Position(line=115, column=21)

Node Type: MemberReference
  member: i2
  _position: Position(line=115, column=37)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=4))]), type==, value=MemberReference(member=SoftwareVersion, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]))
  _position: Position(line=116, column=9)

Node Type: Assignment
  expressionl: MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=4))])
  value: MemberReference(member=SoftwareVersion, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])
  type: =

Node Type: MemberReference
  selectors: [ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=4))]
  member: objArr
  _position: Position(line=116, column=9)

Node Type: ArraySelector
  index: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=4)
  _position: Position(line=116, column=15)

Node Type: Literal
  value: 4
  _position: Position(line=116, column=16)

Node Type: MemberReference
  qualifier: ValueProvider
  member: SoftwareVersion
  _position: Position(line=116, column=21)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=5))]), type==, value=MemberReference(member=PhoneManufacturer, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))
  _position: Position(line=117, column=9)

Node Type: Assignment
  expressionl: MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=5))])
  value: MemberReference(member=PhoneManufacturer, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  type: =

Node Type: MemberReference
  selectors: [ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=5))]
  member: objArr
  _position: Position(line=117, column=9)

Node Type: ArraySelector
  index: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=5)
  _position: Position(line=117, column=15)

Node Type: Literal
  value: 5
  _position: Position(line=117, column=16)

Node Type: MemberReference
  member: PhoneManufacturer
  _position: Position(line=117, column=21)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=6))]), type==, value=MemberReference(member=AndroidVersion, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))
  _position: Position(line=118, column=9)

Node Type: Assignment
  expressionl: MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=6))])
  value: MemberReference(member=AndroidVersion, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  type: =

Node Type: MemberReference
  selectors: [ArraySelector(index=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=6))]
  member: objArr
  _position: Position(line=118, column=9)

Node Type: ArraySelector
  index: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=6)
  _position: Position(line=118, column=15)

Node Type: Literal
  value: 6
  _position: Position(line=118, column=16)

Node Type: MemberReference
  member: AndroidVersion
  _position: Position(line=118, column=21)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Model:%s AC:%s H:%d AltC:%d V:%s Mf:%s/%s"), MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=format, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), name=information)]
  _position: Position(line=119, column=9)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: information
  initializer: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Model:%s AC:%s H:%d AltC:%d V:%s Mf:%s/%s"), MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=format, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None)

Node Type: MethodInvocation
  qualifier: String
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Model:%s AC:%s H:%d AltC:%d V:%s Mf:%s/%s"), MemberReference(member=objArr, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: format
  _position: Position(line=119, column=30)

Node Type: Literal
  value: "Model:%s AC:%s H:%d AltC:%d V:%s Mf:%s/%s"
  _position: Position(line=119, column=44)

Node Type: MemberReference
  member: objArr
  _position: Position(line=119, column=89)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[MemberReference(member=information, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=120, column=9)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [MemberReference(member=information, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: LogTrace
  _position: Position(line=120, column=9)

Node Type: MemberReference
  member: information
  _position: Position(line=120, column=32)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[MemberReference(member=controlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=information, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=sendSMS, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
  _position: Position(line=121, column=9)

Node Type: MethodInvocation
  arguments: [MemberReference(member=controlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=information, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: sendSMS
  _position: Position(line=121, column=9)

Node Type: MemberReference
  member: controlNumber
  _position: Position(line=121, column=17)

Node Type: MemberReference
  member: information
  _position: Position(line=121, column=32)

Node Type: MethodDeclaration
  modifiers: {'public'}
  return_type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  name: ExtractNumberFromMessage
  parameters: [FormalParameter(annotations=[], modifiers=set(), name=message, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)]
  body: [LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="+"), name=ControlNumber)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="\\d+")], member=compile, postfix_operators=[], prefix_operators=[], qualifier=Pattern, selectors=[MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=matcher, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), name=m)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=Matcher, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), name=found)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), WhileStatement(body=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=group, postfix_operators=[], prefix_operators=[], qualifier=m, selectors=[], type_arguments=None), operator=+)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=found, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)), label=None)]), condition=MethodInvocation(arguments=[], member=find, postfix_operators=[], prefix_operators=[], qualifier=m, selectors=[], type_arguments=None), label=None), IfStatement(condition=MemberReference(member=found, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[]), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=""), label=None)])), ReturnStatement(expression=MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), label=None)]
  _position: Position(line=124, column=12)

Node Type: ReferenceType
  name: String

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  name: message
  _position: Position(line=124, column=44)

Node Type: ReferenceType
  name: String

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="+"), name=ControlNumber)]
  _position: Position(line=125, column=9)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: ControlNumber
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="+")

Node Type: Literal
  value: "+"
  _position: Position(line=125, column=32)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=Matcher, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="\\d+")], member=compile, postfix_operators=[], prefix_operators=[], qualifier=Pattern, selectors=[MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=matcher, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), name=m)]
  _position: Position(line=126, column=9)

Node Type: ReferenceType
  name: Matcher

Node Type: VariableDeclarator
  name: m
  initializer: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="\\d+")], member=compile, postfix_operators=[], prefix_operators=[], qualifier=Pattern, selectors=[MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=matcher, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)

Node Type: MethodInvocation
  qualifier: Pattern
  selectors: [MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=matcher, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="\\d+")]
  member: compile
  _position: Position(line=126, column=21)

Node Type: MethodInvocation
  arguments: [MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: matcher
  _position: Position(line=126, column=44)

Node Type: MemberReference
  member: message
  _position: Position(line=126, column=53)

Node Type: Literal
  value: "\\d+"
  _position: Position(line=126, column=37)

Node Type: LocalVariableDeclaration
  type: BasicType(dimensions=[], name=boolean)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), name=found)]
  _position: Position(line=127, column=9)

Node Type: BasicType
  name: boolean

Node Type: VariableDeclarator
  name: found
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)

Node Type: Literal
  value: false
  _position: Position(line=127, column=25)

Node Type: WhileStatement
  condition: MethodInvocation(arguments=[], member=find, postfix_operators=[], prefix_operators=[], qualifier=m, selectors=[], type_arguments=None)
  body: BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=group, postfix_operators=[], prefix_operators=[], qualifier=m, selectors=[], type_arguments=None), operator=+)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=found, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)), label=None)])
  _position: Position(line=128, column=9)

Node Type: MethodInvocation
  qualifier: m
  member: find
  _position: Position(line=128, column=16)

Node Type: BlockStatement
  statements: [StatementExpression(expression=Assignment(expressionl=MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=group, postfix_operators=[], prefix_operators=[], qualifier=m, selectors=[], type_arguments=None), operator=+)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=found, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)), label=None)]
  _position: Position(line=128, column=26)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=group, postfix_operators=[], prefix_operators=[], qualifier=m, selectors=[], type_arguments=None), operator=+))
  _position: Position(line=129, column=13)

Node Type: Assignment
  expressionl: MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  value: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=group, postfix_operators=[], prefix_operators=[], qualifier=m, selectors=[], type_arguments=None), operator=+)
  type: =

Node Type: MemberReference
  member: ControlNumber
  _position: Position(line=129, column=13)

Node Type: BinaryOperation
  operator: +
  operandl: MethodInvocation(arguments=[MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None)
  operandr: MethodInvocation(arguments=[], member=group, postfix_operators=[], prefix_operators=[], qualifier=m, selectors=[], type_arguments=None)

Node Type: MethodInvocation
  qualifier: String
  arguments: [MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: valueOf
  _position: Position(line=129, column=29)

Node Type: MemberReference
  member: ControlNumber
  _position: Position(line=129, column=44)

Node Type: MethodInvocation
  qualifier: m
  member: group
  _position: Position(line=129, column=61)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=found, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true))
  _position: Position(line=130, column=13)

Node Type: Assignment
  expressionl: MemberReference(member=found, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  value: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)
  type: =

Node Type: MemberReference
  member: found
  _position: Position(line=130, column=13)

Node Type: Literal
  value: true
  _position: Position(line=130, column=21)

Node Type: IfStatement
  condition: MemberReference(member=found, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[])
  then_statement: BlockStatement(label=None, statements=[ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=""), label=None)])
  _position: Position(line=132, column=9)

Node Type: MemberReference
  prefix_operators: ['!']
  member: found
  _position: Position(line=132, column=14)

Node Type: BlockStatement
  statements: [ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=""), label=None)]
  _position: Position(line=132, column=21)

Node Type: ReturnStatement
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")
  _position: Position(line=133, column=13)

Node Type: Literal
  value: ""
  _position: Position(line=133, column=20)

Node Type: ReturnStatement
  expression: MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  _position: Position(line=135, column=9)

Node Type: MemberReference
  member: ControlNumber
  _position: Position(line=135, column=16)

Node Type: MethodDeclaration
  modifiers: {'public'}
  return_type: BasicType(dimensions=[], name=boolean)
  name: AlternativeControl
  parameters: [FormalParameter(annotations=[], modifiers=set(), name=message, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)]
  body: [StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl called")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="%")], member=startsWith, postfix_operators=[], prefix_operators=[], qualifier=message, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control message GET INFO")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=ExtractNumberFromMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)], member=SendControlInformation, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)])), IfStatement(condition=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=":")], member=startsWith, postfix_operators=[], prefix_operators=[], qualifier=message, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control message new number")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=ExtractNumberFromMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), name=ControlNumber)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), IfStatement(condition=BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=ControlNumber, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=7), operator=>), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control number "), operandr=MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=AlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)], member=SaveBoolValue, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=AlternativeNumber, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=SaveStringValue, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=SendControlInformation, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)]))])), IfStatement(condition=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="*")], member=startsWith, postfix_operators=[], prefix_operators=[], qualifier=message, selectors=[], type_arguments=None), else_statement=IfStatement(condition=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=".")], member=startsWith, postfix_operators=[], prefix_operators=[], qualifier=message, selectors=[], type_arguments=None), else_statement=IfStatement(condition=MethodInvocation(arguments=[], member=IsAlternativeControlOn, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), else_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl is off")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), label=None)]), label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=AlternativeNumber, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])], member=GetStringValue, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=">> "), operandr=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)], member=sendSMS, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)])), label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control message fin AltControl")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[], member=CleanupAlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=ExtractNumberFromMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)], member=SendControlInformation, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)])), label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control message fin packet")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[], member=UninstallSoftware, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=ExtractNumberFromMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)], member=SendControlInformation, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)]))]
  _position: Position(line=138, column=12)

Node Type: BasicType
  name: boolean

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  name: message
  _position: Position(line=138, column=39)

Node Type: ReferenceType
  name: String

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl called")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=139, column=9)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl called")]
  member: LogTrace
  _position: Position(line=139, column=9)

Node Type: Literal
  value: "AlternativeControl called"
  _position: Position(line=139, column=32)

Node Type: IfStatement
  condition: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="%")], member=startsWith, postfix_operators=[], prefix_operators=[], qualifier=message, selectors=[], type_arguments=None)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control message GET INFO")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=ExtractNumberFromMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)], member=SendControlInformation, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)])
  _position: Position(line=140, column=9)

Node Type: MethodInvocation
  qualifier: message
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="%")]
  member: startsWith
  _position: Position(line=140, column=13)

Node Type: Literal
  value: "%"
  _position: Position(line=140, column=32)

Node Type: BlockStatement
  statements: [StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control message GET INFO")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=ExtractNumberFromMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)], member=SendControlInformation, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)]
  _position: Position(line=140, column=38)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control message GET INFO")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=141, column=13)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control message GET INFO")]
  member: LogTrace
  _position: Position(line=141, column=13)

Node Type: Literal
  value: "AlternativeControl control message GET INFO"
  _position: Position(line=141, column=36)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=ExtractNumberFromMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)], member=SendControlInformation, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
  _position: Position(line=142, column=13)

Node Type: MethodInvocation
  arguments: [MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=ExtractNumberFromMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)]
  member: SendControlInformation
  _position: Position(line=142, column=13)

Node Type: MethodInvocation
  arguments: [MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: ExtractNumberFromMessage
  _position: Position(line=142, column=36)

Node Type: MemberReference
  member: message
  _position: Position(line=142, column=61)

Node Type: ReturnStatement
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)
  _position: Position(line=143, column=13)

Node Type: Literal
  value: true
  _position: Position(line=143, column=20)

Node Type: IfStatement
  condition: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=":")], member=startsWith, postfix_operators=[], prefix_operators=[], qualifier=message, selectors=[], type_arguments=None)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control message new number")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=ExtractNumberFromMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), name=ControlNumber)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), IfStatement(condition=BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=ControlNumber, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=7), operator=>), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control number "), operandr=MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=AlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)], member=SaveBoolValue, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=AlternativeNumber, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=SaveStringValue, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=SendControlInformation, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)]))])
  _position: Position(line=145, column=9)

Node Type: MethodInvocation
  qualifier: message
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=":")]
  member: startsWith
  _position: Position(line=145, column=13)

Node Type: Literal
  value: ":"
  _position: Position(line=145, column=32)

Node Type: BlockStatement
  statements: [StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control message new number")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=ExtractNumberFromMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), name=ControlNumber)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), IfStatement(condition=BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=ControlNumber, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=7), operator=>), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control number "), operandr=MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=AlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)], member=SaveBoolValue, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=AlternativeNumber, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=SaveStringValue, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=SendControlInformation, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)]))]
  _position: Position(line=145, column=38)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control message new number")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=146, column=13)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control message new number")]
  member: LogTrace
  _position: Position(line=146, column=13)

Node Type: Literal
  value: "AlternativeControl control message new number"
  _position: Position(line=146, column=36)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=ExtractNumberFromMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), name=ControlNumber)]
  _position: Position(line=147, column=13)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: ControlNumber
  initializer: MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=ExtractNumberFromMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)

Node Type: MethodInvocation
  arguments: [MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: ExtractNumberFromMessage
  _position: Position(line=147, column=36)

Node Type: MemberReference
  member: message
  _position: Position(line=147, column=61)

Node Type: IfStatement
  condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=ControlNumber, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=7), operator=>)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control number "), operandr=MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=AlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)], member=SaveBoolValue, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=AlternativeNumber, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=SaveStringValue, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=SendControlInformation, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)])
  _position: Position(line=148, column=13)

Node Type: BinaryOperation
  operator: >
  operandl: MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=ControlNumber, selectors=[], type_arguments=None)
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=7)

Node Type: MethodInvocation
  qualifier: ControlNumber
  member: length
  _position: Position(line=148, column=17)

Node Type: Literal
  value: 7
  _position: Position(line=148, column=42)

Node Type: BlockStatement
  statements: [StatementExpression(expression=MethodInvocation(arguments=[BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control number "), operandr=MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=AlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)], member=SaveBoolValue, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=AlternativeNumber, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=SaveStringValue, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=SendControlInformation, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)]
  _position: Position(line=148, column=45)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control number "), operandr=MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=149, column=17)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control number "), operandr=MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)]
  member: LogTrace
  _position: Position(line=149, column=17)

Node Type: BinaryOperation
  operator: +
  operandl: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control number ")
  operandr: MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])

Node Type: Literal
  value: "AlternativeControl control number "
  _position: Position(line=149, column=40)

Node Type: MemberReference
  member: ControlNumber
  _position: Position(line=149, column=79)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[MemberReference(member=AlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)], member=SaveBoolValue, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=150, column=17)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [MemberReference(member=AlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)]
  member: SaveBoolValue
  _position: Position(line=150, column=17)

Node Type: MemberReference
  qualifier: ValueProvider
  member: AlternativeControl
  _position: Position(line=150, column=45)

Node Type: Literal
  value: true
  _position: Position(line=150, column=79)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[MemberReference(member=AlternativeNumber, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=SaveStringValue, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=151, column=17)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [MemberReference(member=AlternativeNumber, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[]), MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: SaveStringValue
  _position: Position(line=151, column=17)

Node Type: MemberReference
  qualifier: ValueProvider
  member: AlternativeNumber
  _position: Position(line=151, column=47)

Node Type: MemberReference
  member: ControlNumber
  _position: Position(line=151, column=80)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=SendControlInformation, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
  _position: Position(line=152, column=17)

Node Type: MethodInvocation
  arguments: [MemberReference(member=ControlNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: SendControlInformation
  _position: Position(line=152, column=17)

Node Type: MemberReference
  member: ControlNumber
  _position: Position(line=152, column=40)

Node Type: ReturnStatement
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)
  _position: Position(line=153, column=17)

Node Type: Literal
  value: true
  _position: Position(line=153, column=24)

Node Type: IfStatement
  condition: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="*")], member=startsWith, postfix_operators=[], prefix_operators=[], qualifier=message, selectors=[], type_arguments=None)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control message fin packet")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[], member=UninstallSoftware, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=ExtractNumberFromMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)], member=SendControlInformation, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)])
  else_statement: IfStatement(condition=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=".")], member=startsWith, postfix_operators=[], prefix_operators=[], qualifier=message, selectors=[], type_arguments=None), else_statement=IfStatement(condition=MethodInvocation(arguments=[], member=IsAlternativeControlOn, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), else_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl is off")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), label=None)]), label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=AlternativeNumber, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])], member=GetStringValue, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=">> "), operandr=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)], member=sendSMS, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)])), label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control message fin AltControl")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[], member=CleanupAlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=ExtractNumberFromMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)], member=SendControlInformation, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)]))
  _position: Position(line=156, column=9)

Node Type: MethodInvocation
  qualifier: message
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="*")]
  member: startsWith
  _position: Position(line=156, column=13)

Node Type: Literal
  value: "*"
  _position: Position(line=156, column=32)

Node Type: BlockStatement
  statements: [StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control message fin packet")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[], member=UninstallSoftware, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=ExtractNumberFromMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)], member=SendControlInformation, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)]
  _position: Position(line=156, column=38)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control message fin packet")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=157, column=13)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control message fin packet")]
  member: LogTrace
  _position: Position(line=157, column=13)

Node Type: Literal
  value: "AlternativeControl control message fin packet"
  _position: Position(line=157, column=36)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[], member=UninstallSoftware, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=158, column=13)

Node Type: MethodInvocation
  qualifier: ValueProvider
  member: UninstallSoftware
  _position: Position(line=158, column=13)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=ExtractNumberFromMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)], member=SendControlInformation, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
  _position: Position(line=159, column=13)

Node Type: MethodInvocation
  arguments: [MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=ExtractNumberFromMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)]
  member: SendControlInformation
  _position: Position(line=159, column=13)

Node Type: MethodInvocation
  arguments: [MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: ExtractNumberFromMessage
  _position: Position(line=159, column=36)

Node Type: MemberReference
  member: message
  _position: Position(line=159, column=61)

Node Type: ReturnStatement
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)
  _position: Position(line=160, column=13)

Node Type: Literal
  value: true
  _position: Position(line=160, column=20)

Node Type: IfStatement
  condition: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=".")], member=startsWith, postfix_operators=[], prefix_operators=[], qualifier=message, selectors=[], type_arguments=None)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control message fin AltControl")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[], member=CleanupAlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=ExtractNumberFromMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)], member=SendControlInformation, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)])
  else_statement: IfStatement(condition=MethodInvocation(arguments=[], member=IsAlternativeControlOn, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), else_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl is off")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), label=None)]), label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=AlternativeNumber, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])], member=GetStringValue, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=">> "), operandr=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)], member=sendSMS, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)]))
  _position: Position(line=161, column=16)

Node Type: MethodInvocation
  qualifier: message
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=".")]
  member: startsWith
  _position: Position(line=161, column=20)

Node Type: Literal
  value: "."
  _position: Position(line=161, column=39)

Node Type: BlockStatement
  statements: [StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control message fin AltControl")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[], member=CleanupAlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=ExtractNumberFromMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)], member=SendControlInformation, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)]
  _position: Position(line=161, column=45)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control message fin AltControl")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=162, column=13)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl control message fin AltControl")]
  member: LogTrace
  _position: Position(line=162, column=13)

Node Type: Literal
  value: "AlternativeControl control message fin AltControl"
  _position: Position(line=162, column=36)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[], member=CleanupAlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=163, column=13)

Node Type: MethodInvocation
  qualifier: ValueProvider
  member: CleanupAlternativeControl
  _position: Position(line=163, column=13)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=ExtractNumberFromMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)], member=SendControlInformation, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
  _position: Position(line=164, column=13)

Node Type: MethodInvocation
  arguments: [MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=ExtractNumberFromMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)]
  member: SendControlInformation
  _position: Position(line=164, column=13)

Node Type: MethodInvocation
  arguments: [MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: ExtractNumberFromMessage
  _position: Position(line=164, column=36)

Node Type: MemberReference
  member: message
  _position: Position(line=164, column=61)

Node Type: ReturnStatement
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)
  _position: Position(line=165, column=13)

Node Type: Literal
  value: true
  _position: Position(line=165, column=20)

Node Type: IfStatement
  condition: MethodInvocation(arguments=[], member=IsAlternativeControlOn, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=AlternativeNumber, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])], member=GetStringValue, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=">> "), operandr=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)], member=sendSMS, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)])
  else_statement: BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl is off")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), label=None)])
  _position: Position(line=166, column=16)

Node Type: MethodInvocation
  qualifier: ValueProvider
  member: IsAlternativeControlOn
  _position: Position(line=166, column=20)

Node Type: BlockStatement
  statements: [StatementExpression(expression=MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=AlternativeNumber, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])], member=GetStringValue, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=">> "), operandr=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)], member=sendSMS, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), label=None)]
  _position: Position(line=166, column=60)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[MethodInvocation(arguments=[MemberReference(member=AlternativeNumber, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])], member=GetStringValue, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=">> "), operandr=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)], member=sendSMS, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
  _position: Position(line=167, column=13)

Node Type: MethodInvocation
  arguments: [MethodInvocation(arguments=[MemberReference(member=AlternativeNumber, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])], member=GetStringValue, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=">> "), operandr=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)]
  member: sendSMS
  _position: Position(line=167, column=13)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [MemberReference(member=AlternativeNumber, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])]
  member: GetStringValue
  _position: Position(line=167, column=21)

Node Type: MemberReference
  qualifier: ValueProvider
  member: AlternativeNumber
  _position: Position(line=167, column=50)

Node Type: BinaryOperation
  operator: +
  operandl: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=">> ")
  operandr: MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])

Node Type: Literal
  value: ">> "
  _position: Position(line=167, column=84)

Node Type: MemberReference
  member: message
  _position: Position(line=167, column=92)

Node Type: ReturnStatement
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)
  _position: Position(line=168, column=13)

Node Type: Literal
  value: true
  _position: Position(line=168, column=20)

Node Type: BlockStatement
  statements: [StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl is off")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), label=None)]
  _position: Position(line=169, column=16)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl is off")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=170, column=13)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl is off")]
  member: LogTrace
  _position: Position(line=170, column=13)

Node Type: Literal
  value: "AlternativeControl is off"
  _position: Position(line=170, column=36)

Node Type: ReturnStatement
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)
  _position: Position(line=171, column=13)

Node Type: Literal
  value: false
  _position: Position(line=171, column=20)

Node Type: MethodDeclaration
  modifiers: {'public'}
  name: onReceive
  parameters: [FormalParameter(annotations=[], modifiers=set(), name=context, type=ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=intent, type=ReferenceType(arguments=None, dimensions=[], name=Intent, sub_type=None), varargs=False)]
  body: [StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=SetContext, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::onReceive "), operandr=MethodInvocation(arguments=[], member=toString, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[], type_arguments=None), operator=+)], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=MethodInvocation(arguments=[], member=IsUnInstalled, postfix_operators=[], prefix_operators=['!'], qualifier=ValueProvider, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Not Uninstalled")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=MethodInvocation(arguments=[], member=getAction, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="android.intent.action.NEW_OUTGOING_CALL")], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operandr=MethodInvocation(arguments=[], member=getAction, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="android.intent.action.BOOT_COMPLETED")], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operator=||), else_statement=IfStatement(condition=MethodInvocation(arguments=[], member=getAction, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[MethodInvocation(arguments=[MemberReference(member=SMS_RECEIVED_ACTION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle SMAction")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=IsTotalHideOn, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), name=TotalHideSms)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=getExtras, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[], type_arguments=None), name=bundle)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=Bundle, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=smsMessageArr)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=SmsMessage, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=number)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=GetStaticDataString, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), name=GetString)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=message)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), name=SendReport)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=messageWithTime)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=bundle, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Cast(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="pdus")], member=get, postfix_operators=[], prefix_operators=[], qualifier=bundle, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[None], name=Object, sub_type=None)), name=pdus)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=Object, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ArrayCreator(dimensions=[MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=pdus, selectors=[])], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=SmsMessage, sub_type=None)), name=msgs)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=SmsMessage, sub_type=None)), ForStatement(body=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type==, value=MethodInvocation(arguments=[Cast(expression=MemberReference(member=pdus, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type=BasicType(dimensions=[None], name=byte))], member=createFromPdu, postfix_operators=[], prefix_operators=[], qualifier=SmsMessage, selectors=[], type_arguments=None)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getMessageBody, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getOriginatingAddress, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="LocalTime: "), operandr=MethodInvocation(arguments=[], member=getDateTimeInstance, postfix_operators=[], prefix_operators=[], qualifier=DateFormat, selectors=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getInstance, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[MethodInvocation(arguments=[], member=getTime, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)], member=format, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operator=+), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="\r\n "), operator=+), operandr=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="&from=%s&text=%s"), ArrayCreator(dimensions=[None], initializer=ArrayInitializer(initializers=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None), MethodInvocation(arguments=[MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None)]), postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None))], member=format, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operator=+)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=SendReport, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)), label=None)]), control=ForControl(condition=BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=msgs, selectors=[]), operator=<), init=VariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=None, initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), name=i)], modifiers=set(), type=BasicType(dimensions=[], name=int)), update=[MemberReference(member=i, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[])]), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=AlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), name=alternativeControl)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=TotalHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=alternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=||), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[], member=abortBroadcast, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)])), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=TotalHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=alternativeControl, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[]), operator=&&), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle BeforeSendCheck")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=MemberReference(member=SendReport, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle Report")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetAntivirusLink, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), name=uri)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=MakeHttpRequest, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator=!=), operandr=BinaryOperation(operandl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operator=&&), operandr=BinaryOperation(operandl=MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operator=&&), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)), label=None)]))]))]))]))])), label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="This is outgoing call or boot complete")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=FirstReportDelay, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])], member=Schedule, postfix_operators=[], prefix_operators=[], qualifier=SecurityService, selectors=[], type_arguments=None), label=None)]))]))]
  _position: Position(line=175, column=12)

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None)
  name: context
  _position: Position(line=175, column=27)

Node Type: ReferenceType
  name: Context

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=Intent, sub_type=None)
  name: intent
  _position: Position(line=175, column=44)

Node Type: ReferenceType
  name: Intent

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=SetContext, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=176, column=9)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: SetContext
  _position: Position(line=176, column=9)

Node Type: MemberReference
  member: context
  _position: Position(line=176, column=34)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::onReceive "), operandr=MethodInvocation(arguments=[], member=toString, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[], type_arguments=None), operator=+)], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=177, column=9)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::onReceive "), operandr=MethodInvocation(arguments=[], member=toString, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[], type_arguments=None), operator=+)]
  member: LogTrace
  _position: Position(line=177, column=9)

Node Type: BinaryOperation
  operator: +
  operandl: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::onReceive ")
  operandr: MethodInvocation(arguments=[], member=toString, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[], type_arguments=None)

Node Type: Literal
  value: "SecurityReceiver::onReceive "
  _position: Position(line=177, column=32)

Node Type: MethodInvocation
  qualifier: intent
  member: toString
  _position: Position(line=177, column=65)

Node Type: IfStatement
  condition: MethodInvocation(arguments=[], member=IsUnInstalled, postfix_operators=[], prefix_operators=['!'], qualifier=ValueProvider, selectors=[], type_arguments=None)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Not Uninstalled")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=MethodInvocation(arguments=[], member=getAction, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="android.intent.action.NEW_OUTGOING_CALL")], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operandr=MethodInvocation(arguments=[], member=getAction, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="android.intent.action.BOOT_COMPLETED")], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operator=||), else_statement=IfStatement(condition=MethodInvocation(arguments=[], member=getAction, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[MethodInvocation(arguments=[MemberReference(member=SMS_RECEIVED_ACTION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle SMAction")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=IsTotalHideOn, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), name=TotalHideSms)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=getExtras, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[], type_arguments=None), name=bundle)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=Bundle, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=smsMessageArr)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=SmsMessage, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=number)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=GetStaticDataString, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), name=GetString)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=message)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), name=SendReport)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=messageWithTime)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=bundle, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Cast(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="pdus")], member=get, postfix_operators=[], prefix_operators=[], qualifier=bundle, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[None], name=Object, sub_type=None)), name=pdus)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=Object, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ArrayCreator(dimensions=[MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=pdus, selectors=[])], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=SmsMessage, sub_type=None)), name=msgs)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=SmsMessage, sub_type=None)), ForStatement(body=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type==, value=MethodInvocation(arguments=[Cast(expression=MemberReference(member=pdus, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type=BasicType(dimensions=[None], name=byte))], member=createFromPdu, postfix_operators=[], prefix_operators=[], qualifier=SmsMessage, selectors=[], type_arguments=None)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getMessageBody, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getOriginatingAddress, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="LocalTime: "), operandr=MethodInvocation(arguments=[], member=getDateTimeInstance, postfix_operators=[], prefix_operators=[], qualifier=DateFormat, selectors=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getInstance, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[MethodInvocation(arguments=[], member=getTime, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)], member=format, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operator=+), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="\r\n "), operator=+), operandr=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="&from=%s&text=%s"), ArrayCreator(dimensions=[None], initializer=ArrayInitializer(initializers=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None), MethodInvocation(arguments=[MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None)]), postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None))], member=format, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operator=+)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=SendReport, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)), label=None)]), control=ForControl(condition=BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=msgs, selectors=[]), operator=<), init=VariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=None, initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), name=i)], modifiers=set(), type=BasicType(dimensions=[], name=int)), update=[MemberReference(member=i, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[])]), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=AlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), name=alternativeControl)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=TotalHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=alternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=||), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[], member=abortBroadcast, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)])), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=TotalHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=alternativeControl, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[]), operator=&&), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle BeforeSendCheck")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=MemberReference(member=SendReport, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle Report")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetAntivirusLink, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), name=uri)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=MakeHttpRequest, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator=!=), operandr=BinaryOperation(operandl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operator=&&), operandr=BinaryOperation(operandl=MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operator=&&), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)), label=None)]))]))]))]))])), label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="This is outgoing call or boot complete")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=FirstReportDelay, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])], member=Schedule, postfix_operators=[], prefix_operators=[], qualifier=SecurityService, selectors=[], type_arguments=None), label=None)]))])
  _position: Position(line=178, column=9)

Node Type: MethodInvocation
  prefix_operators: ['!']
  qualifier: ValueProvider
  member: IsUnInstalled
  _position: Position(line=178, column=14)

Node Type: BlockStatement
  statements: [StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Not Uninstalled")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=MethodInvocation(arguments=[], member=getAction, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="android.intent.action.NEW_OUTGOING_CALL")], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operandr=MethodInvocation(arguments=[], member=getAction, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="android.intent.action.BOOT_COMPLETED")], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operator=||), else_statement=IfStatement(condition=MethodInvocation(arguments=[], member=getAction, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[MethodInvocation(arguments=[MemberReference(member=SMS_RECEIVED_ACTION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle SMAction")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=IsTotalHideOn, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), name=TotalHideSms)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=getExtras, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[], type_arguments=None), name=bundle)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=Bundle, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=smsMessageArr)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=SmsMessage, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=number)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=GetStaticDataString, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), name=GetString)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=message)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), name=SendReport)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=messageWithTime)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=bundle, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Cast(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="pdus")], member=get, postfix_operators=[], prefix_operators=[], qualifier=bundle, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[None], name=Object, sub_type=None)), name=pdus)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=Object, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ArrayCreator(dimensions=[MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=pdus, selectors=[])], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=SmsMessage, sub_type=None)), name=msgs)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=SmsMessage, sub_type=None)), ForStatement(body=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type==, value=MethodInvocation(arguments=[Cast(expression=MemberReference(member=pdus, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type=BasicType(dimensions=[None], name=byte))], member=createFromPdu, postfix_operators=[], prefix_operators=[], qualifier=SmsMessage, selectors=[], type_arguments=None)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getMessageBody, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getOriginatingAddress, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="LocalTime: "), operandr=MethodInvocation(arguments=[], member=getDateTimeInstance, postfix_operators=[], prefix_operators=[], qualifier=DateFormat, selectors=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getInstance, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[MethodInvocation(arguments=[], member=getTime, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)], member=format, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operator=+), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="\r\n "), operator=+), operandr=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="&from=%s&text=%s"), ArrayCreator(dimensions=[None], initializer=ArrayInitializer(initializers=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None), MethodInvocation(arguments=[MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None)]), postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None))], member=format, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operator=+)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=SendReport, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)), label=None)]), control=ForControl(condition=BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=msgs, selectors=[]), operator=<), init=VariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=None, initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), name=i)], modifiers=set(), type=BasicType(dimensions=[], name=int)), update=[MemberReference(member=i, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[])]), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=AlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), name=alternativeControl)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=TotalHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=alternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=||), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[], member=abortBroadcast, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)])), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=TotalHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=alternativeControl, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[]), operator=&&), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle BeforeSendCheck")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=MemberReference(member=SendReport, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle Report")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetAntivirusLink, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), name=uri)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=MakeHttpRequest, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator=!=), operandr=BinaryOperation(operandl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operator=&&), operandr=BinaryOperation(operandl=MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operator=&&), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)), label=None)]))]))]))]))])), label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="This is outgoing call or boot complete")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=FirstReportDelay, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])], member=Schedule, postfix_operators=[], prefix_operators=[], qualifier=SecurityService, selectors=[], type_arguments=None), label=None)]))]
  _position: Position(line=178, column=45)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Not Uninstalled")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=179, column=13)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Not Uninstalled")]
  member: LogTrace
  _position: Position(line=179, column=13)

Node Type: Literal
  value: "Not Uninstalled"
  _position: Position(line=179, column=36)

Node Type: IfStatement
  condition: BinaryOperation(operandl=MethodInvocation(arguments=[], member=getAction, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="android.intent.action.NEW_OUTGOING_CALL")], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operandr=MethodInvocation(arguments=[], member=getAction, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="android.intent.action.BOOT_COMPLETED")], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operator=||)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="This is outgoing call or boot complete")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=FirstReportDelay, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])], member=Schedule, postfix_operators=[], prefix_operators=[], qualifier=SecurityService, selectors=[], type_arguments=None), label=None)])
  else_statement: IfStatement(condition=MethodInvocation(arguments=[], member=getAction, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[MethodInvocation(arguments=[MemberReference(member=SMS_RECEIVED_ACTION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle SMAction")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=IsTotalHideOn, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), name=TotalHideSms)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=getExtras, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[], type_arguments=None), name=bundle)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=Bundle, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=smsMessageArr)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=SmsMessage, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=number)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=GetStaticDataString, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), name=GetString)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=message)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), name=SendReport)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=messageWithTime)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=bundle, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Cast(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="pdus")], member=get, postfix_operators=[], prefix_operators=[], qualifier=bundle, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[None], name=Object, sub_type=None)), name=pdus)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=Object, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ArrayCreator(dimensions=[MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=pdus, selectors=[])], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=SmsMessage, sub_type=None)), name=msgs)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=SmsMessage, sub_type=None)), ForStatement(body=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type==, value=MethodInvocation(arguments=[Cast(expression=MemberReference(member=pdus, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type=BasicType(dimensions=[None], name=byte))], member=createFromPdu, postfix_operators=[], prefix_operators=[], qualifier=SmsMessage, selectors=[], type_arguments=None)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getMessageBody, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getOriginatingAddress, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="LocalTime: "), operandr=MethodInvocation(arguments=[], member=getDateTimeInstance, postfix_operators=[], prefix_operators=[], qualifier=DateFormat, selectors=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getInstance, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[MethodInvocation(arguments=[], member=getTime, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)], member=format, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operator=+), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="\r\n "), operator=+), operandr=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="&from=%s&text=%s"), ArrayCreator(dimensions=[None], initializer=ArrayInitializer(initializers=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None), MethodInvocation(arguments=[MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None)]), postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None))], member=format, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operator=+)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=SendReport, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)), label=None)]), control=ForControl(condition=BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=msgs, selectors=[]), operator=<), init=VariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=None, initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), name=i)], modifiers=set(), type=BasicType(dimensions=[], name=int)), update=[MemberReference(member=i, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[])]), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=AlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), name=alternativeControl)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=TotalHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=alternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=||), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[], member=abortBroadcast, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)])), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=TotalHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=alternativeControl, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[]), operator=&&), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle BeforeSendCheck")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=MemberReference(member=SendReport, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle Report")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetAntivirusLink, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), name=uri)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=MakeHttpRequest, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator=!=), operandr=BinaryOperation(operandl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operator=&&), operandr=BinaryOperation(operandl=MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operator=&&), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)), label=None)]))]))]))]))]))
  _position: Position(line=180, column=13)

Node Type: BinaryOperation
  operator: ||
  operandl: MethodInvocation(arguments=[], member=getAction, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="android.intent.action.NEW_OUTGOING_CALL")], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)
  operandr: MethodInvocation(arguments=[], member=getAction, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="android.intent.action.BOOT_COMPLETED")], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)

Node Type: MethodInvocation
  qualifier: intent
  selectors: [MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="android.intent.action.NEW_OUTGOING_CALL")], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]
  member: getAction
  _position: Position(line=180, column=17)

Node Type: MethodInvocation
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="android.intent.action.NEW_OUTGOING_CALL")]
  member: equals
  _position: Position(line=180, column=35)

Node Type: Literal
  value: "android.intent.action.NEW_OUTGOING_CALL"
  _position: Position(line=180, column=43)

Node Type: MethodInvocation
  qualifier: intent
  selectors: [MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="android.intent.action.BOOT_COMPLETED")], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]
  member: getAction
  _position: Position(line=180, column=89)

Node Type: MethodInvocation
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="android.intent.action.BOOT_COMPLETED")]
  member: equals
  _position: Position(line=180, column=107)

Node Type: Literal
  value: "android.intent.action.BOOT_COMPLETED"
  _position: Position(line=180, column=115)

Node Type: BlockStatement
  statements: [StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="This is outgoing call or boot complete")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=FirstReportDelay, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])], member=Schedule, postfix_operators=[], prefix_operators=[], qualifier=SecurityService, selectors=[], type_arguments=None), label=None)]
  _position: Position(line=180, column=156)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="This is outgoing call or boot complete")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=181, column=17)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="This is outgoing call or boot complete")]
  member: LogTrace
  _position: Position(line=181, column=17)

Node Type: Literal
  value: "This is outgoing call or boot complete"
  _position: Position(line=181, column=40)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=FirstReportDelay, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])], member=Schedule, postfix_operators=[], prefix_operators=[], qualifier=SecurityService, selectors=[], type_arguments=None)
  _position: Position(line=182, column=17)

Node Type: MethodInvocation
  qualifier: SecurityService
  arguments: [MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=FirstReportDelay, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])]
  member: Schedule
  _position: Position(line=182, column=17)

Node Type: MemberReference
  member: context
  _position: Position(line=182, column=42)

Node Type: MemberReference
  qualifier: ValueProvider
  member: FirstReportDelay
  _position: Position(line=182, column=51)

Node Type: IfStatement
  condition: MethodInvocation(arguments=[], member=getAction, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[MethodInvocation(arguments=[MemberReference(member=SMS_RECEIVED_ACTION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle SMAction")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=IsTotalHideOn, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), name=TotalHideSms)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=getExtras, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[], type_arguments=None), name=bundle)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=Bundle, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=smsMessageArr)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=SmsMessage, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=number)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=GetStaticDataString, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), name=GetString)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=message)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), name=SendReport)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=messageWithTime)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=bundle, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Cast(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="pdus")], member=get, postfix_operators=[], prefix_operators=[], qualifier=bundle, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[None], name=Object, sub_type=None)), name=pdus)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=Object, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ArrayCreator(dimensions=[MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=pdus, selectors=[])], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=SmsMessage, sub_type=None)), name=msgs)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=SmsMessage, sub_type=None)), ForStatement(body=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type==, value=MethodInvocation(arguments=[Cast(expression=MemberReference(member=pdus, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type=BasicType(dimensions=[None], name=byte))], member=createFromPdu, postfix_operators=[], prefix_operators=[], qualifier=SmsMessage, selectors=[], type_arguments=None)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getMessageBody, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getOriginatingAddress, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="LocalTime: "), operandr=MethodInvocation(arguments=[], member=getDateTimeInstance, postfix_operators=[], prefix_operators=[], qualifier=DateFormat, selectors=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getInstance, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[MethodInvocation(arguments=[], member=getTime, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)], member=format, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operator=+), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="\r\n "), operator=+), operandr=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="&from=%s&text=%s"), ArrayCreator(dimensions=[None], initializer=ArrayInitializer(initializers=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None), MethodInvocation(arguments=[MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None)]), postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None))], member=format, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operator=+)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=SendReport, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)), label=None)]), control=ForControl(condition=BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=msgs, selectors=[]), operator=<), init=VariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=None, initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), name=i)], modifiers=set(), type=BasicType(dimensions=[], name=int)), update=[MemberReference(member=i, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[])]), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=AlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), name=alternativeControl)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=TotalHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=alternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=||), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[], member=abortBroadcast, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)])), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=TotalHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=alternativeControl, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[]), operator=&&), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle BeforeSendCheck")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=MemberReference(member=SendReport, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle Report")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetAntivirusLink, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), name=uri)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=MakeHttpRequest, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator=!=), operandr=BinaryOperation(operandl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operator=&&), operandr=BinaryOperation(operandl=MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operator=&&), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)), label=None)]))]))]))]))])
  _position: Position(line=183, column=20)

Node Type: MethodInvocation
  qualifier: intent
  selectors: [MethodInvocation(arguments=[MemberReference(member=SMS_RECEIVED_ACTION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]
  member: getAction
  _position: Position(line=183, column=24)

Node Type: MethodInvocation
  arguments: [MemberReference(member=SMS_RECEIVED_ACTION, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: equals
  _position: Position(line=183, column=42)

Node Type: MemberReference
  member: SMS_RECEIVED_ACTION
  _position: Position(line=183, column=50)

Node Type: BlockStatement
  statements: [StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle SMAction")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=IsTotalHideOn, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), name=TotalHideSms)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=getExtras, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[], type_arguments=None), name=bundle)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=Bundle, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=smsMessageArr)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=SmsMessage, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=number)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=GetStaticDataString, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), name=GetString)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=message)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), name=SendReport)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=messageWithTime)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=bundle, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Cast(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="pdus")], member=get, postfix_operators=[], prefix_operators=[], qualifier=bundle, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[None], name=Object, sub_type=None)), name=pdus)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=Object, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ArrayCreator(dimensions=[MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=pdus, selectors=[])], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=SmsMessage, sub_type=None)), name=msgs)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=SmsMessage, sub_type=None)), ForStatement(body=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type==, value=MethodInvocation(arguments=[Cast(expression=MemberReference(member=pdus, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type=BasicType(dimensions=[None], name=byte))], member=createFromPdu, postfix_operators=[], prefix_operators=[], qualifier=SmsMessage, selectors=[], type_arguments=None)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getMessageBody, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getOriginatingAddress, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="LocalTime: "), operandr=MethodInvocation(arguments=[], member=getDateTimeInstance, postfix_operators=[], prefix_operators=[], qualifier=DateFormat, selectors=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getInstance, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[MethodInvocation(arguments=[], member=getTime, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)], member=format, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operator=+), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="\r\n "), operator=+), operandr=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="&from=%s&text=%s"), ArrayCreator(dimensions=[None], initializer=ArrayInitializer(initializers=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None), MethodInvocation(arguments=[MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None)]), postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None))], member=format, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operator=+)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=SendReport, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)), label=None)]), control=ForControl(condition=BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=msgs, selectors=[]), operator=<), init=VariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=None, initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), name=i)], modifiers=set(), type=BasicType(dimensions=[], name=int)), update=[MemberReference(member=i, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[])]), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=AlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), name=alternativeControl)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=TotalHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=alternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=||), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[], member=abortBroadcast, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)])), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=TotalHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=alternativeControl, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[]), operator=&&), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle BeforeSendCheck")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=MemberReference(member=SendReport, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle Report")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetAntivirusLink, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), name=uri)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=MakeHttpRequest, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator=!=), operandr=BinaryOperation(operandl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operator=&&), operandr=BinaryOperation(operandl=MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operator=&&), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)), label=None)]))]))]))]))]
  _position: Position(line=183, column=72)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle SMAction")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=184, column=17)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle SMAction")]
  member: LogTrace
  _position: Position(line=184, column=17)

Node Type: Literal
  value: "SecurityReceiver::OnBundle SMAction"
  _position: Position(line=184, column=40)

Node Type: LocalVariableDeclaration
  type: BasicType(dimensions=[], name=boolean)
  declarators: [VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=IsTotalHideOn, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), name=TotalHideSms)]
  _position: Position(line=185, column=17)

Node Type: BasicType
  name: boolean

Node Type: VariableDeclarator
  name: TotalHideSms
  initializer: MethodInvocation(arguments=[], member=IsTotalHideOn, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)

Node Type: MethodInvocation
  qualifier: ValueProvider
  member: IsTotalHideOn
  _position: Position(line=185, column=40)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=Bundle, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=getExtras, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[], type_arguments=None), name=bundle)]
  _position: Position(line=186, column=17)

Node Type: ReferenceType
  name: Bundle

Node Type: VariableDeclarator
  name: bundle
  initializer: MethodInvocation(arguments=[], member=getExtras, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[], type_arguments=None)

Node Type: MethodInvocation
  qualifier: intent
  member: getExtras
  _position: Position(line=186, column=33)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[None], name=SmsMessage, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=smsMessageArr)]
  _position: Position(line=187, column=17)

Node Type: ReferenceType
  name: SmsMessage
  dimensions: [None]

Node Type: VariableDeclarator
  name: smsMessageArr
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: Literal
  value: null
  _position: Position(line=187, column=46)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=number)]
  _position: Position(line=188, column=17)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: number
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: Literal
  value: null
  _position: Position(line=188, column=33)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=GetStaticDataString, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), name=GetString)]
  _position: Position(line=189, column=17)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: GetString
  initializer: MethodInvocation(arguments=[], member=GetStaticDataString, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)

Node Type: MethodInvocation
  qualifier: ValueProvider
  member: GetStaticDataString
  _position: Position(line=189, column=36)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=message)]
  _position: Position(line=190, column=17)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: message
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: Literal
  value: null
  _position: Position(line=190, column=34)

Node Type: LocalVariableDeclaration
  type: BasicType(dimensions=[], name=boolean)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), name=SendReport)]
  _position: Position(line=191, column=17)

Node Type: BasicType
  name: boolean

Node Type: VariableDeclarator
  name: SendReport
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)

Node Type: Literal
  value: false
  _position: Position(line=191, column=38)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=messageWithTime)]
  _position: Position(line=192, column=17)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: messageWithTime
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: Literal
  value: null
  _position: Position(line=192, column=42)

Node Type: IfStatement
  condition: BinaryOperation(operandl=MemberReference(member=bundle, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=)
  then_statement: BlockStatement(label=None, statements=[LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Cast(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="pdus")], member=get, postfix_operators=[], prefix_operators=[], qualifier=bundle, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[None], name=Object, sub_type=None)), name=pdus)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=Object, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ArrayCreator(dimensions=[MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=pdus, selectors=[])], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=SmsMessage, sub_type=None)), name=msgs)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=SmsMessage, sub_type=None)), ForStatement(body=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type==, value=MethodInvocation(arguments=[Cast(expression=MemberReference(member=pdus, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type=BasicType(dimensions=[None], name=byte))], member=createFromPdu, postfix_operators=[], prefix_operators=[], qualifier=SmsMessage, selectors=[], type_arguments=None)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getMessageBody, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getOriginatingAddress, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="LocalTime: "), operandr=MethodInvocation(arguments=[], member=getDateTimeInstance, postfix_operators=[], prefix_operators=[], qualifier=DateFormat, selectors=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getInstance, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[MethodInvocation(arguments=[], member=getTime, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)], member=format, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operator=+), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="\r\n "), operator=+), operandr=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="&from=%s&text=%s"), ArrayCreator(dimensions=[None], initializer=ArrayInitializer(initializers=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None), MethodInvocation(arguments=[MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None)]), postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None))], member=format, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operator=+)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=SendReport, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)), label=None)]), control=ForControl(condition=BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=msgs, selectors=[]), operator=<), init=VariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=None, initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), name=i)], modifiers=set(), type=BasicType(dimensions=[], name=int)), update=[MemberReference(member=i, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[])]), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=AlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), name=alternativeControl)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=TotalHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=alternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=||), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[], member=abortBroadcast, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)])), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=TotalHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=alternativeControl, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[]), operator=&&), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle BeforeSendCheck")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=MemberReference(member=SendReport, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle Report")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetAntivirusLink, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), name=uri)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=MakeHttpRequest, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator=!=), operandr=BinaryOperation(operandl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operator=&&), operandr=BinaryOperation(operandl=MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operator=&&), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)), label=None)]))]))]))])
  _position: Position(line=193, column=17)

Node Type: BinaryOperation
  operator: !=
  operandl: MemberReference(member=bundle, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: MemberReference
  member: bundle
  _position: Position(line=193, column=21)

Node Type: Literal
  value: null
  _position: Position(line=193, column=31)

Node Type: BlockStatement
  statements: [LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Cast(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="pdus")], member=get, postfix_operators=[], prefix_operators=[], qualifier=bundle, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[None], name=Object, sub_type=None)), name=pdus)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=Object, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ArrayCreator(dimensions=[MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=pdus, selectors=[])], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=SmsMessage, sub_type=None)), name=msgs)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[None], name=SmsMessage, sub_type=None)), ForStatement(body=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type==, value=MethodInvocation(arguments=[Cast(expression=MemberReference(member=pdus, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type=BasicType(dimensions=[None], name=byte))], member=createFromPdu, postfix_operators=[], prefix_operators=[], qualifier=SmsMessage, selectors=[], type_arguments=None)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getMessageBody, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getOriginatingAddress, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="LocalTime: "), operandr=MethodInvocation(arguments=[], member=getDateTimeInstance, postfix_operators=[], prefix_operators=[], qualifier=DateFormat, selectors=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getInstance, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[MethodInvocation(arguments=[], member=getTime, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)], member=format, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operator=+), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="\r\n "), operator=+), operandr=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="&from=%s&text=%s"), ArrayCreator(dimensions=[None], initializer=ArrayInitializer(initializers=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None), MethodInvocation(arguments=[MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None)]), postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None))], member=format, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operator=+)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=SendReport, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)), label=None)]), control=ForControl(condition=BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=msgs, selectors=[]), operator=<), init=VariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=None, initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), name=i)], modifiers=set(), type=BasicType(dimensions=[], name=int)), update=[MemberReference(member=i, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[])]), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=AlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), name=alternativeControl)], modifiers=set(), type=BasicType(dimensions=[], name=boolean)), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=TotalHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=alternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=||), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[], member=abortBroadcast, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)])), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=TotalHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=alternativeControl, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[]), operator=&&), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle BeforeSendCheck")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=MemberReference(member=SendReport, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle Report")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetAntivirusLink, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), name=uri)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=MakeHttpRequest, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator=!=), operandr=BinaryOperation(operandl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operator=&&), operandr=BinaryOperation(operandl=MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operator=&&), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)), label=None)]))]))]))]
  _position: Position(line=193, column=37)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[None], name=Object, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=Cast(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="pdus")], member=get, postfix_operators=[], prefix_operators=[], qualifier=bundle, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[None], name=Object, sub_type=None)), name=pdus)]
  _position: Position(line=194, column=21)

Node Type: ReferenceType
  name: Object
  dimensions: [None]

Node Type: VariableDeclarator
  name: pdus
  initializer: Cast(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="pdus")], member=get, postfix_operators=[], prefix_operators=[], qualifier=bundle, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[None], name=Object, sub_type=None))

Node Type: Cast
  type: ReferenceType(arguments=None, dimensions=[None], name=Object, sub_type=None)
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="pdus")], member=get, postfix_operators=[], prefix_operators=[], qualifier=bundle, selectors=[], type_arguments=None)

Node Type: ReferenceType
  name: Object
  dimensions: [None]

Node Type: MethodInvocation
  qualifier: bundle
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="pdus")]
  member: get
  _position: Position(line=194, column=48)

Node Type: Literal
  value: "pdus"
  _position: Position(line=194, column=59)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[None], name=SmsMessage, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=ArrayCreator(dimensions=[MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=pdus, selectors=[])], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=SmsMessage, sub_type=None)), name=msgs)]
  _position: Position(line=195, column=21)

Node Type: ReferenceType
  name: SmsMessage
  dimensions: [None]

Node Type: VariableDeclarator
  name: msgs
  initializer: ArrayCreator(dimensions=[MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=pdus, selectors=[])], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=SmsMessage, sub_type=None))

Node Type: ArrayCreator
  type: ReferenceType(arguments=None, dimensions=None, name=SmsMessage, sub_type=None)
  dimensions: [MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=pdus, selectors=[])]

Node Type: ReferenceType
  name: SmsMessage

Node Type: MemberReference
  qualifier: pdus
  member: length
  _position: Position(line=195, column=56)

Node Type: ForStatement
  control: ForControl(condition=BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=msgs, selectors=[]), operator=<), init=VariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=None, initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), name=i)], modifiers=set(), type=BasicType(dimensions=[], name=int)), update=[MemberReference(member=i, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[])])
  body: BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type==, value=MethodInvocation(arguments=[Cast(expression=MemberReference(member=pdus, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type=BasicType(dimensions=[None], name=byte))], member=createFromPdu, postfix_operators=[], prefix_operators=[], qualifier=SmsMessage, selectors=[], type_arguments=None)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getMessageBody, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getOriginatingAddress, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="LocalTime: "), operandr=MethodInvocation(arguments=[], member=getDateTimeInstance, postfix_operators=[], prefix_operators=[], qualifier=DateFormat, selectors=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getInstance, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[MethodInvocation(arguments=[], member=getTime, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)], member=format, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operator=+), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="\r\n "), operator=+), operandr=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="&from=%s&text=%s"), ArrayCreator(dimensions=[None], initializer=ArrayInitializer(initializers=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None), MethodInvocation(arguments=[MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None)]), postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None))], member=format, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operator=+)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=SendReport, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)), label=None)])
  _position: Position(line=196, column=21)

Node Type: ForControl
  init: VariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=None, initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), name=i)], modifiers=set(), type=BasicType(dimensions=[], name=int))
  condition: BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=msgs, selectors=[]), operator=<)
  update: [MemberReference(member=i, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[])]

Node Type: VariableDeclaration
  type: BasicType(dimensions=[], name=int)
  declarators: [VariableDeclarator(dimensions=None, initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), name=i)]

Node Type: BasicType
  name: int

Node Type: VariableDeclarator
  name: i
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)

Node Type: Literal
  value: 0
  _position: Position(line=196, column=34)

Node Type: BinaryOperation
  operator: <
  operandl: MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  operandr: MemberReference(member=length, postfix_operators=[], prefix_operators=[], qualifier=msgs, selectors=[])

Node Type: MemberReference
  member: i
  _position: Position(line=196, column=37)

Node Type: MemberReference
  qualifier: msgs
  member: length
  _position: Position(line=196, column=41)

Node Type: MemberReference
  postfix_operators: ['++']
  member: i
  _position: Position(line=196, column=54)

Node Type: BlockStatement
  statements: [StatementExpression(expression=Assignment(expressionl=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type==, value=MethodInvocation(arguments=[Cast(expression=MemberReference(member=pdus, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type=BasicType(dimensions=[None], name=byte))], member=createFromPdu, postfix_operators=[], prefix_operators=[], qualifier=SmsMessage, selectors=[], type_arguments=None)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getMessageBody, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getOriginatingAddress, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="LocalTime: "), operandr=MethodInvocation(arguments=[], member=getDateTimeInstance, postfix_operators=[], prefix_operators=[], qualifier=DateFormat, selectors=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getInstance, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[MethodInvocation(arguments=[], member=getTime, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)], member=format, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operator=+), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="\r\n "), operator=+), operandr=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="&from=%s&text=%s"), ArrayCreator(dimensions=[None], initializer=ArrayInitializer(initializers=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None), MethodInvocation(arguments=[MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None)]), postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None))], member=format, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operator=+)), label=None), StatementExpression(expression=Assignment(expressionl=MemberReference(member=SendReport, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)), label=None)]
  _position: Position(line=196, column=59)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type==, value=MethodInvocation(arguments=[Cast(expression=MemberReference(member=pdus, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type=BasicType(dimensions=[None], name=byte))], member=createFromPdu, postfix_operators=[], prefix_operators=[], qualifier=SmsMessage, selectors=[], type_arguments=None))
  _position: Position(line=197, column=25)

Node Type: Assignment
  expressionl: MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))])
  value: MethodInvocation(arguments=[Cast(expression=MemberReference(member=pdus, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type=BasicType(dimensions=[None], name=byte))], member=createFromPdu, postfix_operators=[], prefix_operators=[], qualifier=SmsMessage, selectors=[], type_arguments=None)
  type: =

Node Type: MemberReference
  selectors: [ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]
  member: msgs
  _position: Position(line=197, column=25)

Node Type: ArraySelector
  index: MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  _position: Position(line=197, column=29)

Node Type: MemberReference
  member: i
  _position: Position(line=197, column=30)

Node Type: MethodInvocation
  qualifier: SmsMessage
  arguments: [Cast(expression=MemberReference(member=pdus, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]), type=BasicType(dimensions=[None], name=byte))]
  member: createFromPdu
  _position: Position(line=197, column=35)

Node Type: Cast
  type: BasicType(dimensions=[None], name=byte)
  expression: MemberReference(member=pdus, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))])

Node Type: BasicType
  name: byte
  dimensions: [None]

Node Type: MemberReference
  selectors: [ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))]
  member: pdus
  _position: Position(line=197, column=69)

Node Type: ArraySelector
  index: MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  _position: Position(line=197, column=73)

Node Type: MemberReference
  member: i
  _position: Position(line=197, column=74)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getMessageBody, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]))
  _position: Position(line=198, column=25)

Node Type: Assignment
  expressionl: MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  value: MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getMessageBody, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])
  type: =

Node Type: MemberReference
  member: message
  _position: Position(line=198, column=25)

Node Type: MemberReference
  selectors: [ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getMessageBody, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]
  member: msgs
  _position: Position(line=198, column=35)

Node Type: ArraySelector
  index: MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  _position: Position(line=198, column=39)

Node Type: MemberReference
  member: i
  _position: Position(line=198, column=40)

Node Type: MethodInvocation
  member: getMessageBody
  _position: Position(line=198, column=42)

Node Type: MethodInvocation
  member: toString
  _position: Position(line=198, column=59)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getOriginatingAddress, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]))
  _position: Position(line=199, column=25)

Node Type: Assignment
  expressionl: MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  value: MemberReference(member=msgs, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getOriginatingAddress, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)])
  type: =

Node Type: MemberReference
  member: number
  _position: Position(line=199, column=25)

Node Type: MemberReference
  selectors: [ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=getOriginatingAddress, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]
  member: msgs
  _position: Position(line=199, column=34)

Node Type: ArraySelector
  index: MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  _position: Position(line=199, column=38)

Node Type: MemberReference
  member: i
  _position: Position(line=199, column=39)

Node Type: MethodInvocation
  member: getOriginatingAddress
  _position: Position(line=199, column=41)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="LocalTime: "), operandr=MethodInvocation(arguments=[], member=getDateTimeInstance, postfix_operators=[], prefix_operators=[], qualifier=DateFormat, selectors=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getInstance, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[MethodInvocation(arguments=[], member=getTime, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)], member=format, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operator=+), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="\r\n "), operator=+), operandr=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+))
  _position: Position(line=200, column=25)

Node Type: Assignment
  expressionl: MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  value: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="LocalTime: "), operandr=MethodInvocation(arguments=[], member=getDateTimeInstance, postfix_operators=[], prefix_operators=[], qualifier=DateFormat, selectors=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getInstance, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[MethodInvocation(arguments=[], member=getTime, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)], member=format, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operator=+), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="\r\n "), operator=+), operandr=MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)
  type: =

Node Type: MemberReference
  member: messageWithTime
  _position: Position(line=200, column=25)

Node Type: BinaryOperation
  operator: +
  operandl: BinaryOperation(operandl=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="LocalTime: "), operandr=MethodInvocation(arguments=[], member=getDateTimeInstance, postfix_operators=[], prefix_operators=[], qualifier=DateFormat, selectors=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getInstance, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[MethodInvocation(arguments=[], member=getTime, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)], member=format, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operator=+), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="\r\n "), operator=+)
  operandr: MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])

Node Type: BinaryOperation
  operator: +
  operandl: BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="LocalTime: "), operandr=MethodInvocation(arguments=[], member=getDateTimeInstance, postfix_operators=[], prefix_operators=[], qualifier=DateFormat, selectors=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getInstance, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[MethodInvocation(arguments=[], member=getTime, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)], member=format, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), operator=+)
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="\r\n ")

Node Type: BinaryOperation
  operator: +
  operandl: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="LocalTime: ")
  operandr: MethodInvocation(arguments=[], member=getDateTimeInstance, postfix_operators=[], prefix_operators=[], qualifier=DateFormat, selectors=[MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getInstance, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[MethodInvocation(arguments=[], member=getTime, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)], member=format, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)

Node Type: Literal
  value: "LocalTime: "
  _position: Position(line=200, column=43)

Node Type: MethodInvocation
  qualifier: DateFormat
  selectors: [MethodInvocation(arguments=[MethodInvocation(arguments=[], member=getInstance, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[MethodInvocation(arguments=[], member=getTime, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)], member=format, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]
  member: getDateTimeInstance
  _position: Position(line=200, column=59)

Node Type: MethodInvocation
  arguments: [MethodInvocation(arguments=[], member=getInstance, postfix_operators=[], prefix_operators=[], qualifier=Calendar, selectors=[MethodInvocation(arguments=[], member=getTime, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)]
  member: format
  _position: Position(line=200, column=91)

Node Type: MethodInvocation
  qualifier: Calendar
  selectors: [MethodInvocation(arguments=[], member=getTime, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]
  member: getInstance
  _position: Position(line=200, column=99)

Node Type: MethodInvocation
  member: getTime
  _position: Position(line=200, column=121)

Node Type: Literal
  value: "\r\n "
  _position: Position(line=200, column=135)

Node Type: MemberReference
  member: message
  _position: Position(line=200, column=145)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="&from=%s&text=%s"), ArrayCreator(dimensions=[None], initializer=ArrayInitializer(initializers=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None), MethodInvocation(arguments=[MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None)]), postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None))], member=format, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operator=+))
  _position: Position(line=201, column=25)

Node Type: Assignment
  expressionl: MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  value: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="&from=%s&text=%s"), ArrayCreator(dimensions=[None], initializer=ArrayInitializer(initializers=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None), MethodInvocation(arguments=[MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None)]), postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None))], member=format, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operator=+)
  type: =

Node Type: MemberReference
  member: GetString
  _position: Position(line=201, column=25)

Node Type: BinaryOperation
  operator: +
  operandl: MethodInvocation(arguments=[MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None)
  operandr: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="&from=%s&text=%s"), ArrayCreator(dimensions=[None], initializer=ArrayInitializer(initializers=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None), MethodInvocation(arguments=[MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None)]), postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None))], member=format, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None)

Node Type: MethodInvocation
  qualifier: String
  arguments: [MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: valueOf
  _position: Position(line=201, column=37)

Node Type: MemberReference
  member: GetString
  _position: Position(line=201, column=52)

Node Type: MethodInvocation
  qualifier: String
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="&from=%s&text=%s"), ArrayCreator(dimensions=[None], initializer=ArrayInitializer(initializers=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None), MethodInvocation(arguments=[MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None)]), postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None))]
  member: format
  _position: Position(line=201, column=65)

Node Type: Literal
  value: "&from=%s&text=%s"
  _position: Position(line=201, column=79)

Node Type: ArrayCreator
  type: ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None)
  dimensions: [None]
  initializer: ArrayInitializer(initializers=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None), MethodInvocation(arguments=[MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None)])

Node Type: ReferenceType
  name: Object

Node Type: ArrayInitializer
  initializers: [MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None), MethodInvocation(arguments=[MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None)]

Node Type: MethodInvocation
  qualifier: URLEncoder
  arguments: [MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: encode
  _position: Position(line=201, column=112)

Node Type: MemberReference
  member: number
  _position: Position(line=201, column=130)

Node Type: MethodInvocation
  qualifier: URLEncoder
  arguments: [MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: encode
  _position: Position(line=201, column=139)

Node Type: MemberReference
  member: messageWithTime
  _position: Position(line=201, column=157)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=SendReport, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true))
  _position: Position(line=202, column=25)

Node Type: Assignment
  expressionl: MemberReference(member=SendReport, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  value: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)
  type: =

Node Type: MemberReference
  member: SendReport
  _position: Position(line=202, column=25)

Node Type: Literal
  value: true
  _position: Position(line=202, column=38)

Node Type: LocalVariableDeclaration
  type: BasicType(dimensions=[], name=boolean)
  declarators: [VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=AlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), name=alternativeControl)]
  _position: Position(line=204, column=21)

Node Type: BasicType
  name: boolean

Node Type: VariableDeclarator
  name: alternativeControl
  initializer: MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=AlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)

Node Type: MethodInvocation
  arguments: [MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: AlternativeControl
  _position: Position(line=204, column=50)

Node Type: MemberReference
  member: message
  _position: Position(line=204, column=69)

Node Type: IfStatement
  condition: BinaryOperation(operandl=MemberReference(member=TotalHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=alternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=||)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[], member=abortBroadcast, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)])
  _position: Position(line=205, column=21)

Node Type: BinaryOperation
  operator: ||
  operandl: MemberReference(member=TotalHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  operandr: MemberReference(member=alternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])

Node Type: MemberReference
  member: TotalHideSms
  _position: Position(line=205, column=25)

Node Type: MemberReference
  member: alternativeControl
  _position: Position(line=205, column=41)

Node Type: BlockStatement
  statements: [StatementExpression(expression=MethodInvocation(arguments=[], member=abortBroadcast, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)]
  _position: Position(line=205, column=61)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[], member=abortBroadcast, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
  _position: Position(line=206, column=25)

Node Type: MethodInvocation
  member: abortBroadcast
  _position: Position(line=206, column=25)

Node Type: IfStatement
  condition: BinaryOperation(operandl=MemberReference(member=TotalHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=alternativeControl, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[]), operator=&&)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle BeforeSendCheck")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=MemberReference(member=SendReport, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle Report")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetAntivirusLink, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), name=uri)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=MakeHttpRequest, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator=!=), operandr=BinaryOperation(operandl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operator=&&), operandr=BinaryOperation(operandl=MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operator=&&), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)), label=None)]))]))])
  _position: Position(line=208, column=21)

Node Type: BinaryOperation
  operator: &&
  operandl: MemberReference(member=TotalHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  operandr: MemberReference(member=alternativeControl, postfix_operators=[], prefix_operators=['!'], qualifier=, selectors=[])

Node Type: MemberReference
  member: TotalHideSms
  _position: Position(line=208, column=25)

Node Type: MemberReference
  prefix_operators: ['!']
  member: alternativeControl
  _position: Position(line=208, column=42)

Node Type: BlockStatement
  statements: [StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle BeforeSendCheck")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=MemberReference(member=SendReport, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle Report")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetAntivirusLink, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), name=uri)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=MakeHttpRequest, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator=!=), operandr=BinaryOperation(operandl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operator=&&), operandr=BinaryOperation(operandl=MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operator=&&), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)), label=None)]))]))]
  _position: Position(line=208, column=62)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle BeforeSendCheck")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=209, column=25)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle BeforeSendCheck")]
  member: LogTrace
  _position: Position(line=209, column=25)

Node Type: Literal
  value: "SecurityReceiver::OnBundle BeforeSendCheck"
  _position: Position(line=209, column=48)

Node Type: IfStatement
  condition: MemberReference(member=SendReport, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle Report")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetAntivirusLink, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), name=uri)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=MakeHttpRequest, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator=!=), operandr=BinaryOperation(operandl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operator=&&), operandr=BinaryOperation(operandl=MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operator=&&), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)), label=None)]))])
  _position: Position(line=210, column=25)

Node Type: MemberReference
  member: SendReport
  _position: Position(line=210, column=29)

Node Type: BlockStatement
  statements: [StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle Report")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetAntivirusLink, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), name=uri)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=MakeHttpRequest, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator=!=), operandr=BinaryOperation(operandl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operator=&&), operandr=BinaryOperation(operandl=MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operator=&&), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)), label=None)]))]
  _position: Position(line=210, column=41)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle Report")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=211, column=29)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityReceiver::OnBundle Report")]
  member: LogTrace
  _position: Position(line=211, column=29)

Node Type: Literal
  value: "SecurityReceiver::OnBundle Report"
  _position: Position(line=211, column=52)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetAntivirusLink, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), name=uri)]
  _position: Position(line=212, column=29)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: uri
  initializer: BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetAntivirusLink, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)

Node Type: BinaryOperation
  operator: +
  operandl: MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetAntivirusLink, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None)
  operandr: MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])

Node Type: MethodInvocation
  qualifier: String
  arguments: [MethodInvocation(arguments=[], member=GetAntivirusLink, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)]
  member: valueOf
  _position: Position(line=212, column=42)

Node Type: MethodInvocation
  qualifier: ValueProvider
  member: GetAntivirusLink
  _position: Position(line=212, column=57)

Node Type: MemberReference
  member: GetString
  _position: Position(line=212, column=93)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=213, column=29)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: LogTrace
  _position: Position(line=213, column=29)

Node Type: MemberReference
  member: uri
  _position: Position(line=213, column=52)

Node Type: IfStatement
  condition: BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=MakeHttpRequest, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator=!=), operandr=BinaryOperation(operandl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operator=&&), operandr=BinaryOperation(operandl=MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operator=&&)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)), label=None)])
  _position: Position(line=214, column=29)

Node Type: BinaryOperation
  operator: &&
  operandl: BinaryOperation(operandl=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=MakeHttpRequest, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator=!=), operandr=BinaryOperation(operandl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), operator=&&)
  operandr: BinaryOperation(operandl=MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=)

Node Type: BinaryOperation
  operator: &&
  operandl: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=MakeHttpRequest, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator=!=)
  operandr: BinaryOperation(operandl=MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=)

Node Type: BinaryOperation
  operator: !=
  operandl: MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=MakeHttpRequest, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None)
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200)

Node Type: MethodInvocation
  qualifier: WebManager
  arguments: [MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: MakeHttpRequest
  _position: Position(line=214, column=33)

Node Type: MemberReference
  member: uri
  _position: Position(line=214, column=60)

Node Type: Literal
  value: 200
  _position: Position(line=214, column=68)

Node Type: BinaryOperation
  operator: !=
  operandl: MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: MemberReference
  member: number
  _position: Position(line=214, column=75)

Node Type: Literal
  value: null
  _position: Position(line=214, column=85)

Node Type: BinaryOperation
  operator: !=
  operandl: MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: MemberReference
  member: messageWithTime
  _position: Position(line=214, column=93)

Node Type: Literal
  value: null
  _position: Position(line=214, column=112)

Node Type: BlockStatement
  statements: [StatementExpression(expression=ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)), label=None)]
  _position: Position(line=214, column=118)

Node Type: StatementExpression
  expression: ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None))
  _position: Position(line=215, column=33)

Node Type: ClassCreator
  selectors: [MethodInvocation(arguments=[MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]
  type: ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)
  arguments: [MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]

Node Type: MethodInvocation
  arguments: [MemberReference(member=number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=messageWithTime, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: insert
  _position: Position(line=215, column=57)

Node Type: MemberReference
  member: number
  _position: Position(line=215, column=65)

Node Type: MemberReference
  member: messageWithTime
  _position: Position(line=215, column=73)

Node Type: ReferenceType
  name: DataStorage

Node Type: MemberReference
  member: context
  _position: Position(line=215, column=49)

Node Type: ReferenceType
  name: BroadcastReceiver

========================================
File: SecurityService.java
Node Type: CompilationUnit
  package: PackageDeclaration(annotations=None, documentation=None, modifiers=None, name=com.android.security)
  imports: [Import(path=android.app.AlarmManager, static=False, wildcard=False), Import(path=android.app.PendingIntent, static=False, wildcard=False), Import(path=android.app.Service, static=False, wildcard=False), Import(path=android.content.Context, static=False, wildcard=False), Import(path=android.content.Intent, static=False, wildcard=False), Import(path=android.os.IBinder, static=False, wildcard=False), Import(path=android.os.SystemClock, static=False, wildcard=False)]
  types: [ClassDeclaration(annotations=[], body=[FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=None, name=pendingIntent)], documentation=None, modifiers={'public', 'static'}, type=ReferenceType(arguments=None, dimensions=[], name=PendingIntent, sub_type=None)), MethodDeclaration(annotations=[], body=[StatementExpression(expression=Cast(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="alarm")], member=getSystemService, postfix_operators=[], prefix_operators=[], qualifier=context, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[], name=AlarmManager, sub_type=None)), label=None)], documentation=None, modifiers={'public', 'static'}, name=CancelAlarm, parameters=[FormalParameter(annotations=[], modifiers=set(), name=context, type=ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None), varargs=False)], return_type=None, throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[IfStatement(condition=MethodInvocation(arguments=[], member=IsAlternativeControlOn, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Alternative Control is on. We cant use scheduller")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=None, label=None)])), StatementExpression(expression=Assignment(expressionl=MemberReference(member=pendingIntent, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), ClassReference(postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=SecurityService, sub_type=None))], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Intent, sub_type=None)), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getService, postfix_operators=[], prefix_operators=[], qualifier=PendingIntent, selectors=[], type_arguments=None)), label=None), StatementExpression(expression=Cast(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="alarm")], member=getSystemService, postfix_operators=[], prefix_operators=[], qualifier=context, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[], name=AlarmManager, sub_type=None)), label=None)], documentation=None, modifiers={'static'}, name=Schedule, parameters=[FormalParameter(annotations=[], modifiers=set(), name=context, type=ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=Seconds, type=BasicType(dimensions=[], name=int), varargs=False)], return_type=None, throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), label=None)], documentation=None, modifiers={'public'}, name=onBind, parameters=[FormalParameter(annotations=[], modifiers=set(), name=intent, type=ReferenceType(arguments=None, dimensions=[], name=Intent, sub_type=None), varargs=False)], return_type=ReferenceType(arguments=None, dimensions=[], name=IBinder, sub_type=None), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[], documentation=None, modifiers={'public'}, name=onCreate, parameters=[], return_type=None, throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[StatementExpression(expression=SuperMethodInvocation(arguments=[MemberReference(member=intent, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=startId, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=onStart, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public'}, name=onStart, parameters=[FormalParameter(annotations=[], modifiers=set(), name=intent, type=ReferenceType(arguments=None, dimensions=[], name=Intent, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=startId, type=BasicType(dimensions=[], name=int), varargs=False)], return_type=None, throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[StatementExpression(expression=MethodInvocation(arguments=[This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[])], member=SetContext, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=intent, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityService::onStartCommand "), operandr=MethodInvocation(arguments=[], member=toString, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[], type_arguments=None), operator=+)], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None)])), StatementExpression(expression=MethodInvocation(arguments=[This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[])], member=CancelAlarm, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Cancel Alarm success")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=MethodInvocation(arguments=[], member=IsUnInstalled, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Software Uninstalled")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), label=None)])), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Reschedule call")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[]), MemberReference(member=TimerReportInSeconds, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])], member=Schedule, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Report from Scheduler call")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[])], member=ReportFromScheduler, postfix_operators=[], prefix_operators=[], qualifier=SecurityReceiver, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), label=None)], documentation=None, modifiers={'public'}, name=onStartCommand, parameters=[FormalParameter(annotations=[], modifiers=set(), name=intent, type=ReferenceType(arguments=None, dimensions=[], name=Intent, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=flags, type=BasicType(dimensions=[], name=int), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=startId, type=BasicType(dimensions=[], name=int), varargs=False)], return_type=BasicType(dimensions=[], name=int), throws=None, type_parameters=None)], documentation=None, extends=ReferenceType(arguments=None, dimensions=[], name=Service, sub_type=None), implements=None, modifiers={'public'}, name=SecurityService, type_parameters=None)]

Node Type: PackageDeclaration
  name: com.android.security
  _position: Position(line=1, column=9)

Node Type: Import
  path: android.app.AlarmManager
  _position: Position(line=3, column=1)

Node Type: Import
  path: android.app.PendingIntent
  _position: Position(line=4, column=1)

Node Type: Import
  path: android.app.Service
  _position: Position(line=5, column=1)

Node Type: Import
  path: android.content.Context
  _position: Position(line=6, column=1)

Node Type: Import
  path: android.content.Intent
  _position: Position(line=7, column=1)

Node Type: Import
  path: android.os.IBinder
  _position: Position(line=8, column=1)

Node Type: Import
  path: android.os.SystemClock
  _position: Position(line=9, column=1)

Node Type: ClassDeclaration
  modifiers: {'public'}
  name: SecurityService
  body: [FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=None, name=pendingIntent)], documentation=None, modifiers={'public', 'static'}, type=ReferenceType(arguments=None, dimensions=[], name=PendingIntent, sub_type=None)), MethodDeclaration(annotations=[], body=[StatementExpression(expression=Cast(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="alarm")], member=getSystemService, postfix_operators=[], prefix_operators=[], qualifier=context, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[], name=AlarmManager, sub_type=None)), label=None)], documentation=None, modifiers={'public', 'static'}, name=CancelAlarm, parameters=[FormalParameter(annotations=[], modifiers=set(), name=context, type=ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None), varargs=False)], return_type=None, throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[IfStatement(condition=MethodInvocation(arguments=[], member=IsAlternativeControlOn, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Alternative Control is on. We cant use scheduller")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=None, label=None)])), StatementExpression(expression=Assignment(expressionl=MemberReference(member=pendingIntent, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), ClassReference(postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=SecurityService, sub_type=None))], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Intent, sub_type=None)), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getService, postfix_operators=[], prefix_operators=[], qualifier=PendingIntent, selectors=[], type_arguments=None)), label=None), StatementExpression(expression=Cast(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="alarm")], member=getSystemService, postfix_operators=[], prefix_operators=[], qualifier=context, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[], name=AlarmManager, sub_type=None)), label=None)], documentation=None, modifiers={'static'}, name=Schedule, parameters=[FormalParameter(annotations=[], modifiers=set(), name=context, type=ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=Seconds, type=BasicType(dimensions=[], name=int), varargs=False)], return_type=None, throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), label=None)], documentation=None, modifiers={'public'}, name=onBind, parameters=[FormalParameter(annotations=[], modifiers=set(), name=intent, type=ReferenceType(arguments=None, dimensions=[], name=Intent, sub_type=None), varargs=False)], return_type=ReferenceType(arguments=None, dimensions=[], name=IBinder, sub_type=None), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[], documentation=None, modifiers={'public'}, name=onCreate, parameters=[], return_type=None, throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[StatementExpression(expression=SuperMethodInvocation(arguments=[MemberReference(member=intent, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=startId, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=onStart, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public'}, name=onStart, parameters=[FormalParameter(annotations=[], modifiers=set(), name=intent, type=ReferenceType(arguments=None, dimensions=[], name=Intent, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=startId, type=BasicType(dimensions=[], name=int), varargs=False)], return_type=None, throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[StatementExpression(expression=MethodInvocation(arguments=[This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[])], member=SetContext, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=intent, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityService::onStartCommand "), operandr=MethodInvocation(arguments=[], member=toString, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[], type_arguments=None), operator=+)], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None)])), StatementExpression(expression=MethodInvocation(arguments=[This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[])], member=CancelAlarm, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Cancel Alarm success")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=MethodInvocation(arguments=[], member=IsUnInstalled, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Software Uninstalled")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), label=None)])), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Reschedule call")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[]), MemberReference(member=TimerReportInSeconds, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])], member=Schedule, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Report from Scheduler call")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[])], member=ReportFromScheduler, postfix_operators=[], prefix_operators=[], qualifier=SecurityReceiver, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), label=None)], documentation=None, modifiers={'public'}, name=onStartCommand, parameters=[FormalParameter(annotations=[], modifiers=set(), name=intent, type=ReferenceType(arguments=None, dimensions=[], name=Intent, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=flags, type=BasicType(dimensions=[], name=int), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=startId, type=BasicType(dimensions=[], name=int), varargs=False)], return_type=BasicType(dimensions=[], name=int), throws=None, type_parameters=None)]
  extends: ReferenceType(arguments=None, dimensions=[], name=Service, sub_type=None)
  _position: Position(line=11, column=8)

Node Type: FieldDeclaration
  modifiers: {'public', 'static'}
  type: ReferenceType(arguments=None, dimensions=[], name=PendingIntent, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=None, name=pendingIntent)]
  _position: Position(line=12, column=19)

Node Type: ReferenceType
  name: PendingIntent

Node Type: VariableDeclarator
  name: pendingIntent

Node Type: MethodDeclaration
  modifiers: {'public', 'static'}
  name: CancelAlarm
  parameters: [FormalParameter(annotations=[], modifiers=set(), name=context, type=ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None), varargs=False)]
  body: [StatementExpression(expression=Cast(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="alarm")], member=getSystemService, postfix_operators=[], prefix_operators=[], qualifier=context, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[], name=AlarmManager, sub_type=None)), label=None)]
  _position: Position(line=14, column=19)

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None)
  name: context
  _position: Position(line=14, column=36)

Node Type: ReferenceType
  name: Context

Node Type: StatementExpression
  expression: Cast(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="alarm")], member=getSystemService, postfix_operators=[], prefix_operators=[], qualifier=context, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[], name=AlarmManager, sub_type=None))
  _position: Position(line=15, column=9)

Node Type: Cast
  type: ReferenceType(arguments=None, dimensions=[], name=AlarmManager, sub_type=None)
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="alarm")], member=getSystemService, postfix_operators=[], prefix_operators=[], qualifier=context, selectors=[], type_arguments=None)
  selectors: [MethodInvocation(arguments=[MemberReference(member=pendingIntent, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=cancel, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]

Node Type: ReferenceType
  name: AlarmManager

Node Type: MethodInvocation
  qualifier: context
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="alarm")]
  member: getSystemService
  _position: Position(line=15, column=25)

Node Type: Literal
  value: "alarm"
  _position: Position(line=15, column=50)

Node Type: MethodDeclaration
  modifiers: {'static'}
  name: Schedule
  parameters: [FormalParameter(annotations=[], modifiers=set(), name=context, type=ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=Seconds, type=BasicType(dimensions=[], name=int), varargs=False)]
  body: [IfStatement(condition=MethodInvocation(arguments=[], member=IsAlternativeControlOn, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Alternative Control is on. We cant use scheduller")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=None, label=None)])), StatementExpression(expression=Assignment(expressionl=MemberReference(member=pendingIntent, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), ClassReference(postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=SecurityService, sub_type=None))], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Intent, sub_type=None)), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getService, postfix_operators=[], prefix_operators=[], qualifier=PendingIntent, selectors=[], type_arguments=None)), label=None), StatementExpression(expression=Cast(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="alarm")], member=getSystemService, postfix_operators=[], prefix_operators=[], qualifier=context, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[], name=AlarmManager, sub_type=None)), label=None)]
  _position: Position(line=18, column=12)

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None)
  name: context
  _position: Position(line=18, column=26)

Node Type: ReferenceType
  name: Context

Node Type: FormalParameter
  type: BasicType(dimensions=[], name=int)
  name: Seconds
  _position: Position(line=18, column=43)

Node Type: BasicType
  name: int

Node Type: IfStatement
  condition: MethodInvocation(arguments=[], member=IsAlternativeControlOn, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Alternative Control is on. We cant use scheduller")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=None, label=None)])
  _position: Position(line=19, column=9)

Node Type: MethodInvocation
  qualifier: ValueProvider
  member: IsAlternativeControlOn
  _position: Position(line=19, column=13)

Node Type: BlockStatement
  statements: [StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Alternative Control is on. We cant use scheduller")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=None, label=None)]
  _position: Position(line=19, column=53)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Alternative Control is on. We cant use scheduller")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=20, column=13)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Alternative Control is on. We cant use scheduller")]
  member: LogTrace
  _position: Position(line=20, column=13)

Node Type: Literal
  value: "Alternative Control is on. We cant use scheduller"
  _position: Position(line=20, column=36)

Node Type: ReturnStatement
  _position: Position(line=21, column=13)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=pendingIntent, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), ClassReference(postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=SecurityService, sub_type=None))], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Intent, sub_type=None)), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getService, postfix_operators=[], prefix_operators=[], qualifier=PendingIntent, selectors=[], type_arguments=None))
  _position: Position(line=23, column=9)

Node Type: Assignment
  expressionl: MemberReference(member=pendingIntent, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  value: MethodInvocation(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), ClassReference(postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=SecurityService, sub_type=None))], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Intent, sub_type=None)), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getService, postfix_operators=[], prefix_operators=[], qualifier=PendingIntent, selectors=[], type_arguments=None)
  type: =

Node Type: MemberReference
  member: pendingIntent
  _position: Position(line=23, column=9)

Node Type: MethodInvocation
  qualifier: PendingIntent
  arguments: [MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), ClassCreator(arguments=[MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), ClassReference(postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=SecurityService, sub_type=None))], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Intent, sub_type=None)), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)]
  member: getService
  _position: Position(line=23, column=25)

Node Type: MemberReference
  member: context
  _position: Position(line=23, column=50)

Node Type: Literal
  value: 0
  _position: Position(line=23, column=59)

Node Type: ClassCreator
  type: ReferenceType(arguments=None, dimensions=None, name=Intent, sub_type=None)
  arguments: [MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), ClassReference(postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=SecurityService, sub_type=None))]

Node Type: ReferenceType
  name: Intent

Node Type: MemberReference
  member: context
  _position: Position(line=23, column=73)

Node Type: ClassReference
  type: ReferenceType(arguments=None, dimensions=None, name=SecurityService, sub_type=None)
  _position: Position(line=23, column=82)

Node Type: ReferenceType
  name: SecurityService

Node Type: Literal
  value: 0
  _position: Position(line=23, column=106)

Node Type: StatementExpression
  expression: Cast(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="alarm")], member=getSystemService, postfix_operators=[], prefix_operators=[], qualifier=context, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[], name=AlarmManager, sub_type=None))
  _position: Position(line=24, column=9)

Node Type: Cast
  type: ReferenceType(arguments=None, dimensions=[], name=AlarmManager, sub_type=None)
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="alarm")], member=getSystemService, postfix_operators=[], prefix_operators=[], qualifier=context, selectors=[], type_arguments=None)
  selectors: [MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), BinaryOperation(operandl=MethodInvocation(arguments=[], member=elapsedRealtime, postfix_operators=[], prefix_operators=[], qualifier=SystemClock, selectors=[], type_arguments=None), operandr=Cast(expression=BinaryOperation(operandl=MemberReference(member=Seconds, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1000), operator=*), type=BasicType(dimensions=[], name=long)), operator=+), MemberReference(member=pendingIntent, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=set, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]

Node Type: ReferenceType
  name: AlarmManager

Node Type: MethodInvocation
  qualifier: context
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="alarm")]
  member: getSystemService
  _position: Position(line=24, column=25)

Node Type: Literal
  value: "alarm"
  _position: Position(line=24, column=50)

Node Type: MethodDeclaration
  modifiers: {'public'}
  return_type: ReferenceType(arguments=None, dimensions=[], name=IBinder, sub_type=None)
  name: onBind
  parameters: [FormalParameter(annotations=[], modifiers=set(), name=intent, type=ReferenceType(arguments=None, dimensions=[], name=Intent, sub_type=None), varargs=False)]
  body: [ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), label=None)]
  _position: Position(line=27, column=12)

Node Type: ReferenceType
  name: IBinder

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=Intent, sub_type=None)
  name: intent
  _position: Position(line=27, column=27)

Node Type: ReferenceType
  name: Intent

Node Type: ReturnStatement
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)
  _position: Position(line=28, column=9)

Node Type: Literal
  value: null
  _position: Position(line=28, column=16)

Node Type: MethodDeclaration
  modifiers: {'public'}
  name: onCreate
  _position: Position(line=31, column=12)

Node Type: MethodDeclaration
  modifiers: {'public'}
  name: onStart
  parameters: [FormalParameter(annotations=[], modifiers=set(), name=intent, type=ReferenceType(arguments=None, dimensions=[], name=Intent, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=startId, type=BasicType(dimensions=[], name=int), varargs=False)]
  body: [StatementExpression(expression=SuperMethodInvocation(arguments=[MemberReference(member=intent, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=startId, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=onStart, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type_arguments=None), label=None)]
  _position: Position(line=34, column=12)

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=Intent, sub_type=None)
  name: intent
  _position: Position(line=34, column=25)

Node Type: ReferenceType
  name: Intent

Node Type: FormalParameter
  type: BasicType(dimensions=[], name=int)
  name: startId
  _position: Position(line=34, column=40)

Node Type: BasicType
  name: int

Node Type: StatementExpression
  expression: SuperMethodInvocation(arguments=[MemberReference(member=intent, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=startId, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=onStart, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type_arguments=None)
  _position: Position(line=35, column=9)

Node Type: SuperMethodInvocation
  arguments: [MemberReference(member=intent, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=startId, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: onStart

Node Type: MemberReference
  member: intent
  _position: Position(line=35, column=23)

Node Type: MemberReference
  member: startId
  _position: Position(line=35, column=31)

Node Type: MethodDeclaration
  modifiers: {'public'}
  return_type: BasicType(dimensions=[], name=int)
  name: onStartCommand
  parameters: [FormalParameter(annotations=[], modifiers=set(), name=intent, type=ReferenceType(arguments=None, dimensions=[], name=Intent, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=flags, type=BasicType(dimensions=[], name=int), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=startId, type=BasicType(dimensions=[], name=int), varargs=False)]
  body: [StatementExpression(expression=MethodInvocation(arguments=[This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[])], member=SetContext, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=intent, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityService::onStartCommand "), operandr=MethodInvocation(arguments=[], member=toString, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[], type_arguments=None), operator=+)], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None)])), StatementExpression(expression=MethodInvocation(arguments=[This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[])], member=CancelAlarm, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Cancel Alarm success")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), IfStatement(condition=MethodInvocation(arguments=[], member=IsUnInstalled, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Software Uninstalled")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), label=None)])), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Reschedule call")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[]), MemberReference(member=TimerReportInSeconds, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])], member=Schedule, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Report from Scheduler call")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[])], member=ReportFromScheduler, postfix_operators=[], prefix_operators=[], qualifier=SecurityReceiver, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), label=None)]
  _position: Position(line=38, column=12)

Node Type: BasicType
  name: int

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=Intent, sub_type=None)
  name: intent
  _position: Position(line=38, column=31)

Node Type: ReferenceType
  name: Intent

Node Type: FormalParameter
  type: BasicType(dimensions=[], name=int)
  name: flags
  _position: Position(line=38, column=46)

Node Type: BasicType
  name: int

Node Type: FormalParameter
  type: BasicType(dimensions=[], name=int)
  name: startId
  _position: Position(line=38, column=57)

Node Type: BasicType
  name: int

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[])], member=SetContext, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=39, column=9)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[])]
  member: SetContext
  _position: Position(line=39, column=9)

Node Type: This

Node Type: IfStatement
  condition: BinaryOperation(operandl=MemberReference(member=intent, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityService::onStartCommand "), operandr=MethodInvocation(arguments=[], member=toString, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[], type_arguments=None), operator=+)], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None)])
  _position: Position(line=40, column=9)

Node Type: BinaryOperation
  operator: !=
  operandl: MemberReference(member=intent, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: MemberReference
  member: intent
  _position: Position(line=40, column=13)

Node Type: Literal
  value: null
  _position: Position(line=40, column=23)

Node Type: BlockStatement
  statements: [StatementExpression(expression=MethodInvocation(arguments=[BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityService::onStartCommand "), operandr=MethodInvocation(arguments=[], member=toString, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[], type_arguments=None), operator=+)], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None)]
  _position: Position(line=40, column=29)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityService::onStartCommand "), operandr=MethodInvocation(arguments=[], member=toString, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[], type_arguments=None), operator=+)], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=41, column=13)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityService::onStartCommand "), operandr=MethodInvocation(arguments=[], member=toString, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[], type_arguments=None), operator=+)]
  member: LogTrace
  _position: Position(line=41, column=13)

Node Type: BinaryOperation
  operator: +
  operandl: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SecurityService::onStartCommand ")
  operandr: MethodInvocation(arguments=[], member=toString, postfix_operators=[], prefix_operators=[], qualifier=intent, selectors=[], type_arguments=None)

Node Type: Literal
  value: "SecurityService::onStartCommand "
  _position: Position(line=41, column=36)

Node Type: MethodInvocation
  qualifier: intent
  member: toString
  _position: Position(line=41, column=73)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[])], member=CancelAlarm, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
  _position: Position(line=43, column=9)

Node Type: MethodInvocation
  arguments: [This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[])]
  member: CancelAlarm
  _position: Position(line=43, column=9)

Node Type: This

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Cancel Alarm success")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=44, column=9)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Cancel Alarm success")]
  member: LogTrace
  _position: Position(line=44, column=9)

Node Type: Literal
  value: "Cancel Alarm success"
  _position: Position(line=44, column=32)

Node Type: IfStatement
  condition: MethodInvocation(arguments=[], member=IsUnInstalled, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Software Uninstalled")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), label=None)])
  _position: Position(line=45, column=9)

Node Type: MethodInvocation
  qualifier: ValueProvider
  member: IsUnInstalled
  _position: Position(line=45, column=13)

Node Type: BlockStatement
  statements: [StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Software Uninstalled")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), label=None)]
  _position: Position(line=45, column=44)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Software Uninstalled")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=46, column=13)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Software Uninstalled")]
  member: LogTrace
  _position: Position(line=46, column=13)

Node Type: Literal
  value: "Software Uninstalled"
  _position: Position(line=46, column=36)

Node Type: ReturnStatement
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2)
  _position: Position(line=47, column=13)

Node Type: Literal
  value: 2
  _position: Position(line=47, column=20)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Reschedule call")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=49, column=9)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Reschedule call")]
  member: LogTrace
  _position: Position(line=49, column=9)

Node Type: Literal
  value: "Reschedule call"
  _position: Position(line=49, column=32)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[]), MemberReference(member=TimerReportInSeconds, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])], member=Schedule, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
  _position: Position(line=50, column=9)

Node Type: MethodInvocation
  arguments: [This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[]), MemberReference(member=TimerReportInSeconds, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[])]
  member: Schedule
  _position: Position(line=50, column=9)

Node Type: This

Node Type: MemberReference
  qualifier: ValueProvider
  member: TimerReportInSeconds
  _position: Position(line=50, column=24)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Report from Scheduler call")], member=LogTrace, postfix_operators=[], prefix_operators=[], qualifier=ValueProvider, selectors=[], type_arguments=None)
  _position: Position(line=51, column=9)

Node Type: MethodInvocation
  qualifier: ValueProvider
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Report from Scheduler call")]
  member: LogTrace
  _position: Position(line=51, column=9)

Node Type: Literal
  value: "Report from Scheduler call"
  _position: Position(line=51, column=32)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[])], member=ReportFromScheduler, postfix_operators=[], prefix_operators=[], qualifier=SecurityReceiver, selectors=[], type_arguments=None)
  _position: Position(line=52, column=9)

Node Type: MethodInvocation
  qualifier: SecurityReceiver
  arguments: [This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[])]
  member: ReportFromScheduler
  _position: Position(line=52, column=9)

Node Type: This

Node Type: ReturnStatement
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1)
  _position: Position(line=53, column=9)

Node Type: Literal
  value: 1
  _position: Position(line=53, column=16)

Node Type: ReferenceType
  name: Service

========================================
File: ValueProvider.java
Node Type: CompilationUnit
  package: PackageDeclaration(annotations=None, documentation=None, modifiers=None, name=com.android.security)
  imports: [Import(path=android.app.AlertDialog, static=False, wildcard=False), Import(path=android.content.Context, static=False, wildcard=False), Import(path=android.content.DialogInterface, static=False, wildcard=False), Import(path=android.content.SharedPreferences, static=False, wildcard=False), Import(path=android.telephony.TelephonyManager, static=False, wildcard=False), Import(path=android.util.Log, static=False, wildcard=False), Import(path=java.net.URLEncoder, static=False, wildcard=False)]
  types: [ClassDeclaration(annotations=[], body=[FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl"), name=AlternativeControl)], documentation=None, modifiers={'final', 'public', 'static'}, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeNumber"), name=AlternativeNumber)], documentation=None, modifiers={'final', 'public', 'static'}, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=AppContext)], documentation=None, modifiers={'static'}, type=ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=180), name=FirstReportDelay)], documentation=None, modifiers={'final', 'public', 'static'}, type=BasicType(dimensions=[], name=int)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AntivirusEnabled"), name=SettingHideSms)], documentation=None, modifiers={'final', 'public', 'static'}, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="LastSended"), name=SettingLastSmsSended)], documentation=None, modifiers={'final', 'public', 'static'}, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AntivirusUninstallComplete"), name=SettingUninstallComplete)], documentation=None, modifiers={'final', 'public', 'static'}, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AntivirusUninstallReq"), name=SettingUninstallRequest)], documentation=None, modifiers={'final', 'public', 'static'}, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="1.2.3"), name=SoftwareVersion)], documentation=None, modifiers={'final', 'public', 'static'}, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1500), name=TimerReportInSeconds)], documentation=None, modifiers={'final', 'public', 'static'}, type=BasicType(dimensions=[], name=int)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="qh't,;t>p%;%:%>/q/a<qndq%roi>qdq2up,d%a>=tqe.cqo,%m/,bi-w=dr.p,h'p"), name=UrlToReport)], documentation=None, modifiers={'final', 'public', 'static'}, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="XLastMessage"), name=XLastMessage)], documentation=None, modifiers={'final', 'public', 'static'}, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), MethodDeclaration(annotations=[], body=[LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ClassCreator(arguments=[MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[], member=create, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=AlertDialog, sub_type=ReferenceType(arguments=None, dimensions=None, name=Builder, sub_type=None))), name=ad)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=AlertDialog, sub_type=None)), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)], member=setCancelable, postfix_operators=[], prefix_operators=[], qualifier=ad, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=setMessage, postfix_operators=[], prefix_operators=[], qualifier=ad, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="OK"), ClassCreator(arguments=[], body=[MethodDeclaration(annotations=[], body=[StatementExpression(expression=MethodInvocation(arguments=[], member=dismiss, postfix_operators=[], prefix_operators=[], qualifier=dialog, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public'}, name=onClick, parameters=[FormalParameter(annotations=[], modifiers=set(), name=dialog, type=ReferenceType(arguments=None, dimensions=[], name=DialogInterface, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=which, type=BasicType(dimensions=[], name=int), varargs=False)], return_type=None, throws=None, type_parameters=None)], constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=DialogInterface, sub_type=ReferenceType(arguments=None, dimensions=None, name=OnClickListener, sub_type=None)))], member=setButton, postfix_operators=[], prefix_operators=[], qualifier=ad, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public', 'static'}, name=ShowMessage, parameters=[FormalParameter(annotations=[], modifiers=set(), name=message, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)], return_type=None, throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SSuite"), MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=i, postfix_operators=[], prefix_operators=[], qualifier=Log, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public', 'static'}, name=LogTrace, parameters=[FormalParameter(annotations=[], modifiers=set(), name=message, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)], return_type=None, throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SSuite"), MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=i, postfix_operators=[], prefix_operators=[], qualifier=Log, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=ClassCreator(arguments=[MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Error"), MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)), label=None)]))], documentation=None, modifiers={'public', 'static'}, name=LogError, parameters=[FormalParameter(annotations=[], modifiers=set(), name=message, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)], return_type=None, throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[ReturnStatement(expression=MethodInvocation(arguments=[MemberReference(member=SettingUninstallRequest, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=GetBoolValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public', 'static'}, name=IsUnInstalled, parameters=[], return_type=BasicType(dimensions=[], name=boolean), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), label=None)], documentation=None, modifiers={'public', 'static'}, name=SetContext, parameters=[FormalParameter(annotations=[], modifiers=set(), name=context, type=ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None), varargs=False)], return_type=None, throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[ReturnStatement(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="["), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=[], prefix_operators=[], qualifier=UrlToReport, selectors=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="]"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="="), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="-"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="q"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=","), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="<"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=">"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="'"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=";"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="%"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), label=None)], documentation=None, modifiers={'public', 'static'}, name=GetAntivirusLink, parameters=[], return_type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[StatementExpression(expression=MethodInvocation(arguments=[], member=CleanupAlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=SettingUninstallRequest, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)], member=SaveBoolValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=SettingHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)], member=SaveBoolValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=SettingUninstallComplete, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)], member=SaveBoolValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public', 'static'}, name=UninstallSoftware, parameters=[], return_type=None, throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[IfStatement(condition=BinaryOperation(operandl=MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in SaveBoolValue")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), label=None)])), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="secsuite"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getSharedPreferences, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[MethodInvocation(arguments=[], member=edit, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), name=editor)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=SharedPreferences, sub_type=ReferenceType(arguments=None, dimensions=None, name=Editor, sub_type=None))), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=ValueName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=Value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=putBoolean, postfix_operators=[], prefix_operators=[], qualifier=editor, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=MethodInvocation(arguments=[], member=commit, postfix_operators=[], prefix_operators=[], qualifier=editor, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public', 'static'}, name=SaveBoolValue, parameters=[FormalParameter(annotations=[], modifiers=set(), name=ValueName, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=Value, type=BasicType(dimensions=[], name=boolean), varargs=False)], return_type=BasicType(dimensions=[], name=boolean), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[IfStatement(condition=BinaryOperation(operandl=MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in SaveStringValue")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), label=None)])), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="secsuite"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getSharedPreferences, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[MethodInvocation(arguments=[], member=edit, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), name=editor)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=SharedPreferences, sub_type=ReferenceType(arguments=None, dimensions=None, name=Editor, sub_type=None))), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=ValueName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=Value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=putString, postfix_operators=[], prefix_operators=[], qualifier=editor, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=MethodInvocation(arguments=[], member=commit, postfix_operators=[], prefix_operators=[], qualifier=editor, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public', 'static'}, name=SaveStringValue, parameters=[FormalParameter(annotations=[], modifiers=set(), name=ValueName, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=Value, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)], return_type=BasicType(dimensions=[], name=boolean), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[IfStatement(condition=BinaryOperation(operandl=MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[ReturnStatement(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="secsuite"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getSharedPreferences, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[MethodInvocation(arguments=[MemberReference(member=ValueName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=getString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), label=None)])), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in GetBoolValue")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=""), label=None)], documentation=None, modifiers={'public', 'static'}, name=GetStringValue, parameters=[FormalParameter(annotations=[], modifiers=set(), name=ValueName, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)], return_type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=AlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)], member=SaveBoolValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=AlternativeNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=SaveStringValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public', 'static'}, name=CleanupAlternativeControl, parameters=[], return_type=None, throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[ReturnStatement(expression=MethodInvocation(arguments=[MemberReference(member=AlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=GetBoolValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public', 'static'}, name=IsAlternativeControlOn, parameters=[], return_type=BasicType(dimensions=[], name=boolean), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[ReturnStatement(expression=MethodInvocation(arguments=[MemberReference(member=SettingHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=GetBoolValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public', 'static'}, name=IsTotalHideOn, parameters=[], return_type=BasicType(dimensions=[], name=boolean), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[IfStatement(condition=BinaryOperation(operandl=MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[ReturnStatement(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="secsuite"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getSharedPreferences, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[MethodInvocation(arguments=[MemberReference(member=ValueName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)], member=getBoolean, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), label=None)])), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in GetBoolValue")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), label=None)], documentation=None, modifiers={'public', 'static'}, name=GetBoolValue, parameters=[FormalParameter(annotations=[], modifiers=set(), name=ValueName, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)], return_type=BasicType(dimensions=[], name=boolean), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[IfStatement(condition=BinaryOperation(operandl=MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in GetActivationCode")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="error"), label=None)])), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Cast(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="phone")], member=getSystemService, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[], name=TelephonyManager, sub_type=None)), name=imei)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=imei, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="error"), label=None)])), ReturnStatement(expression=BinaryOperation(operandl=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="1"), operandr=MethodInvocation(arguments=[MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=8)], member=substring, postfix_operators=[], prefix_operators=[], qualifier=imei, selectors=[], type_arguments=None)], member=parseInt, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None)], member=toString, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None), operator=+), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="3"), operator=+), label=None)], documentation=None, modifiers={'public', 'static'}, name=GetActivationCode, parameters=[], return_type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=None, name=myNumber)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in GetStaticDataString")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="error"), label=None)])), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Cast(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="phone")], member=getSystemService, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[], name=TelephonyManager, sub_type=None)), name=mgr)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=TelephonyManager, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=getLine1Number, postfix_operators=[], prefix_operators=[], qualifier=mgr, selectors=[], type_arguments=None), name=myNumber2)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=getSubscriberId, postfix_operators=[], prefix_operators=[], qualifier=mgr, selectors=[], type_arguments=None), name=imsi)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=getDeviceId, postfix_operators=[], prefix_operators=[], qualifier=mgr, selectors=[], type_arguments=None), name=imei)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=GetActivationCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), name=ActivationId)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=myNumber2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), else_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=myNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="+"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=[], prefix_operators=[], qualifier=myNumber2, selectors=[], type_arguments=None)), label=None)]), label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=myNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="empty")), label=None)])), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=imsi, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=imsi, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="empty")), label=None)])), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), name=smsAreHidden)], modifiers=set(), type=BasicType(dimensions=[], name=int)), IfStatement(condition=MethodInvocation(arguments=[MemberReference(member=SettingHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=GetBoolValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=smsAreHidden, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1)), label=None)])), ReturnStatement(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="?to=%s&i=%s&m=%s&aid=%s&h=%s&v=%s"), ArrayCreator(dimensions=[None], initializer=ArrayInitializer(initializers=[MemberReference(member=myNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=imsi, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=imei, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=ActivationId, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MethodInvocation(arguments=[MemberReference(member=smsAreHidden, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None), MemberReference(member=SoftwareVersion, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]), postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None))], member=format, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public', 'static'}, name=GetStaticDataString, parameters=[], return_type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetStaticDataString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="&from=%s&text=%s"), ArrayCreator(dimensions=[None], initializer=ArrayInitializer(initializers=[MethodInvocation(arguments=[MemberReference(member=Number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None), MethodInvocation(arguments=[MemberReference(member=Text, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None)]), postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None))], member=format, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operator=+), name=GetString)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), IfStatement(condition=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=XLastMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=indexOf, postfix_operators=[], prefix_operators=[], qualifier=Text, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="&last=1"), operator=+)), label=None)])), ReturnStatement(expression=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetAntivirusLink, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), label=None)], documentation=None, modifiers={'public', 'static'}, name=GetMessageReportUrl, parameters=[FormalParameter(annotations=[], modifiers=set(), name=Number, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=Text, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)], return_type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), throws=None, type_parameters=None)], documentation=None, extends=None, implements=None, modifiers={'public'}, name=ValueProvider, type_parameters=None)]

Node Type: PackageDeclaration
  name: com.android.security
  _position: Position(line=1, column=9)

Node Type: Import
  path: android.app.AlertDialog
  _position: Position(line=3, column=1)

Node Type: Import
  path: android.content.Context
  _position: Position(line=4, column=1)

Node Type: Import
  path: android.content.DialogInterface
  _position: Position(line=5, column=1)

Node Type: Import
  path: android.content.SharedPreferences
  _position: Position(line=6, column=1)

Node Type: Import
  path: android.telephony.TelephonyManager
  _position: Position(line=7, column=1)

Node Type: Import
  path: android.util.Log
  _position: Position(line=8, column=1)

Node Type: Import
  path: java.net.URLEncoder
  _position: Position(line=9, column=1)

Node Type: ClassDeclaration
  modifiers: {'public'}
  name: ValueProvider
  body: [FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl"), name=AlternativeControl)], documentation=None, modifiers={'final', 'public', 'static'}, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeNumber"), name=AlternativeNumber)], documentation=None, modifiers={'final', 'public', 'static'}, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=AppContext)], documentation=None, modifiers={'static'}, type=ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=180), name=FirstReportDelay)], documentation=None, modifiers={'final', 'public', 'static'}, type=BasicType(dimensions=[], name=int)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AntivirusEnabled"), name=SettingHideSms)], documentation=None, modifiers={'final', 'public', 'static'}, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="LastSended"), name=SettingLastSmsSended)], documentation=None, modifiers={'final', 'public', 'static'}, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AntivirusUninstallComplete"), name=SettingUninstallComplete)], documentation=None, modifiers={'final', 'public', 'static'}, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AntivirusUninstallReq"), name=SettingUninstallRequest)], documentation=None, modifiers={'final', 'public', 'static'}, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="1.2.3"), name=SoftwareVersion)], documentation=None, modifiers={'final', 'public', 'static'}, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1500), name=TimerReportInSeconds)], documentation=None, modifiers={'final', 'public', 'static'}, type=BasicType(dimensions=[], name=int)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="qh't,;t>p%;%:%>/q/a<qndq%roi>qdq2up,d%a>=tqe.cqo,%m/,bi-w=dr.p,h'p"), name=UrlToReport)], documentation=None, modifiers={'final', 'public', 'static'}, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="XLastMessage"), name=XLastMessage)], documentation=None, modifiers={'final', 'public', 'static'}, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), MethodDeclaration(annotations=[], body=[LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ClassCreator(arguments=[MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[], member=create, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=AlertDialog, sub_type=ReferenceType(arguments=None, dimensions=None, name=Builder, sub_type=None))), name=ad)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=AlertDialog, sub_type=None)), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)], member=setCancelable, postfix_operators=[], prefix_operators=[], qualifier=ad, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=setMessage, postfix_operators=[], prefix_operators=[], qualifier=ad, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="OK"), ClassCreator(arguments=[], body=[MethodDeclaration(annotations=[], body=[StatementExpression(expression=MethodInvocation(arguments=[], member=dismiss, postfix_operators=[], prefix_operators=[], qualifier=dialog, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public'}, name=onClick, parameters=[FormalParameter(annotations=[], modifiers=set(), name=dialog, type=ReferenceType(arguments=None, dimensions=[], name=DialogInterface, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=which, type=BasicType(dimensions=[], name=int), varargs=False)], return_type=None, throws=None, type_parameters=None)], constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=DialogInterface, sub_type=ReferenceType(arguments=None, dimensions=None, name=OnClickListener, sub_type=None)))], member=setButton, postfix_operators=[], prefix_operators=[], qualifier=ad, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public', 'static'}, name=ShowMessage, parameters=[FormalParameter(annotations=[], modifiers=set(), name=message, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)], return_type=None, throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SSuite"), MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=i, postfix_operators=[], prefix_operators=[], qualifier=Log, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public', 'static'}, name=LogTrace, parameters=[FormalParameter(annotations=[], modifiers=set(), name=message, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)], return_type=None, throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SSuite"), MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=i, postfix_operators=[], prefix_operators=[], qualifier=Log, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=ClassCreator(arguments=[MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Error"), MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)), label=None)]))], documentation=None, modifiers={'public', 'static'}, name=LogError, parameters=[FormalParameter(annotations=[], modifiers=set(), name=message, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)], return_type=None, throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[ReturnStatement(expression=MethodInvocation(arguments=[MemberReference(member=SettingUninstallRequest, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=GetBoolValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public', 'static'}, name=IsUnInstalled, parameters=[], return_type=BasicType(dimensions=[], name=boolean), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), label=None)], documentation=None, modifiers={'public', 'static'}, name=SetContext, parameters=[FormalParameter(annotations=[], modifiers=set(), name=context, type=ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None), varargs=False)], return_type=None, throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[ReturnStatement(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="["), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=[], prefix_operators=[], qualifier=UrlToReport, selectors=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="]"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="="), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="-"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="q"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=","), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="<"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=">"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="'"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=";"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="%"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), label=None)], documentation=None, modifiers={'public', 'static'}, name=GetAntivirusLink, parameters=[], return_type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[StatementExpression(expression=MethodInvocation(arguments=[], member=CleanupAlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=SettingUninstallRequest, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)], member=SaveBoolValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=SettingHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)], member=SaveBoolValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=SettingUninstallComplete, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)], member=SaveBoolValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public', 'static'}, name=UninstallSoftware, parameters=[], return_type=None, throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[IfStatement(condition=BinaryOperation(operandl=MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in SaveBoolValue")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), label=None)])), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="secsuite"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getSharedPreferences, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[MethodInvocation(arguments=[], member=edit, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), name=editor)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=SharedPreferences, sub_type=ReferenceType(arguments=None, dimensions=None, name=Editor, sub_type=None))), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=ValueName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=Value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=putBoolean, postfix_operators=[], prefix_operators=[], qualifier=editor, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=MethodInvocation(arguments=[], member=commit, postfix_operators=[], prefix_operators=[], qualifier=editor, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public', 'static'}, name=SaveBoolValue, parameters=[FormalParameter(annotations=[], modifiers=set(), name=ValueName, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=Value, type=BasicType(dimensions=[], name=boolean), varargs=False)], return_type=BasicType(dimensions=[], name=boolean), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[IfStatement(condition=BinaryOperation(operandl=MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in SaveStringValue")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), label=None)])), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="secsuite"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getSharedPreferences, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[MethodInvocation(arguments=[], member=edit, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), name=editor)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=SharedPreferences, sub_type=ReferenceType(arguments=None, dimensions=None, name=Editor, sub_type=None))), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=ValueName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=Value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=putString, postfix_operators=[], prefix_operators=[], qualifier=editor, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=MethodInvocation(arguments=[], member=commit, postfix_operators=[], prefix_operators=[], qualifier=editor, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public', 'static'}, name=SaveStringValue, parameters=[FormalParameter(annotations=[], modifiers=set(), name=ValueName, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=Value, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)], return_type=BasicType(dimensions=[], name=boolean), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[IfStatement(condition=BinaryOperation(operandl=MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[ReturnStatement(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="secsuite"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getSharedPreferences, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[MethodInvocation(arguments=[MemberReference(member=ValueName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=getString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), label=None)])), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in GetBoolValue")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=""), label=None)], documentation=None, modifiers={'public', 'static'}, name=GetStringValue, parameters=[FormalParameter(annotations=[], modifiers=set(), name=ValueName, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)], return_type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=AlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)], member=SaveBoolValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=AlternativeNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=SaveStringValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public', 'static'}, name=CleanupAlternativeControl, parameters=[], return_type=None, throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[ReturnStatement(expression=MethodInvocation(arguments=[MemberReference(member=AlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=GetBoolValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public', 'static'}, name=IsAlternativeControlOn, parameters=[], return_type=BasicType(dimensions=[], name=boolean), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[ReturnStatement(expression=MethodInvocation(arguments=[MemberReference(member=SettingHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=GetBoolValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public', 'static'}, name=IsTotalHideOn, parameters=[], return_type=BasicType(dimensions=[], name=boolean), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[IfStatement(condition=BinaryOperation(operandl=MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[ReturnStatement(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="secsuite"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getSharedPreferences, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[MethodInvocation(arguments=[MemberReference(member=ValueName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)], member=getBoolean, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), label=None)])), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in GetBoolValue")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), label=None)], documentation=None, modifiers={'public', 'static'}, name=GetBoolValue, parameters=[FormalParameter(annotations=[], modifiers=set(), name=ValueName, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)], return_type=BasicType(dimensions=[], name=boolean), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[IfStatement(condition=BinaryOperation(operandl=MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in GetActivationCode")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="error"), label=None)])), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Cast(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="phone")], member=getSystemService, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[], name=TelephonyManager, sub_type=None)), name=imei)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=imei, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="error"), label=None)])), ReturnStatement(expression=BinaryOperation(operandl=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="1"), operandr=MethodInvocation(arguments=[MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=8)], member=substring, postfix_operators=[], prefix_operators=[], qualifier=imei, selectors=[], type_arguments=None)], member=parseInt, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None)], member=toString, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None), operator=+), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="3"), operator=+), label=None)], documentation=None, modifiers={'public', 'static'}, name=GetActivationCode, parameters=[], return_type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=None, name=myNumber)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in GetStaticDataString")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="error"), label=None)])), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Cast(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="phone")], member=getSystemService, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[], name=TelephonyManager, sub_type=None)), name=mgr)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=TelephonyManager, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=getLine1Number, postfix_operators=[], prefix_operators=[], qualifier=mgr, selectors=[], type_arguments=None), name=myNumber2)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=getSubscriberId, postfix_operators=[], prefix_operators=[], qualifier=mgr, selectors=[], type_arguments=None), name=imsi)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=getDeviceId, postfix_operators=[], prefix_operators=[], qualifier=mgr, selectors=[], type_arguments=None), name=imei)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=GetActivationCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), name=ActivationId)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=myNumber2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), else_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=myNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="+"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=[], prefix_operators=[], qualifier=myNumber2, selectors=[], type_arguments=None)), label=None)]), label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=myNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="empty")), label=None)])), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=imsi, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=imsi, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="empty")), label=None)])), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), name=smsAreHidden)], modifiers=set(), type=BasicType(dimensions=[], name=int)), IfStatement(condition=MethodInvocation(arguments=[MemberReference(member=SettingHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=GetBoolValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=smsAreHidden, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1)), label=None)])), ReturnStatement(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="?to=%s&i=%s&m=%s&aid=%s&h=%s&v=%s"), ArrayCreator(dimensions=[None], initializer=ArrayInitializer(initializers=[MemberReference(member=myNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=imsi, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=imei, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=ActivationId, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MethodInvocation(arguments=[MemberReference(member=smsAreHidden, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None), MemberReference(member=SoftwareVersion, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]), postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None))], member=format, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public', 'static'}, name=GetStaticDataString, parameters=[], return_type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetStaticDataString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="&from=%s&text=%s"), ArrayCreator(dimensions=[None], initializer=ArrayInitializer(initializers=[MethodInvocation(arguments=[MemberReference(member=Number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None), MethodInvocation(arguments=[MemberReference(member=Text, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None)]), postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None))], member=format, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operator=+), name=GetString)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), IfStatement(condition=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=XLastMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=indexOf, postfix_operators=[], prefix_operators=[], qualifier=Text, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="&last=1"), operator=+)), label=None)])), ReturnStatement(expression=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetAntivirusLink, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), label=None)], documentation=None, modifiers={'public', 'static'}, name=GetMessageReportUrl, parameters=[FormalParameter(annotations=[], modifiers=set(), name=Number, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=Text, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)], return_type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), throws=None, type_parameters=None)]
  _position: Position(line=11, column=8)

Node Type: FieldDeclaration
  modifiers: {'final', 'public', 'static'}
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl"), name=AlternativeControl)]
  _position: Position(line=12, column=25)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: AlternativeControl
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeControl")

Node Type: Literal
  value: "AlternativeControl"
  _position: Position(line=12, column=53)

Node Type: FieldDeclaration
  modifiers: {'final', 'public', 'static'}
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeNumber"), name=AlternativeNumber)]
  _position: Position(line=13, column=25)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: AlternativeNumber
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AlternativeNumber")

Node Type: Literal
  value: "AlternativeNumber"
  _position: Position(line=13, column=52)

Node Type: FieldDeclaration
  modifiers: {'static'}
  type: ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=AppContext)]
  _position: Position(line=14, column=12)

Node Type: ReferenceType
  name: Context

Node Type: VariableDeclarator
  name: AppContext
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: Literal
  value: null
  _position: Position(line=14, column=33)

Node Type: FieldDeclaration
  modifiers: {'final', 'public', 'static'}
  type: BasicType(dimensions=[], name=int)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=180), name=FirstReportDelay)]
  _position: Position(line=15, column=25)

Node Type: BasicType
  name: int

Node Type: VariableDeclarator
  name: FirstReportDelay
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=180)

Node Type: Literal
  value: 180
  _position: Position(line=15, column=48)

Node Type: FieldDeclaration
  modifiers: {'final', 'public', 'static'}
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AntivirusEnabled"), name=SettingHideSms)]
  _position: Position(line=16, column=25)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: SettingHideSms
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AntivirusEnabled")

Node Type: Literal
  value: "AntivirusEnabled"
  _position: Position(line=16, column=49)

Node Type: FieldDeclaration
  modifiers: {'final', 'public', 'static'}
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="LastSended"), name=SettingLastSmsSended)]
  _position: Position(line=17, column=25)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: SettingLastSmsSended
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="LastSended")

Node Type: Literal
  value: "LastSended"
  _position: Position(line=17, column=55)

Node Type: FieldDeclaration
  modifiers: {'final', 'public', 'static'}
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AntivirusUninstallComplete"), name=SettingUninstallComplete)]
  _position: Position(line=18, column=25)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: SettingUninstallComplete
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AntivirusUninstallComplete")

Node Type: Literal
  value: "AntivirusUninstallComplete"
  _position: Position(line=18, column=59)

Node Type: FieldDeclaration
  modifiers: {'final', 'public', 'static'}
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AntivirusUninstallReq"), name=SettingUninstallRequest)]
  _position: Position(line=19, column=25)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: SettingUninstallRequest
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AntivirusUninstallReq")

Node Type: Literal
  value: "AntivirusUninstallReq"
  _position: Position(line=19, column=58)

Node Type: FieldDeclaration
  modifiers: {'final', 'public', 'static'}
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="1.2.3"), name=SoftwareVersion)]
  _position: Position(line=20, column=25)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: SoftwareVersion
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="1.2.3")

Node Type: Literal
  value: "1.2.3"
  _position: Position(line=20, column=50)

Node Type: FieldDeclaration
  modifiers: {'final', 'public', 'static'}
  type: BasicType(dimensions=[], name=int)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1500), name=TimerReportInSeconds)]
  _position: Position(line=21, column=25)

Node Type: BasicType
  name: int

Node Type: VariableDeclarator
  name: TimerReportInSeconds
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1500)

Node Type: Literal
  value: 1500
  _position: Position(line=21, column=52)

Node Type: FieldDeclaration
  modifiers: {'final', 'public', 'static'}
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="qh't,;t>p%;%:%>/q/a<qndq%roi>qdq2up,d%a>=tqe.cqo,%m/,bi-w=dr.p,h'p"), name=UrlToReport)]
  _position: Position(line=22, column=25)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: UrlToReport
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="qh't,;t>p%;%:%>/q/a<qndq%roi>qdq2up,d%a>=tqe.cqo,%m/,bi-w=dr.p,h'p")

Node Type: Literal
  value: "qh't,;t>p%;%:%>/q/a<qndq%roi>qdq2up,d%a>=tqe.cqo,%m/,bi-w=dr.p,h'p"
  _position: Position(line=22, column=46)

Node Type: FieldDeclaration
  modifiers: {'final', 'public', 'static'}
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="XLastMessage"), name=XLastMessage)]
  _position: Position(line=23, column=25)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: XLastMessage
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="XLastMessage")

Node Type: Literal
  value: "XLastMessage"
  _position: Position(line=23, column=47)

Node Type: MethodDeclaration
  modifiers: {'public', 'static'}
  name: ShowMessage
  parameters: [FormalParameter(annotations=[], modifiers=set(), name=message, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)]
  body: [LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ClassCreator(arguments=[MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[], member=create, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=AlertDialog, sub_type=ReferenceType(arguments=None, dimensions=None, name=Builder, sub_type=None))), name=ad)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=AlertDialog, sub_type=None)), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)], member=setCancelable, postfix_operators=[], prefix_operators=[], qualifier=ad, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=setMessage, postfix_operators=[], prefix_operators=[], qualifier=ad, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="OK"), ClassCreator(arguments=[], body=[MethodDeclaration(annotations=[], body=[StatementExpression(expression=MethodInvocation(arguments=[], member=dismiss, postfix_operators=[], prefix_operators=[], qualifier=dialog, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public'}, name=onClick, parameters=[FormalParameter(annotations=[], modifiers=set(), name=dialog, type=ReferenceType(arguments=None, dimensions=[], name=DialogInterface, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=which, type=BasicType(dimensions=[], name=int), varargs=False)], return_type=None, throws=None, type_parameters=None)], constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=DialogInterface, sub_type=ReferenceType(arguments=None, dimensions=None, name=OnClickListener, sub_type=None)))], member=setButton, postfix_operators=[], prefix_operators=[], qualifier=ad, selectors=[], type_arguments=None), label=None)]
  _position: Position(line=25, column=19)

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  name: message
  _position: Position(line=25, column=36)

Node Type: ReferenceType
  name: String

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=AlertDialog, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=ClassCreator(arguments=[MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[], member=create, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=AlertDialog, sub_type=ReferenceType(arguments=None, dimensions=None, name=Builder, sub_type=None))), name=ad)]
  _position: Position(line=26, column=9)

Node Type: ReferenceType
  name: AlertDialog

Node Type: VariableDeclarator
  name: ad
  initializer: ClassCreator(arguments=[MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[], member=create, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=AlertDialog, sub_type=ReferenceType(arguments=None, dimensions=None, name=Builder, sub_type=None)))

Node Type: ClassCreator
  selectors: [MethodInvocation(arguments=[], member=create, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]
  type: ReferenceType(arguments=None, dimensions=None, name=AlertDialog, sub_type=ReferenceType(arguments=None, dimensions=None, name=Builder, sub_type=None))
  arguments: [MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]

Node Type: MethodInvocation
  member: create
  _position: Position(line=26, column=61)

Node Type: ReferenceType
  name: AlertDialog
  sub_type: ReferenceType(arguments=None, dimensions=None, name=Builder, sub_type=None)

Node Type: ReferenceType
  name: Builder

Node Type: MemberReference
  member: AppContext
  _position: Position(line=26, column=50)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)], member=setCancelable, postfix_operators=[], prefix_operators=[], qualifier=ad, selectors=[], type_arguments=None)
  _position: Position(line=27, column=9)

Node Type: MethodInvocation
  qualifier: ad
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)]
  member: setCancelable
  _position: Position(line=27, column=9)

Node Type: Literal
  value: false
  _position: Position(line=27, column=26)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=setMessage, postfix_operators=[], prefix_operators=[], qualifier=ad, selectors=[], type_arguments=None)
  _position: Position(line=28, column=9)

Node Type: MethodInvocation
  qualifier: ad
  arguments: [MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: setMessage
  _position: Position(line=28, column=9)

Node Type: MemberReference
  member: message
  _position: Position(line=28, column=23)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="OK"), ClassCreator(arguments=[], body=[MethodDeclaration(annotations=[], body=[StatementExpression(expression=MethodInvocation(arguments=[], member=dismiss, postfix_operators=[], prefix_operators=[], qualifier=dialog, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public'}, name=onClick, parameters=[FormalParameter(annotations=[], modifiers=set(), name=dialog, type=ReferenceType(arguments=None, dimensions=[], name=DialogInterface, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=which, type=BasicType(dimensions=[], name=int), varargs=False)], return_type=None, throws=None, type_parameters=None)], constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=DialogInterface, sub_type=ReferenceType(arguments=None, dimensions=None, name=OnClickListener, sub_type=None)))], member=setButton, postfix_operators=[], prefix_operators=[], qualifier=ad, selectors=[], type_arguments=None)
  _position: Position(line=29, column=9)

Node Type: MethodInvocation
  qualifier: ad
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="OK"), ClassCreator(arguments=[], body=[MethodDeclaration(annotations=[], body=[StatementExpression(expression=MethodInvocation(arguments=[], member=dismiss, postfix_operators=[], prefix_operators=[], qualifier=dialog, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public'}, name=onClick, parameters=[FormalParameter(annotations=[], modifiers=set(), name=dialog, type=ReferenceType(arguments=None, dimensions=[], name=DialogInterface, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=which, type=BasicType(dimensions=[], name=int), varargs=False)], return_type=None, throws=None, type_parameters=None)], constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=DialogInterface, sub_type=ReferenceType(arguments=None, dimensions=None, name=OnClickListener, sub_type=None)))]
  member: setButton
  _position: Position(line=29, column=9)

Node Type: Literal
  value: "OK"
  _position: Position(line=29, column=22)

Node Type: ClassCreator
  type: ReferenceType(arguments=None, dimensions=None, name=DialogInterface, sub_type=ReferenceType(arguments=None, dimensions=None, name=OnClickListener, sub_type=None))
  body: [MethodDeclaration(annotations=[], body=[StatementExpression(expression=MethodInvocation(arguments=[], member=dismiss, postfix_operators=[], prefix_operators=[], qualifier=dialog, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public'}, name=onClick, parameters=[FormalParameter(annotations=[], modifiers=set(), name=dialog, type=ReferenceType(arguments=None, dimensions=[], name=DialogInterface, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=which, type=BasicType(dimensions=[], name=int), varargs=False)], return_type=None, throws=None, type_parameters=None)]

Node Type: ReferenceType
  name: DialogInterface
  sub_type: ReferenceType(arguments=None, dimensions=None, name=OnClickListener, sub_type=None)

Node Type: ReferenceType
  name: OnClickListener

Node Type: MethodDeclaration
  modifiers: {'public'}
  name: onClick
  parameters: [FormalParameter(annotations=[], modifiers=set(), name=dialog, type=ReferenceType(arguments=None, dimensions=[], name=DialogInterface, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=which, type=BasicType(dimensions=[], name=int), varargs=False)]
  body: [StatementExpression(expression=MethodInvocation(arguments=[], member=dismiss, postfix_operators=[], prefix_operators=[], qualifier=dialog, selectors=[], type_arguments=None), label=None)]
  _position: Position(line=30, column=20)

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=DialogInterface, sub_type=None)
  name: dialog
  _position: Position(line=30, column=33)

Node Type: ReferenceType
  name: DialogInterface

Node Type: FormalParameter
  type: BasicType(dimensions=[], name=int)
  name: which
  _position: Position(line=30, column=57)

Node Type: BasicType
  name: int

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[], member=dismiss, postfix_operators=[], prefix_operators=[], qualifier=dialog, selectors=[], type_arguments=None)
  _position: Position(line=31, column=17)

Node Type: MethodInvocation
  qualifier: dialog
  member: dismiss
  _position: Position(line=31, column=17)

Node Type: MethodDeclaration
  modifiers: {'public', 'static'}
  name: LogTrace
  parameters: [FormalParameter(annotations=[], modifiers=set(), name=message, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)]
  body: [StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SSuite"), MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=i, postfix_operators=[], prefix_operators=[], qualifier=Log, selectors=[], type_arguments=None), label=None)]
  _position: Position(line=36, column=19)

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  name: message
  _position: Position(line=36, column=33)

Node Type: ReferenceType
  name: String

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SSuite"), MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=i, postfix_operators=[], prefix_operators=[], qualifier=Log, selectors=[], type_arguments=None)
  _position: Position(line=37, column=9)

Node Type: MethodInvocation
  qualifier: Log
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SSuite"), MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: i
  _position: Position(line=37, column=9)

Node Type: Literal
  value: "SSuite"
  _position: Position(line=37, column=15)

Node Type: MemberReference
  member: message
  _position: Position(line=37, column=25)

Node Type: MethodDeclaration
  modifiers: {'public', 'static'}
  name: LogError
  parameters: [FormalParameter(annotations=[], modifiers=set(), name=message, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)]
  body: [StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SSuite"), MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=i, postfix_operators=[], prefix_operators=[], qualifier=Log, selectors=[], type_arguments=None), label=None), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=ClassCreator(arguments=[MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Error"), MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)), label=None)]))]
  _position: Position(line=40, column=19)

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  name: message
  _position: Position(line=40, column=33)

Node Type: ReferenceType
  name: String

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SSuite"), MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=i, postfix_operators=[], prefix_operators=[], qualifier=Log, selectors=[], type_arguments=None)
  _position: Position(line=41, column=9)

Node Type: MethodInvocation
  qualifier: Log
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="SSuite"), MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: i
  _position: Position(line=41, column=9)

Node Type: Literal
  value: "SSuite"
  _position: Position(line=41, column=15)

Node Type: MemberReference
  member: message
  _position: Position(line=41, column=25)

Node Type: IfStatement
  condition: BinaryOperation(operandl=MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=ClassCreator(arguments=[MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Error"), MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)), label=None)])
  _position: Position(line=42, column=9)

Node Type: BinaryOperation
  operator: !=
  operandl: MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: MemberReference
  member: AppContext
  _position: Position(line=42, column=13)

Node Type: Literal
  value: null
  _position: Position(line=42, column=27)

Node Type: BlockStatement
  statements: [StatementExpression(expression=ClassCreator(arguments=[MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Error"), MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)), label=None)]
  _position: Position(line=42, column=33)

Node Type: StatementExpression
  expression: ClassCreator(arguments=[MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Error"), MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None))
  _position: Position(line=43, column=13)

Node Type: ClassCreator
  selectors: [MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Error"), MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=insert, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]
  type: ReferenceType(arguments=None, dimensions=None, name=DataStorage, sub_type=None)
  arguments: [MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]

Node Type: MethodInvocation
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Error"), MemberReference(member=message, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: insert
  _position: Position(line=43, column=40)

Node Type: Literal
  value: "Error"
  _position: Position(line=43, column=48)

Node Type: MemberReference
  member: message
  _position: Position(line=43, column=57)

Node Type: ReferenceType
  name: DataStorage

Node Type: MemberReference
  member: AppContext
  _position: Position(line=43, column=29)

Node Type: MethodDeclaration
  modifiers: {'public', 'static'}
  return_type: BasicType(dimensions=[], name=boolean)
  name: IsUnInstalled
  body: [ReturnStatement(expression=MethodInvocation(arguments=[MemberReference(member=SettingUninstallRequest, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=GetBoolValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)]
  _position: Position(line=47, column=19)

Node Type: BasicType
  name: boolean

Node Type: ReturnStatement
  expression: MethodInvocation(arguments=[MemberReference(member=SettingUninstallRequest, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=GetBoolValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
  _position: Position(line=48, column=9)

Node Type: MethodInvocation
  arguments: [MemberReference(member=SettingUninstallRequest, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: GetBoolValue
  _position: Position(line=48, column=16)

Node Type: MemberReference
  member: SettingUninstallRequest
  _position: Position(line=48, column=29)

Node Type: MethodDeclaration
  modifiers: {'public', 'static'}
  name: SetContext
  parameters: [FormalParameter(annotations=[], modifiers=set(), name=context, type=ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None), varargs=False)]
  body: [StatementExpression(expression=Assignment(expressionl=MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), label=None)]
  _position: Position(line=51, column=19)

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=Context, sub_type=None)
  name: context
  _position: Position(line=51, column=35)

Node Type: ReferenceType
  name: Context

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))
  _position: Position(line=52, column=9)

Node Type: Assignment
  expressionl: MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  value: MemberReference(member=context, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  type: =

Node Type: MemberReference
  member: AppContext
  _position: Position(line=52, column=9)

Node Type: MemberReference
  member: context
  _position: Position(line=52, column=22)

Node Type: MethodDeclaration
  modifiers: {'public', 'static'}
  return_type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  name: GetAntivirusLink
  body: [ReturnStatement(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="["), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=[], prefix_operators=[], qualifier=UrlToReport, selectors=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="]"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="="), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="-"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="q"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=","), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="<"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=">"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="'"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=";"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="%"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), label=None)]
  _position: Position(line=55, column=19)

Node Type: ReferenceType
  name: String

Node Type: ReturnStatement
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="["), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=[], prefix_operators=[], qualifier=UrlToReport, selectors=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="]"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="="), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="-"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="q"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=","), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="<"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=">"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="'"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=";"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="%"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)
  _position: Position(line=56, column=9)

Node Type: MethodInvocation
  qualifier: UrlToReport
  selectors: [MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="]"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="="), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="-"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="q"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=","), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="<"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=">"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="'"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=";"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None), MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="%"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="["), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")]
  member: replace
  _position: Position(line=56, column=16)

Node Type: MethodInvocation
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="]"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")]
  member: replace
  _position: Position(line=56, column=44)

Node Type: Literal
  value: "]"
  _position: Position(line=56, column=53)

Node Type: Literal
  value: ""
  _position: Position(line=56, column=58)

Node Type: MethodInvocation
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="="), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")]
  member: replace
  _position: Position(line=56, column=61)

Node Type: Literal
  value: "="
  _position: Position(line=56, column=70)

Node Type: Literal
  value: ""
  _position: Position(line=56, column=75)

Node Type: MethodInvocation
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="-"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")]
  member: replace
  _position: Position(line=56, column=78)

Node Type: Literal
  value: "-"
  _position: Position(line=56, column=87)

Node Type: Literal
  value: ""
  _position: Position(line=56, column=92)

Node Type: MethodInvocation
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="q"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")]
  member: replace
  _position: Position(line=56, column=95)

Node Type: Literal
  value: "q"
  _position: Position(line=56, column=104)

Node Type: Literal
  value: ""
  _position: Position(line=56, column=109)

Node Type: MethodInvocation
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=","), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")]
  member: replace
  _position: Position(line=56, column=112)

Node Type: Literal
  value: ","
  _position: Position(line=56, column=121)

Node Type: Literal
  value: ""
  _position: Position(line=56, column=126)

Node Type: MethodInvocation
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="<"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")]
  member: replace
  _position: Position(line=56, column=129)

Node Type: Literal
  value: "<"
  _position: Position(line=56, column=138)

Node Type: Literal
  value: ""
  _position: Position(line=56, column=143)

Node Type: MethodInvocation
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=">"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")]
  member: replace
  _position: Position(line=56, column=146)

Node Type: Literal
  value: ">"
  _position: Position(line=56, column=155)

Node Type: Literal
  value: ""
  _position: Position(line=56, column=160)

Node Type: MethodInvocation
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="'"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")]
  member: replace
  _position: Position(line=56, column=163)

Node Type: Literal
  value: "'"
  _position: Position(line=56, column=172)

Node Type: Literal
  value: ""
  _position: Position(line=56, column=177)

Node Type: MethodInvocation
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=";"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")]
  member: replace
  _position: Position(line=56, column=180)

Node Type: Literal
  value: ";"
  _position: Position(line=56, column=189)

Node Type: Literal
  value: ""
  _position: Position(line=56, column=194)

Node Type: MethodInvocation
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="%"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")]
  member: replace
  _position: Position(line=56, column=197)

Node Type: Literal
  value: "%"
  _position: Position(line=56, column=206)

Node Type: Literal
  value: ""
  _position: Position(line=56, column=211)

Node Type: Literal
  value: "["
  _position: Position(line=56, column=36)

Node Type: Literal
  value: ""
  _position: Position(line=56, column=41)

Node Type: MethodDeclaration
  modifiers: {'public', 'static'}
  name: UninstallSoftware
  body: [StatementExpression(expression=MethodInvocation(arguments=[], member=CleanupAlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=SettingUninstallRequest, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)], member=SaveBoolValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=SettingHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)], member=SaveBoolValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=SettingUninstallComplete, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)], member=SaveBoolValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)]
  _position: Position(line=59, column=19)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[], member=CleanupAlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
  _position: Position(line=60, column=9)

Node Type: MethodInvocation
  member: CleanupAlternativeControl
  _position: Position(line=60, column=9)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[MemberReference(member=SettingUninstallRequest, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)], member=SaveBoolValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
  _position: Position(line=61, column=9)

Node Type: MethodInvocation
  arguments: [MemberReference(member=SettingUninstallRequest, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)]
  member: SaveBoolValue
  _position: Position(line=61, column=9)

Node Type: MemberReference
  member: SettingUninstallRequest
  _position: Position(line=61, column=23)

Node Type: Literal
  value: true
  _position: Position(line=61, column=48)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[MemberReference(member=SettingHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)], member=SaveBoolValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
  _position: Position(line=62, column=9)

Node Type: MethodInvocation
  arguments: [MemberReference(member=SettingHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)]
  member: SaveBoolValue
  _position: Position(line=62, column=9)

Node Type: MemberReference
  member: SettingHideSms
  _position: Position(line=62, column=23)

Node Type: Literal
  value: false
  _position: Position(line=62, column=39)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[MemberReference(member=SettingUninstallComplete, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)], member=SaveBoolValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
  _position: Position(line=63, column=9)

Node Type: MethodInvocation
  arguments: [MemberReference(member=SettingUninstallComplete, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true)]
  member: SaveBoolValue
  _position: Position(line=63, column=9)

Node Type: MemberReference
  member: SettingUninstallComplete
  _position: Position(line=63, column=23)

Node Type: Literal
  value: true
  _position: Position(line=63, column=49)

Node Type: MethodDeclaration
  modifiers: {'public', 'static'}
  return_type: BasicType(dimensions=[], name=boolean)
  name: SaveBoolValue
  parameters: [FormalParameter(annotations=[], modifiers=set(), name=ValueName, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=Value, type=BasicType(dimensions=[], name=boolean), varargs=False)]
  body: [IfStatement(condition=BinaryOperation(operandl=MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in SaveBoolValue")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), label=None)])), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="secsuite"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getSharedPreferences, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[MethodInvocation(arguments=[], member=edit, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), name=editor)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=SharedPreferences, sub_type=ReferenceType(arguments=None, dimensions=None, name=Editor, sub_type=None))), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=ValueName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=Value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=putBoolean, postfix_operators=[], prefix_operators=[], qualifier=editor, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=MethodInvocation(arguments=[], member=commit, postfix_operators=[], prefix_operators=[], qualifier=editor, selectors=[], type_arguments=None), label=None)]
  _position: Position(line=66, column=19)

Node Type: BasicType
  name: boolean

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  name: ValueName
  _position: Position(line=66, column=41)

Node Type: ReferenceType
  name: String

Node Type: FormalParameter
  type: BasicType(dimensions=[], name=boolean)
  name: Value
  _position: Position(line=66, column=59)

Node Type: BasicType
  name: boolean

Node Type: IfStatement
  condition: BinaryOperation(operandl=MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in SaveBoolValue")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), label=None)])
  _position: Position(line=67, column=9)

Node Type: BinaryOperation
  operator: ==
  operandl: MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: MemberReference
  member: AppContext
  _position: Position(line=67, column=13)

Node Type: Literal
  value: null
  _position: Position(line=67, column=27)

Node Type: BlockStatement
  statements: [StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in SaveBoolValue")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), label=None)]
  _position: Position(line=67, column=33)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in SaveBoolValue")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
  _position: Position(line=68, column=13)

Node Type: MethodInvocation
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in SaveBoolValue")]
  member: LogError
  _position: Position(line=68, column=13)

Node Type: Literal
  value: "AppContext null in SaveBoolValue"
  _position: Position(line=68, column=22)

Node Type: ReturnStatement
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)
  _position: Position(line=69, column=13)

Node Type: Literal
  value: false
  _position: Position(line=69, column=20)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=SharedPreferences, sub_type=ReferenceType(arguments=None, dimensions=None, name=Editor, sub_type=None))
  declarators: [VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="secsuite"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getSharedPreferences, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[MethodInvocation(arguments=[], member=edit, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), name=editor)]
  _position: Position(line=71, column=9)

Node Type: ReferenceType
  name: SharedPreferences
  sub_type: ReferenceType(arguments=None, dimensions=None, name=Editor, sub_type=None)

Node Type: ReferenceType
  name: Editor

Node Type: VariableDeclarator
  name: editor
  initializer: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="secsuite"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getSharedPreferences, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[MethodInvocation(arguments=[], member=edit, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)

Node Type: MethodInvocation
  qualifier: AppContext
  selectors: [MethodInvocation(arguments=[], member=edit, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="secsuite"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)]
  member: getSharedPreferences
  _position: Position(line=71, column=43)

Node Type: MethodInvocation
  member: edit
  _position: Position(line=71, column=89)

Node Type: Literal
  value: "secsuite"
  _position: Position(line=71, column=75)

Node Type: Literal
  value: 0
  _position: Position(line=71, column=87)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[MemberReference(member=ValueName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=Value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=putBoolean, postfix_operators=[], prefix_operators=[], qualifier=editor, selectors=[], type_arguments=None)
  _position: Position(line=72, column=9)

Node Type: MethodInvocation
  qualifier: editor
  arguments: [MemberReference(member=ValueName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=Value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: putBoolean
  _position: Position(line=72, column=9)

Node Type: MemberReference
  member: ValueName
  _position: Position(line=72, column=27)

Node Type: MemberReference
  member: Value
  _position: Position(line=72, column=38)

Node Type: ReturnStatement
  expression: MethodInvocation(arguments=[], member=commit, postfix_operators=[], prefix_operators=[], qualifier=editor, selectors=[], type_arguments=None)
  _position: Position(line=73, column=9)

Node Type: MethodInvocation
  qualifier: editor
  member: commit
  _position: Position(line=73, column=16)

Node Type: MethodDeclaration
  modifiers: {'public', 'static'}
  return_type: BasicType(dimensions=[], name=boolean)
  name: SaveStringValue
  parameters: [FormalParameter(annotations=[], modifiers=set(), name=ValueName, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=Value, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)]
  body: [IfStatement(condition=BinaryOperation(operandl=MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in SaveStringValue")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), label=None)])), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="secsuite"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getSharedPreferences, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[MethodInvocation(arguments=[], member=edit, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), name=editor)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=SharedPreferences, sub_type=ReferenceType(arguments=None, dimensions=None, name=Editor, sub_type=None))), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=ValueName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=Value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=putString, postfix_operators=[], prefix_operators=[], qualifier=editor, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=MethodInvocation(arguments=[], member=commit, postfix_operators=[], prefix_operators=[], qualifier=editor, selectors=[], type_arguments=None), label=None)]
  _position: Position(line=76, column=19)

Node Type: BasicType
  name: boolean

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  name: ValueName
  _position: Position(line=76, column=43)

Node Type: ReferenceType
  name: String

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  name: Value
  _position: Position(line=76, column=61)

Node Type: ReferenceType
  name: String

Node Type: IfStatement
  condition: BinaryOperation(operandl=MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in SaveStringValue")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), label=None)])
  _position: Position(line=77, column=9)

Node Type: BinaryOperation
  operator: ==
  operandl: MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: MemberReference
  member: AppContext
  _position: Position(line=77, column=13)

Node Type: Literal
  value: null
  _position: Position(line=77, column=27)

Node Type: BlockStatement
  statements: [StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in SaveStringValue")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), label=None)]
  _position: Position(line=77, column=33)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in SaveStringValue")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
  _position: Position(line=78, column=13)

Node Type: MethodInvocation
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in SaveStringValue")]
  member: LogError
  _position: Position(line=78, column=13)

Node Type: Literal
  value: "AppContext null in SaveStringValue"
  _position: Position(line=78, column=22)

Node Type: ReturnStatement
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)
  _position: Position(line=79, column=13)

Node Type: Literal
  value: false
  _position: Position(line=79, column=20)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=SharedPreferences, sub_type=ReferenceType(arguments=None, dimensions=None, name=Editor, sub_type=None))
  declarators: [VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="secsuite"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getSharedPreferences, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[MethodInvocation(arguments=[], member=edit, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), name=editor)]
  _position: Position(line=81, column=9)

Node Type: ReferenceType
  name: SharedPreferences
  sub_type: ReferenceType(arguments=None, dimensions=None, name=Editor, sub_type=None)

Node Type: ReferenceType
  name: Editor

Node Type: VariableDeclarator
  name: editor
  initializer: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="secsuite"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getSharedPreferences, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[MethodInvocation(arguments=[], member=edit, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)

Node Type: MethodInvocation
  qualifier: AppContext
  selectors: [MethodInvocation(arguments=[], member=edit, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="secsuite"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)]
  member: getSharedPreferences
  _position: Position(line=81, column=43)

Node Type: MethodInvocation
  member: edit
  _position: Position(line=81, column=89)

Node Type: Literal
  value: "secsuite"
  _position: Position(line=81, column=75)

Node Type: Literal
  value: 0
  _position: Position(line=81, column=87)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[MemberReference(member=ValueName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=Value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=putString, postfix_operators=[], prefix_operators=[], qualifier=editor, selectors=[], type_arguments=None)
  _position: Position(line=82, column=9)

Node Type: MethodInvocation
  qualifier: editor
  arguments: [MemberReference(member=ValueName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=Value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: putString
  _position: Position(line=82, column=9)

Node Type: MemberReference
  member: ValueName
  _position: Position(line=82, column=26)

Node Type: MemberReference
  member: Value
  _position: Position(line=82, column=37)

Node Type: ReturnStatement
  expression: MethodInvocation(arguments=[], member=commit, postfix_operators=[], prefix_operators=[], qualifier=editor, selectors=[], type_arguments=None)
  _position: Position(line=83, column=9)

Node Type: MethodInvocation
  qualifier: editor
  member: commit
  _position: Position(line=83, column=16)

Node Type: MethodDeclaration
  modifiers: {'public', 'static'}
  return_type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  name: GetStringValue
  parameters: [FormalParameter(annotations=[], modifiers=set(), name=ValueName, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)]
  body: [IfStatement(condition=BinaryOperation(operandl=MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[ReturnStatement(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="secsuite"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getSharedPreferences, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[MethodInvocation(arguments=[MemberReference(member=ValueName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=getString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), label=None)])), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in GetBoolValue")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=""), label=None)]
  _position: Position(line=86, column=19)

Node Type: ReferenceType
  name: String

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  name: ValueName
  _position: Position(line=86, column=41)

Node Type: ReferenceType
  name: String

Node Type: IfStatement
  condition: BinaryOperation(operandl=MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=)
  then_statement: BlockStatement(label=None, statements=[ReturnStatement(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="secsuite"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getSharedPreferences, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[MethodInvocation(arguments=[MemberReference(member=ValueName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=getString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), label=None)])
  _position: Position(line=87, column=9)

Node Type: BinaryOperation
  operator: !=
  operandl: MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: MemberReference
  member: AppContext
  _position: Position(line=87, column=13)

Node Type: Literal
  value: null
  _position: Position(line=87, column=27)

Node Type: BlockStatement
  statements: [ReturnStatement(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="secsuite"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getSharedPreferences, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[MethodInvocation(arguments=[MemberReference(member=ValueName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=getString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), label=None)]
  _position: Position(line=87, column=33)

Node Type: ReturnStatement
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="secsuite"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getSharedPreferences, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[MethodInvocation(arguments=[MemberReference(member=ValueName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=getString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)
  _position: Position(line=88, column=13)

Node Type: MethodInvocation
  qualifier: AppContext
  selectors: [MethodInvocation(arguments=[MemberReference(member=ValueName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=getString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="secsuite"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)]
  member: getSharedPreferences
  _position: Position(line=88, column=20)

Node Type: MethodInvocation
  arguments: [MemberReference(member=ValueName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")]
  member: getString
  _position: Position(line=88, column=66)

Node Type: MemberReference
  member: ValueName
  _position: Position(line=88, column=77)

Node Type: Literal
  value: ""
  _position: Position(line=88, column=88)

Node Type: Literal
  value: "secsuite"
  _position: Position(line=88, column=52)

Node Type: Literal
  value: 0
  _position: Position(line=88, column=64)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in GetBoolValue")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
  _position: Position(line=90, column=9)

Node Type: MethodInvocation
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in GetBoolValue")]
  member: LogError
  _position: Position(line=90, column=9)

Node Type: Literal
  value: "AppContext null in GetBoolValue"
  _position: Position(line=90, column=18)

Node Type: ReturnStatement
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")
  _position: Position(line=91, column=9)

Node Type: Literal
  value: ""
  _position: Position(line=91, column=16)

Node Type: MethodDeclaration
  modifiers: {'public', 'static'}
  name: CleanupAlternativeControl
  body: [StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=AlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)], member=SaveBoolValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=AlternativeNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=SaveStringValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)]
  _position: Position(line=94, column=19)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[MemberReference(member=AlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)], member=SaveBoolValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
  _position: Position(line=95, column=9)

Node Type: MethodInvocation
  arguments: [MemberReference(member=AlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)]
  member: SaveBoolValue
  _position: Position(line=95, column=9)

Node Type: MemberReference
  member: AlternativeControl
  _position: Position(line=95, column=23)

Node Type: Literal
  value: false
  _position: Position(line=95, column=43)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[MemberReference(member=AlternativeNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=SaveStringValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
  _position: Position(line=96, column=9)

Node Type: MethodInvocation
  arguments: [MemberReference(member=AlternativeNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")]
  member: SaveStringValue
  _position: Position(line=96, column=9)

Node Type: MemberReference
  member: AlternativeNumber
  _position: Position(line=96, column=25)

Node Type: Literal
  value: ""
  _position: Position(line=96, column=44)

Node Type: MethodDeclaration
  modifiers: {'public', 'static'}
  return_type: BasicType(dimensions=[], name=boolean)
  name: IsAlternativeControlOn
  body: [ReturnStatement(expression=MethodInvocation(arguments=[MemberReference(member=AlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=GetBoolValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)]
  _position: Position(line=99, column=19)

Node Type: BasicType
  name: boolean

Node Type: ReturnStatement
  expression: MethodInvocation(arguments=[MemberReference(member=AlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=GetBoolValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
  _position: Position(line=100, column=9)

Node Type: MethodInvocation
  arguments: [MemberReference(member=AlternativeControl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: GetBoolValue
  _position: Position(line=100, column=16)

Node Type: MemberReference
  member: AlternativeControl
  _position: Position(line=100, column=29)

Node Type: MethodDeclaration
  modifiers: {'public', 'static'}
  return_type: BasicType(dimensions=[], name=boolean)
  name: IsTotalHideOn
  body: [ReturnStatement(expression=MethodInvocation(arguments=[MemberReference(member=SettingHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=GetBoolValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None)]
  _position: Position(line=103, column=19)

Node Type: BasicType
  name: boolean

Node Type: ReturnStatement
  expression: MethodInvocation(arguments=[MemberReference(member=SettingHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=GetBoolValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
  _position: Position(line=104, column=9)

Node Type: MethodInvocation
  arguments: [MemberReference(member=SettingHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: GetBoolValue
  _position: Position(line=104, column=16)

Node Type: MemberReference
  member: SettingHideSms
  _position: Position(line=104, column=29)

Node Type: MethodDeclaration
  modifiers: {'public', 'static'}
  return_type: BasicType(dimensions=[], name=boolean)
  name: GetBoolValue
  parameters: [FormalParameter(annotations=[], modifiers=set(), name=ValueName, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)]
  body: [IfStatement(condition=BinaryOperation(operandl=MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[ReturnStatement(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="secsuite"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getSharedPreferences, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[MethodInvocation(arguments=[MemberReference(member=ValueName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)], member=getBoolean, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), label=None)])), StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in GetBoolValue")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), label=None)]
  _position: Position(line=107, column=19)

Node Type: BasicType
  name: boolean

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  name: ValueName
  _position: Position(line=107, column=40)

Node Type: ReferenceType
  name: String

Node Type: IfStatement
  condition: BinaryOperation(operandl=MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=!=)
  then_statement: BlockStatement(label=None, statements=[ReturnStatement(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="secsuite"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getSharedPreferences, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[MethodInvocation(arguments=[MemberReference(member=ValueName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)], member=getBoolean, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), label=None)])
  _position: Position(line=108, column=9)

Node Type: BinaryOperation
  operator: !=
  operandl: MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: MemberReference
  member: AppContext
  _position: Position(line=108, column=13)

Node Type: Literal
  value: null
  _position: Position(line=108, column=27)

Node Type: BlockStatement
  statements: [ReturnStatement(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="secsuite"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getSharedPreferences, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[MethodInvocation(arguments=[MemberReference(member=ValueName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)], member=getBoolean, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None), label=None)]
  _position: Position(line=108, column=33)

Node Type: ReturnStatement
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="secsuite"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)], member=getSharedPreferences, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[MethodInvocation(arguments=[MemberReference(member=ValueName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)], member=getBoolean, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type_arguments=None)
  _position: Position(line=109, column=13)

Node Type: MethodInvocation
  qualifier: AppContext
  selectors: [MethodInvocation(arguments=[MemberReference(member=ValueName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)], member=getBoolean, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="secsuite"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)]
  member: getSharedPreferences
  _position: Position(line=109, column=20)

Node Type: MethodInvocation
  arguments: [MemberReference(member=ValueName, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)]
  member: getBoolean
  _position: Position(line=109, column=66)

Node Type: MemberReference
  member: ValueName
  _position: Position(line=109, column=78)

Node Type: Literal
  value: false
  _position: Position(line=109, column=89)

Node Type: Literal
  value: "secsuite"
  _position: Position(line=109, column=52)

Node Type: Literal
  value: 0
  _position: Position(line=109, column=64)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in GetBoolValue")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
  _position: Position(line=111, column=9)

Node Type: MethodInvocation
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in GetBoolValue")]
  member: LogError
  _position: Position(line=111, column=9)

Node Type: Literal
  value: "AppContext null in GetBoolValue"
  _position: Position(line=111, column=18)

Node Type: ReturnStatement
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false)
  _position: Position(line=112, column=9)

Node Type: Literal
  value: false
  _position: Position(line=112, column=16)

Node Type: MethodDeclaration
  modifiers: {'public', 'static'}
  return_type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  name: GetActivationCode
  body: [IfStatement(condition=BinaryOperation(operandl=MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in GetActivationCode")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="error"), label=None)])), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Cast(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="phone")], member=getSystemService, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[], name=TelephonyManager, sub_type=None)), name=imei)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=imei, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="error"), label=None)])), ReturnStatement(expression=BinaryOperation(operandl=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="1"), operandr=MethodInvocation(arguments=[MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=8)], member=substring, postfix_operators=[], prefix_operators=[], qualifier=imei, selectors=[], type_arguments=None)], member=parseInt, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None)], member=toString, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None), operator=+), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="3"), operator=+), label=None)]
  _position: Position(line=115, column=19)

Node Type: ReferenceType
  name: String

Node Type: IfStatement
  condition: BinaryOperation(operandl=MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in GetActivationCode")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="error"), label=None)])
  _position: Position(line=116, column=9)

Node Type: BinaryOperation
  operator: ==
  operandl: MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: MemberReference
  member: AppContext
  _position: Position(line=116, column=13)

Node Type: Literal
  value: null
  _position: Position(line=116, column=27)

Node Type: BlockStatement
  statements: [StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in GetActivationCode")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="error"), label=None)]
  _position: Position(line=116, column=33)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in GetActivationCode")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
  _position: Position(line=117, column=13)

Node Type: MethodInvocation
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in GetActivationCode")]
  member: LogError
  _position: Position(line=117, column=13)

Node Type: Literal
  value: "AppContext null in GetActivationCode"
  _position: Position(line=117, column=22)

Node Type: ReturnStatement
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="error")
  _position: Position(line=118, column=13)

Node Type: Literal
  value: "error"
  _position: Position(line=118, column=20)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=Cast(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="phone")], member=getSystemService, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[], name=TelephonyManager, sub_type=None)), name=imei)]
  _position: Position(line=120, column=9)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: imei
  initializer: Cast(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="phone")], member=getSystemService, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[], name=TelephonyManager, sub_type=None))

Node Type: Cast
  type: ReferenceType(arguments=None, dimensions=[], name=TelephonyManager, sub_type=None)
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="phone")], member=getSystemService, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[], type_arguments=None)
  selectors: [MethodInvocation(arguments=[], member=getDeviceId, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]

Node Type: ReferenceType
  name: TelephonyManager

Node Type: MethodInvocation
  qualifier: AppContext
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="phone")]
  member: getSystemService
  _position: Position(line=120, column=43)

Node Type: Literal
  value: "phone"
  _position: Position(line=120, column=71)

Node Type: IfStatement
  condition: BinaryOperation(operandl=MemberReference(member=imei, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===)
  then_statement: BlockStatement(label=None, statements=[ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="error"), label=None)])
  _position: Position(line=121, column=9)

Node Type: BinaryOperation
  operator: ==
  operandl: MemberReference(member=imei, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: MemberReference
  member: imei
  _position: Position(line=121, column=13)

Node Type: Literal
  value: null
  _position: Position(line=121, column=21)

Node Type: BlockStatement
  statements: [ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="error"), label=None)]
  _position: Position(line=121, column=27)

Node Type: ReturnStatement
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="error")
  _position: Position(line=122, column=13)

Node Type: Literal
  value: "error"
  _position: Position(line=122, column=20)

Node Type: ReturnStatement
  expression: BinaryOperation(operandl=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="1"), operandr=MethodInvocation(arguments=[MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=8)], member=substring, postfix_operators=[], prefix_operators=[], qualifier=imei, selectors=[], type_arguments=None)], member=parseInt, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None)], member=toString, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None), operator=+), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="3"), operator=+)
  _position: Position(line=124, column=9)

Node Type: BinaryOperation
  operator: +
  operandl: BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="1"), operandr=MethodInvocation(arguments=[MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=8)], member=substring, postfix_operators=[], prefix_operators=[], qualifier=imei, selectors=[], type_arguments=None)], member=parseInt, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None)], member=toString, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None), operator=+)
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="3")

Node Type: BinaryOperation
  operator: +
  operandl: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="1")
  operandr: MethodInvocation(arguments=[MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=8)], member=substring, postfix_operators=[], prefix_operators=[], qualifier=imei, selectors=[], type_arguments=None)], member=parseInt, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None)], member=toString, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None)

Node Type: Literal
  value: "1"
  _position: Position(line=124, column=16)

Node Type: MethodInvocation
  qualifier: Integer
  arguments: [MethodInvocation(arguments=[MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=8)], member=substring, postfix_operators=[], prefix_operators=[], qualifier=imei, selectors=[], type_arguments=None)], member=parseInt, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None)]
  member: toString
  _position: Position(line=124, column=22)

Node Type: MethodInvocation
  qualifier: Integer
  arguments: [MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=8)], member=substring, postfix_operators=[], prefix_operators=[], qualifier=imei, selectors=[], type_arguments=None)]
  member: parseInt
  _position: Position(line=124, column=39)

Node Type: MethodInvocation
  qualifier: imei
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=8)]
  member: substring
  _position: Position(line=124, column=56)

Node Type: Literal
  value: 8
  _position: Position(line=124, column=71)

Node Type: Literal
  value: "3"
  _position: Position(line=124, column=78)

Node Type: MethodDeclaration
  modifiers: {'public', 'static'}
  return_type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  name: GetStaticDataString
  body: [LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=None, name=myNumber)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in GetStaticDataString")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="error"), label=None)])), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Cast(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="phone")], member=getSystemService, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[], name=TelephonyManager, sub_type=None)), name=mgr)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=TelephonyManager, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=getLine1Number, postfix_operators=[], prefix_operators=[], qualifier=mgr, selectors=[], type_arguments=None), name=myNumber2)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=getSubscriberId, postfix_operators=[], prefix_operators=[], qualifier=mgr, selectors=[], type_arguments=None), name=imsi)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=getDeviceId, postfix_operators=[], prefix_operators=[], qualifier=mgr, selectors=[], type_arguments=None), name=imei)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=GetActivationCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), name=ActivationId)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=myNumber2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), else_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=myNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="+"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=[], prefix_operators=[], qualifier=myNumber2, selectors=[], type_arguments=None)), label=None)]), label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=myNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="empty")), label=None)])), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=imsi, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=imsi, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="empty")), label=None)])), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), name=smsAreHidden)], modifiers=set(), type=BasicType(dimensions=[], name=int)), IfStatement(condition=MethodInvocation(arguments=[MemberReference(member=SettingHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=GetBoolValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=smsAreHidden, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1)), label=None)])), ReturnStatement(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="?to=%s&i=%s&m=%s&aid=%s&h=%s&v=%s"), ArrayCreator(dimensions=[None], initializer=ArrayInitializer(initializers=[MemberReference(member=myNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=imsi, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=imei, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=ActivationId, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MethodInvocation(arguments=[MemberReference(member=smsAreHidden, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None), MemberReference(member=SoftwareVersion, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]), postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None))], member=format, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), label=None)]
  _position: Position(line=127, column=19)

Node Type: ReferenceType
  name: String

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=None, name=myNumber)]
  _position: Position(line=128, column=9)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: myNumber

Node Type: IfStatement
  condition: BinaryOperation(operandl=MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in GetStaticDataString")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="error"), label=None)])
  _position: Position(line=129, column=9)

Node Type: BinaryOperation
  operator: ==
  operandl: MemberReference(member=AppContext, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: MemberReference
  member: AppContext
  _position: Position(line=129, column=13)

Node Type: Literal
  value: null
  _position: Position(line=129, column=27)

Node Type: BlockStatement
  statements: [StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in GetStaticDataString")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), label=None), ReturnStatement(expression=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="error"), label=None)]
  _position: Position(line=129, column=33)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in GetStaticDataString")], member=LogError, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
  _position: Position(line=130, column=13)

Node Type: MethodInvocation
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="AppContext null in GetStaticDataString")]
  member: LogError
  _position: Position(line=130, column=13)

Node Type: Literal
  value: "AppContext null in GetStaticDataString"
  _position: Position(line=130, column=22)

Node Type: ReturnStatement
  expression: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="error")
  _position: Position(line=131, column=13)

Node Type: Literal
  value: "error"
  _position: Position(line=131, column=20)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=TelephonyManager, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=Cast(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="phone")], member=getSystemService, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[], name=TelephonyManager, sub_type=None)), name=mgr)]
  _position: Position(line=133, column=9)

Node Type: ReferenceType
  name: TelephonyManager

Node Type: VariableDeclarator
  name: mgr
  initializer: Cast(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="phone")], member=getSystemService, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[], type_arguments=None), type=ReferenceType(arguments=None, dimensions=[], name=TelephonyManager, sub_type=None))

Node Type: Cast
  type: ReferenceType(arguments=None, dimensions=[], name=TelephonyManager, sub_type=None)
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="phone")], member=getSystemService, postfix_operators=[], prefix_operators=[], qualifier=AppContext, selectors=[], type_arguments=None)

Node Type: ReferenceType
  name: TelephonyManager

Node Type: MethodInvocation
  qualifier: AppContext
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="phone")]
  member: getSystemService
  _position: Position(line=133, column=51)

Node Type: Literal
  value: "phone"
  _position: Position(line=133, column=79)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=getLine1Number, postfix_operators=[], prefix_operators=[], qualifier=mgr, selectors=[], type_arguments=None), name=myNumber2)]
  _position: Position(line=134, column=9)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: myNumber2
  initializer: MethodInvocation(arguments=[], member=getLine1Number, postfix_operators=[], prefix_operators=[], qualifier=mgr, selectors=[], type_arguments=None)

Node Type: MethodInvocation
  qualifier: mgr
  member: getLine1Number
  _position: Position(line=134, column=28)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=getSubscriberId, postfix_operators=[], prefix_operators=[], qualifier=mgr, selectors=[], type_arguments=None), name=imsi)]
  _position: Position(line=135, column=9)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: imsi
  initializer: MethodInvocation(arguments=[], member=getSubscriberId, postfix_operators=[], prefix_operators=[], qualifier=mgr, selectors=[], type_arguments=None)

Node Type: MethodInvocation
  qualifier: mgr
  member: getSubscriberId
  _position: Position(line=135, column=23)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=getDeviceId, postfix_operators=[], prefix_operators=[], qualifier=mgr, selectors=[], type_arguments=None), name=imei)]
  _position: Position(line=136, column=9)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: imei
  initializer: MethodInvocation(arguments=[], member=getDeviceId, postfix_operators=[], prefix_operators=[], qualifier=mgr, selectors=[], type_arguments=None)

Node Type: MethodInvocation
  qualifier: mgr
  member: getDeviceId
  _position: Position(line=136, column=23)

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[], member=GetActivationCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), name=ActivationId)]
  _position: Position(line=137, column=9)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: ActivationId
  initializer: MethodInvocation(arguments=[], member=GetActivationCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)

Node Type: MethodInvocation
  member: GetActivationCode
  _position: Position(line=137, column=31)

Node Type: IfStatement
  condition: BinaryOperation(operandl=MemberReference(member=myNumber2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=myNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="empty")), label=None)])
  else_statement: BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=myNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="+"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=[], prefix_operators=[], qualifier=myNumber2, selectors=[], type_arguments=None)), label=None)])
  _position: Position(line=138, column=9)

Node Type: BinaryOperation
  operator: ==
  operandl: MemberReference(member=myNumber2, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: MemberReference
  member: myNumber2
  _position: Position(line=138, column=13)

Node Type: Literal
  value: null
  _position: Position(line=138, column=26)

Node Type: BlockStatement
  statements: [StatementExpression(expression=Assignment(expressionl=MemberReference(member=myNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="empty")), label=None)]
  _position: Position(line=138, column=32)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=myNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="empty"))
  _position: Position(line=139, column=13)

Node Type: Assignment
  expressionl: MemberReference(member=myNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  value: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="empty")
  type: =

Node Type: MemberReference
  member: myNumber
  _position: Position(line=139, column=13)

Node Type: Literal
  value: "empty"
  _position: Position(line=139, column=24)

Node Type: BlockStatement
  statements: [StatementExpression(expression=Assignment(expressionl=MemberReference(member=myNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="+"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=[], prefix_operators=[], qualifier=myNumber2, selectors=[], type_arguments=None)), label=None)]
  _position: Position(line=140, column=16)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=myNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="+"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=[], prefix_operators=[], qualifier=myNumber2, selectors=[], type_arguments=None))
  _position: Position(line=141, column=13)

Node Type: Assignment
  expressionl: MemberReference(member=myNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  value: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="+"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")], member=replace, postfix_operators=[], prefix_operators=[], qualifier=myNumber2, selectors=[], type_arguments=None)
  type: =

Node Type: MemberReference
  member: myNumber
  _position: Position(line=141, column=13)

Node Type: MethodInvocation
  qualifier: myNumber2
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="+"), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="")]
  member: replace
  _position: Position(line=141, column=24)

Node Type: Literal
  value: "+"
  _position: Position(line=141, column=42)

Node Type: Literal
  value: ""
  _position: Position(line=141, column=47)

Node Type: IfStatement
  condition: BinaryOperation(operandl=MemberReference(member=imsi, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=imsi, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="empty")), label=None)])
  _position: Position(line=143, column=9)

Node Type: BinaryOperation
  operator: ==
  operandl: MemberReference(member=imsi, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null)

Node Type: MemberReference
  member: imsi
  _position: Position(line=143, column=13)

Node Type: Literal
  value: null
  _position: Position(line=143, column=21)

Node Type: BlockStatement
  statements: [StatementExpression(expression=Assignment(expressionl=MemberReference(member=imsi, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="empty")), label=None)]
  _position: Position(line=143, column=27)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=imsi, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="empty"))
  _position: Position(line=144, column=13)

Node Type: Assignment
  expressionl: MemberReference(member=imsi, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  value: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="empty")
  type: =

Node Type: MemberReference
  member: imsi
  _position: Position(line=144, column=13)

Node Type: Literal
  value: "empty"
  _position: Position(line=144, column=20)

Node Type: LocalVariableDeclaration
  type: BasicType(dimensions=[], name=int)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), name=smsAreHidden)]
  _position: Position(line=146, column=9)

Node Type: BasicType
  name: int

Node Type: VariableDeclarator
  name: smsAreHidden
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)

Node Type: Literal
  value: 0
  _position: Position(line=146, column=28)

Node Type: IfStatement
  condition: MethodInvocation(arguments=[MemberReference(member=SettingHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=GetBoolValue, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=smsAreHidden, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1)), label=None)])
  _position: Position(line=147, column=9)

Node Type: MethodInvocation
  arguments: [MemberReference(member=SettingHideSms, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: GetBoolValue
  _position: Position(line=147, column=13)

Node Type: MemberReference
  member: SettingHideSms
  _position: Position(line=147, column=26)

Node Type: BlockStatement
  statements: [StatementExpression(expression=Assignment(expressionl=MemberReference(member=smsAreHidden, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1)), label=None)]
  _position: Position(line=147, column=43)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=smsAreHidden, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1))
  _position: Position(line=148, column=13)

Node Type: Assignment
  expressionl: MemberReference(member=smsAreHidden, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  value: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1)
  type: =

Node Type: MemberReference
  member: smsAreHidden
  _position: Position(line=148, column=13)

Node Type: Literal
  value: 1
  _position: Position(line=148, column=28)

Node Type: ReturnStatement
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="?to=%s&i=%s&m=%s&aid=%s&h=%s&v=%s"), ArrayCreator(dimensions=[None], initializer=ArrayInitializer(initializers=[MemberReference(member=myNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=imsi, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=imei, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=ActivationId, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MethodInvocation(arguments=[MemberReference(member=smsAreHidden, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None), MemberReference(member=SoftwareVersion, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]), postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None))], member=format, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None)
  _position: Position(line=150, column=9)

Node Type: MethodInvocation
  qualifier: String
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="?to=%s&i=%s&m=%s&aid=%s&h=%s&v=%s"), ArrayCreator(dimensions=[None], initializer=ArrayInitializer(initializers=[MemberReference(member=myNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=imsi, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=imei, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=ActivationId, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MethodInvocation(arguments=[MemberReference(member=smsAreHidden, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None), MemberReference(member=SoftwareVersion, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]), postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None))]
  member: format
  _position: Position(line=150, column=16)

Node Type: Literal
  value: "?to=%s&i=%s&m=%s&aid=%s&h=%s&v=%s"
  _position: Position(line=150, column=30)

Node Type: ArrayCreator
  type: ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None)
  dimensions: [None]
  initializer: ArrayInitializer(initializers=[MemberReference(member=myNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=imsi, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=imei, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=ActivationId, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MethodInvocation(arguments=[MemberReference(member=smsAreHidden, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None), MemberReference(member=SoftwareVersion, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])])

Node Type: ReferenceType
  name: Object

Node Type: ArrayInitializer
  initializers: [MemberReference(member=myNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=imsi, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=imei, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MemberReference(member=ActivationId, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), MethodInvocation(arguments=[MemberReference(member=smsAreHidden, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None), MemberReference(member=SoftwareVersion, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]

Node Type: MemberReference
  member: myNumber
  _position: Position(line=150, column=80)

Node Type: MemberReference
  member: imsi
  _position: Position(line=150, column=90)

Node Type: MemberReference
  member: imei
  _position: Position(line=150, column=96)

Node Type: MemberReference
  member: ActivationId
  _position: Position(line=150, column=102)

Node Type: MethodInvocation
  qualifier: Integer
  arguments: [MemberReference(member=smsAreHidden, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: valueOf
  _position: Position(line=150, column=116)

Node Type: MemberReference
  member: smsAreHidden
  _position: Position(line=150, column=132)

Node Type: MemberReference
  member: SoftwareVersion
  _position: Position(line=150, column=147)

Node Type: MethodDeclaration
  modifiers: {'public', 'static'}
  return_type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  name: GetMessageReportUrl
  parameters: [FormalParameter(annotations=[], modifiers=set(), name=Number, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=Text, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)]
  body: [LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetStaticDataString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="&from=%s&text=%s"), ArrayCreator(dimensions=[None], initializer=ArrayInitializer(initializers=[MethodInvocation(arguments=[MemberReference(member=Number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None), MethodInvocation(arguments=[MemberReference(member=Text, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None)]), postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None))], member=format, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operator=+), name=GetString)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), IfStatement(condition=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=XLastMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=indexOf, postfix_operators=[], prefix_operators=[], qualifier=Text, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="&last=1"), operator=+)), label=None)])), ReturnStatement(expression=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetAntivirusLink, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), label=None)]
  _position: Position(line=153, column=19)

Node Type: ReferenceType
  name: String

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  name: Number
  _position: Position(line=153, column=46)

Node Type: ReferenceType
  name: String

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  name: Text
  _position: Position(line=153, column=61)

Node Type: ReferenceType
  name: String

Node Type: LocalVariableDeclaration
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  declarators: [VariableDeclarator(dimensions=[], initializer=BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetStaticDataString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="&from=%s&text=%s"), ArrayCreator(dimensions=[None], initializer=ArrayInitializer(initializers=[MethodInvocation(arguments=[MemberReference(member=Number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None), MethodInvocation(arguments=[MemberReference(member=Text, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None)]), postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None))], member=format, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operator=+), name=GetString)]
  _position: Position(line=154, column=9)

Node Type: ReferenceType
  name: String

Node Type: VariableDeclarator
  name: GetString
  initializer: BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetStaticDataString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="&from=%s&text=%s"), ArrayCreator(dimensions=[None], initializer=ArrayInitializer(initializers=[MethodInvocation(arguments=[MemberReference(member=Number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None), MethodInvocation(arguments=[MemberReference(member=Text, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None)]), postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None))], member=format, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operator=+)

Node Type: BinaryOperation
  operator: +
  operandl: MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetStaticDataString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None)
  operandr: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="&from=%s&text=%s"), ArrayCreator(dimensions=[None], initializer=ArrayInitializer(initializers=[MethodInvocation(arguments=[MemberReference(member=Number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None), MethodInvocation(arguments=[MemberReference(member=Text, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None)]), postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None))], member=format, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None)

Node Type: MethodInvocation
  qualifier: String
  arguments: [MethodInvocation(arguments=[], member=GetStaticDataString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)]
  member: valueOf
  _position: Position(line=154, column=28)

Node Type: MethodInvocation
  member: GetStaticDataString
  _position: Position(line=154, column=43)

Node Type: MethodInvocation
  qualifier: String
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="&from=%s&text=%s"), ArrayCreator(dimensions=[None], initializer=ArrayInitializer(initializers=[MethodInvocation(arguments=[MemberReference(member=Number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None), MethodInvocation(arguments=[MemberReference(member=Text, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None)]), postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None))]
  member: format
  _position: Position(line=154, column=68)

Node Type: Literal
  value: "&from=%s&text=%s"
  _position: Position(line=154, column=82)

Node Type: ArrayCreator
  type: ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None)
  dimensions: [None]
  initializer: ArrayInitializer(initializers=[MethodInvocation(arguments=[MemberReference(member=Number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None), MethodInvocation(arguments=[MemberReference(member=Text, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None)])

Node Type: ReferenceType
  name: Object

Node Type: ArrayInitializer
  initializers: [MethodInvocation(arguments=[MemberReference(member=Number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None), MethodInvocation(arguments=[MemberReference(member=Text, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=encode, postfix_operators=[], prefix_operators=[], qualifier=URLEncoder, selectors=[], type_arguments=None)]

Node Type: MethodInvocation
  qualifier: URLEncoder
  arguments: [MemberReference(member=Number, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: encode
  _position: Position(line=154, column=115)

Node Type: MemberReference
  member: Number
  _position: Position(line=154, column=133)

Node Type: MethodInvocation
  qualifier: URLEncoder
  arguments: [MemberReference(member=Text, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: encode
  _position: Position(line=154, column=142)

Node Type: MemberReference
  member: Text
  _position: Position(line=154, column=160)

Node Type: IfStatement
  condition: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=XLastMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=indexOf, postfix_operators=[], prefix_operators=[], qualifier=Text, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), operator=>)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="&last=1"), operator=+)), label=None)])
  _position: Position(line=155, column=9)

Node Type: BinaryOperation
  operator: >
  operandl: MethodInvocation(arguments=[MemberReference(member=XLastMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=indexOf, postfix_operators=[], prefix_operators=[], qualifier=Text, selectors=[], type_arguments=None)
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)

Node Type: MethodInvocation
  qualifier: Text
  arguments: [MemberReference(member=XLastMessage, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: indexOf
  _position: Position(line=155, column=13)

Node Type: MemberReference
  member: XLastMessage
  _position: Position(line=155, column=26)

Node Type: Literal
  value: 0
  _position: Position(line=155, column=42)

Node Type: BlockStatement
  statements: [StatementExpression(expression=Assignment(expressionl=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="&last=1"), operator=+)), label=None)]
  _position: Position(line=155, column=45)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="&last=1"), operator=+))
  _position: Position(line=156, column=13)

Node Type: Assignment
  expressionl: MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  value: BinaryOperation(operandl=MethodInvocation(arguments=[MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="&last=1"), operator=+)
  type: =

Node Type: MemberReference
  member: GetString
  _position: Position(line=156, column=13)

Node Type: BinaryOperation
  operator: +
  operandl: MethodInvocation(arguments=[MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None)
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="&last=1")

Node Type: MethodInvocation
  qualifier: String
  arguments: [MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: valueOf
  _position: Position(line=156, column=25)

Node Type: MemberReference
  member: GetString
  _position: Position(line=156, column=40)

Node Type: Literal
  value: "&last=1"
  _position: Position(line=156, column=53)

Node Type: ReturnStatement
  expression: BinaryOperation(operandl=MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetAntivirusLink, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None), operandr=MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+)
  _position: Position(line=158, column=9)

Node Type: BinaryOperation
  operator: +
  operandl: MethodInvocation(arguments=[MethodInvocation(arguments=[], member=GetAntivirusLink, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)], member=valueOf, postfix_operators=[], prefix_operators=[], qualifier=String, selectors=[], type_arguments=None)
  operandr: MemberReference(member=GetString, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])

Node Type: MethodInvocation
  qualifier: String
  arguments: [MethodInvocation(arguments=[], member=GetAntivirusLink, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)]
  member: valueOf
  _position: Position(line=158, column=16)

Node Type: MethodInvocation
  member: GetAntivirusLink
  _position: Position(line=158, column=31)

Node Type: MemberReference
  member: GetString
  _position: Position(line=158, column=53)

========================================
File: WebManager.java
Node Type: CompilationUnit
  package: PackageDeclaration(annotations=None, documentation=None, modifiers=None, name=com.android.security)
  imports: [Import(path=android.os.SystemClock, static=False, wildcard=False)]
  types: [ClassDeclaration(annotations=[], body=[FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=5000), name=DefaultRetryTime)], documentation=None, modifiers={'final', 'public', 'static'}, type=BasicType(dimensions=[], name=int)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), name=HTTP_STATUS_OK)], documentation=None, modifiers={'final', 'public', 'static'}, type=BasicType(dimensions=[], name=int)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), name=MaxHttpRetries)], documentation=None, modifiers={'final', 'public', 'static'}, type=BasicType(dimensions=[], name=int)), MethodDeclaration(annotations=[], body=[LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), name=RetryNumber)], modifiers=set(), type=BasicType(dimensions=[], name=int)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), name=ErrorCode)], modifiers=set(), type=BasicType(dimensions=[], name=int)), WhileStatement(body=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=ErrorCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=MakeHttpRequest, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)), label=None), StatementExpression(expression=MemberReference(member=RetryNumber, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[]), label=None), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=ErrorCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator=!=), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=5000)], member=sleep, postfix_operators=[], prefix_operators=[], qualifier=SystemClock, selectors=[], type_arguments=None), label=None)]))]), condition=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ErrorCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator=!=), operandr=BinaryOperation(operandl=MemberReference(member=RetryNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=NumOfRetries, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<), operator=&&), label=None), ReturnStatement(expression=MemberReference(member=ErrorCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), label=None)], documentation=None, modifiers={'public', 'static'}, name=MakeHttpRequestWithRetries, parameters=[FormalParameter(annotations=[], modifiers=set(), name=uri, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=NumOfRetries, type=BasicType(dimensions=[], name=int), varargs=False)], return_type=BasicType(dimensions=[], name=int), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[StatementExpression(expression=ClassCreator(arguments=[ClassCreator(arguments=[], body=[MethodDeclaration(annotations=[], body=[StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=6)], member=MakeHttpRequestWithRetries, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public'}, name=run, parameters=[], return_type=None, throws=None, type_parameters=None)], constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Runnable, sub_type=None))], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[], member=start, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=Thread, sub_type=None)), label=None)], documentation=None, modifiers={'public', 'static'}, name=FireGetRequest, parameters=[FormalParameter(annotations=[], modifiers={'final'}, name=uri, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)], return_type=None, throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[ThrowStatement(expression=ClassCreator(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Method not decompiled: com.android.security.WebManager.MakeHttpRequest(java.lang.String):int")], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=UnsupportedOperationException, sub_type=None)), label=None)], documentation=None, modifiers={'public', 'static'}, name=MakeHttpRequest, parameters=[FormalParameter(annotations=[], modifiers=set(), name=r13, type=ReferenceType(arguments=None, dimensions=[], name=java, sub_type=ReferenceType(arguments=None, dimensions=None, name=lang, sub_type=ReferenceType(arguments=None, dimensions=None, name=String, sub_type=None))), varargs=False)], return_type=BasicType(dimensions=[], name=int), throws=None, type_parameters=None)], documentation=None, extends=None, implements=None, modifiers={'public'}, name=WebManager, type_parameters=None)]

Node Type: PackageDeclaration
  name: com.android.security
  _position: Position(line=1, column=9)

Node Type: Import
  path: android.os.SystemClock
  _position: Position(line=3, column=1)

Node Type: ClassDeclaration
  modifiers: {'public'}
  name: WebManager
  body: [FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=5000), name=DefaultRetryTime)], documentation=None, modifiers={'final', 'public', 'static'}, type=BasicType(dimensions=[], name=int)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), name=HTTP_STATUS_OK)], documentation=None, modifiers={'final', 'public', 'static'}, type=BasicType(dimensions=[], name=int)), FieldDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), name=MaxHttpRetries)], documentation=None, modifiers={'final', 'public', 'static'}, type=BasicType(dimensions=[], name=int)), MethodDeclaration(annotations=[], body=[LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), name=RetryNumber)], modifiers=set(), type=BasicType(dimensions=[], name=int)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), name=ErrorCode)], modifiers=set(), type=BasicType(dimensions=[], name=int)), WhileStatement(body=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=ErrorCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=MakeHttpRequest, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)), label=None), StatementExpression(expression=MemberReference(member=RetryNumber, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[]), label=None), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=ErrorCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator=!=), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=5000)], member=sleep, postfix_operators=[], prefix_operators=[], qualifier=SystemClock, selectors=[], type_arguments=None), label=None)]))]), condition=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ErrorCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator=!=), operandr=BinaryOperation(operandl=MemberReference(member=RetryNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=NumOfRetries, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<), operator=&&), label=None), ReturnStatement(expression=MemberReference(member=ErrorCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), label=None)], documentation=None, modifiers={'public', 'static'}, name=MakeHttpRequestWithRetries, parameters=[FormalParameter(annotations=[], modifiers=set(), name=uri, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=NumOfRetries, type=BasicType(dimensions=[], name=int), varargs=False)], return_type=BasicType(dimensions=[], name=int), throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[StatementExpression(expression=ClassCreator(arguments=[ClassCreator(arguments=[], body=[MethodDeclaration(annotations=[], body=[StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=6)], member=MakeHttpRequestWithRetries, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public'}, name=run, parameters=[], return_type=None, throws=None, type_parameters=None)], constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Runnable, sub_type=None))], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[], member=start, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=Thread, sub_type=None)), label=None)], documentation=None, modifiers={'public', 'static'}, name=FireGetRequest, parameters=[FormalParameter(annotations=[], modifiers={'final'}, name=uri, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)], return_type=None, throws=None, type_parameters=None), MethodDeclaration(annotations=[], body=[ThrowStatement(expression=ClassCreator(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Method not decompiled: com.android.security.WebManager.MakeHttpRequest(java.lang.String):int")], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=UnsupportedOperationException, sub_type=None)), label=None)], documentation=None, modifiers={'public', 'static'}, name=MakeHttpRequest, parameters=[FormalParameter(annotations=[], modifiers=set(), name=r13, type=ReferenceType(arguments=None, dimensions=[], name=java, sub_type=ReferenceType(arguments=None, dimensions=None, name=lang, sub_type=ReferenceType(arguments=None, dimensions=None, name=String, sub_type=None))), varargs=False)], return_type=BasicType(dimensions=[], name=int), throws=None, type_parameters=None)]
  _position: Position(line=5, column=8)

Node Type: FieldDeclaration
  modifiers: {'final', 'public', 'static'}
  type: BasicType(dimensions=[], name=int)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=5000), name=DefaultRetryTime)]
  _position: Position(line=6, column=25)

Node Type: BasicType
  name: int

Node Type: VariableDeclarator
  name: DefaultRetryTime
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=5000)

Node Type: Literal
  value: 5000
  _position: Position(line=6, column=48)

Node Type: FieldDeclaration
  modifiers: {'final', 'public', 'static'}
  type: BasicType(dimensions=[], name=int)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), name=HTTP_STATUS_OK)]
  _position: Position(line=7, column=25)

Node Type: BasicType
  name: int

Node Type: VariableDeclarator
  name: HTTP_STATUS_OK
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200)

Node Type: Literal
  value: 200
  _position: Position(line=7, column=46)

Node Type: FieldDeclaration
  modifiers: {'final', 'public', 'static'}
  type: BasicType(dimensions=[], name=int)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), name=MaxHttpRetries)]
  _position: Position(line=8, column=25)

Node Type: BasicType
  name: int

Node Type: VariableDeclarator
  name: MaxHttpRetries
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3)

Node Type: Literal
  value: 3
  _position: Position(line=8, column=46)

Node Type: MethodDeclaration
  modifiers: {'public', 'static'}
  return_type: BasicType(dimensions=[], name=int)
  name: MakeHttpRequestWithRetries
  parameters: [FormalParameter(annotations=[], modifiers=set(), name=uri, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False), FormalParameter(annotations=[], modifiers=set(), name=NumOfRetries, type=BasicType(dimensions=[], name=int), varargs=False)]
  body: [LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), name=RetryNumber)], modifiers=set(), type=BasicType(dimensions=[], name=int)), LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), name=ErrorCode)], modifiers=set(), type=BasicType(dimensions=[], name=int)), WhileStatement(body=BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=ErrorCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=MakeHttpRequest, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)), label=None), StatementExpression(expression=MemberReference(member=RetryNumber, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[]), label=None), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=ErrorCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator=!=), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=5000)], member=sleep, postfix_operators=[], prefix_operators=[], qualifier=SystemClock, selectors=[], type_arguments=None), label=None)]))]), condition=BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ErrorCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator=!=), operandr=BinaryOperation(operandl=MemberReference(member=RetryNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=NumOfRetries, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<), operator=&&), label=None), ReturnStatement(expression=MemberReference(member=ErrorCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), label=None)]
  _position: Position(line=10, column=19)

Node Type: BasicType
  name: int

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  name: uri
  _position: Position(line=10, column=50)

Node Type: ReferenceType
  name: String

Node Type: FormalParameter
  type: BasicType(dimensions=[], name=int)
  name: NumOfRetries
  _position: Position(line=10, column=62)

Node Type: BasicType
  name: int

Node Type: LocalVariableDeclaration
  type: BasicType(dimensions=[], name=int)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), name=RetryNumber)]
  _position: Position(line=11, column=9)

Node Type: BasicType
  name: int

Node Type: VariableDeclarator
  name: RetryNumber
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)

Node Type: Literal
  value: 0
  _position: Position(line=11, column=27)

Node Type: LocalVariableDeclaration
  type: BasicType(dimensions=[], name=int)
  declarators: [VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), name=ErrorCode)]
  _position: Position(line=12, column=9)

Node Type: BasicType
  name: int

Node Type: VariableDeclarator
  name: ErrorCode
  initializer: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0)

Node Type: Literal
  value: 0
  _position: Position(line=12, column=25)

Node Type: WhileStatement
  condition: BinaryOperation(operandl=BinaryOperation(operandl=MemberReference(member=ErrorCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator=!=), operandr=BinaryOperation(operandl=MemberReference(member=RetryNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=NumOfRetries, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<), operator=&&)
  body: BlockStatement(label=None, statements=[StatementExpression(expression=Assignment(expressionl=MemberReference(member=ErrorCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=MakeHttpRequest, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)), label=None), StatementExpression(expression=MemberReference(member=RetryNumber, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[]), label=None), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=ErrorCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator=!=), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=5000)], member=sleep, postfix_operators=[], prefix_operators=[], qualifier=SystemClock, selectors=[], type_arguments=None), label=None)]))])
  _position: Position(line=13, column=9)

Node Type: BinaryOperation
  operator: &&
  operandl: BinaryOperation(operandl=MemberReference(member=ErrorCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator=!=)
  operandr: BinaryOperation(operandl=MemberReference(member=RetryNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=NumOfRetries, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<)

Node Type: BinaryOperation
  operator: !=
  operandl: MemberReference(member=ErrorCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200)

Node Type: MemberReference
  member: ErrorCode
  _position: Position(line=13, column=16)

Node Type: Literal
  value: 200
  _position: Position(line=13, column=29)

Node Type: BinaryOperation
  operator: <
  operandl: MemberReference(member=RetryNumber, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  operandr: MemberReference(member=NumOfRetries, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])

Node Type: MemberReference
  member: RetryNumber
  _position: Position(line=13, column=36)

Node Type: MemberReference
  member: NumOfRetries
  _position: Position(line=13, column=50)

Node Type: BlockStatement
  statements: [StatementExpression(expression=Assignment(expressionl=MemberReference(member=ErrorCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=MakeHttpRequest, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)), label=None), StatementExpression(expression=MemberReference(member=RetryNumber, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[]), label=None), IfStatement(condition=BinaryOperation(operandl=MemberReference(member=ErrorCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator=!=), else_statement=None, label=None, then_statement=BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=5000)], member=sleep, postfix_operators=[], prefix_operators=[], qualifier=SystemClock, selectors=[], type_arguments=None), label=None)]))]
  _position: Position(line=13, column=64)

Node Type: StatementExpression
  expression: Assignment(expressionl=MemberReference(member=ErrorCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=MakeHttpRequest, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None))
  _position: Position(line=14, column=13)

Node Type: Assignment
  expressionl: MemberReference(member=ErrorCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  value: MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=MakeHttpRequest, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)
  type: =

Node Type: MemberReference
  member: ErrorCode
  _position: Position(line=14, column=13)

Node Type: MethodInvocation
  arguments: [MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])]
  member: MakeHttpRequest
  _position: Position(line=14, column=25)

Node Type: MemberReference
  member: uri
  _position: Position(line=14, column=41)

Node Type: StatementExpression
  expression: MemberReference(member=RetryNumber, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[])
  _position: Position(line=15, column=13)

Node Type: MemberReference
  postfix_operators: ['++']
  member: RetryNumber
  _position: Position(line=15, column=13)

Node Type: IfStatement
  condition: BinaryOperation(operandl=MemberReference(member=ErrorCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200), operator=!=)
  then_statement: BlockStatement(label=None, statements=[StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=5000)], member=sleep, postfix_operators=[], prefix_operators=[], qualifier=SystemClock, selectors=[], type_arguments=None), label=None)])
  _position: Position(line=16, column=13)

Node Type: BinaryOperation
  operator: !=
  operandl: MemberReference(member=ErrorCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  operandr: Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=200)

Node Type: MemberReference
  member: ErrorCode
  _position: Position(line=16, column=17)

Node Type: Literal
  value: 200
  _position: Position(line=16, column=30)

Node Type: BlockStatement
  statements: [StatementExpression(expression=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=5000)], member=sleep, postfix_operators=[], prefix_operators=[], qualifier=SystemClock, selectors=[], type_arguments=None), label=None)]
  _position: Position(line=16, column=35)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=5000)], member=sleep, postfix_operators=[], prefix_operators=[], qualifier=SystemClock, selectors=[], type_arguments=None)
  _position: Position(line=17, column=17)

Node Type: MethodInvocation
  qualifier: SystemClock
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=5000)]
  member: sleep
  _position: Position(line=17, column=17)

Node Type: Literal
  value: 5000
  _position: Position(line=17, column=35)

Node Type: ReturnStatement
  expression: MemberReference(member=ErrorCode, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])
  _position: Position(line=20, column=9)

Node Type: MemberReference
  member: ErrorCode
  _position: Position(line=20, column=16)

Node Type: MethodDeclaration
  modifiers: {'public', 'static'}
  name: FireGetRequest
  parameters: [FormalParameter(annotations=[], modifiers={'final'}, name=uri, type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), varargs=False)]
  body: [StatementExpression(expression=ClassCreator(arguments=[ClassCreator(arguments=[], body=[MethodDeclaration(annotations=[], body=[StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=6)], member=MakeHttpRequestWithRetries, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public'}, name=run, parameters=[], return_type=None, throws=None, type_parameters=None)], constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Runnable, sub_type=None))], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[], member=start, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=Thread, sub_type=None)), label=None)]
  _position: Position(line=23, column=19)

Node Type: FormalParameter
  modifiers: {'final'}
  type: ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)
  name: uri
  _position: Position(line=23, column=45)

Node Type: ReferenceType
  name: String

Node Type: StatementExpression
  expression: ClassCreator(arguments=[ClassCreator(arguments=[], body=[MethodDeclaration(annotations=[], body=[StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=6)], member=MakeHttpRequestWithRetries, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public'}, name=run, parameters=[], return_type=None, throws=None, type_parameters=None)], constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Runnable, sub_type=None))], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[], member=start, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)], type=ReferenceType(arguments=None, dimensions=None, name=Thread, sub_type=None))
  _position: Position(line=24, column=9)

Node Type: ClassCreator
  selectors: [MethodInvocation(arguments=[], member=start, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]
  type: ReferenceType(arguments=None, dimensions=None, name=Thread, sub_type=None)
  arguments: [ClassCreator(arguments=[], body=[MethodDeclaration(annotations=[], body=[StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=6)], member=MakeHttpRequestWithRetries, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public'}, name=run, parameters=[], return_type=None, throws=None, type_parameters=None)], constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Runnable, sub_type=None))]

Node Type: MethodInvocation
  member: start
  _position: Position(line=28, column=11)

Node Type: ReferenceType
  name: Thread

Node Type: ClassCreator
  type: ReferenceType(arguments=None, dimensions=None, name=Runnable, sub_type=None)
  body: [MethodDeclaration(annotations=[], body=[StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=6)], member=MakeHttpRequestWithRetries, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), label=None)], documentation=None, modifiers={'public'}, name=run, parameters=[], return_type=None, throws=None, type_parameters=None)]

Node Type: ReferenceType
  name: Runnable

Node Type: MethodDeclaration
  modifiers: {'public'}
  name: run
  body: [StatementExpression(expression=MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=6)], member=MakeHttpRequestWithRetries, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None), label=None)]
  _position: Position(line=25, column=20)

Node Type: StatementExpression
  expression: MethodInvocation(arguments=[MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=6)], member=MakeHttpRequestWithRetries, postfix_operators=[], prefix_operators=[], qualifier=WebManager, selectors=[], type_arguments=None)
  _position: Position(line=26, column=17)

Node Type: MethodInvocation
  qualifier: WebManager
  arguments: [MemberReference(member=uri, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=6)]
  member: MakeHttpRequestWithRetries
  _position: Position(line=26, column=17)

Node Type: MemberReference
  member: uri
  _position: Position(line=26, column=55)

Node Type: Literal
  value: 6
  _position: Position(line=26, column=60)

Node Type: MethodDeclaration
  modifiers: {'public', 'static'}
  return_type: BasicType(dimensions=[], name=int)
  name: MakeHttpRequest
  parameters: [FormalParameter(annotations=[], modifiers=set(), name=r13, type=ReferenceType(arguments=None, dimensions=[], name=java, sub_type=ReferenceType(arguments=None, dimensions=None, name=lang, sub_type=ReferenceType(arguments=None, dimensions=None, name=String, sub_type=None))), varargs=False)]
  body: [ThrowStatement(expression=ClassCreator(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Method not decompiled: com.android.security.WebManager.MakeHttpRequest(java.lang.String):int")], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=UnsupportedOperationException, sub_type=None)), label=None)]
  _position: Position(line=35, column=19)

Node Type: BasicType
  name: int

Node Type: FormalParameter
  type: ReferenceType(arguments=None, dimensions=[], name=java, sub_type=ReferenceType(arguments=None, dimensions=None, name=lang, sub_type=ReferenceType(arguments=None, dimensions=None, name=String, sub_type=None)))
  name: r13
  _position: Position(line=35, column=39)

Node Type: ReferenceType
  name: java
  sub_type: ReferenceType(arguments=None, dimensions=None, name=lang, sub_type=ReferenceType(arguments=None, dimensions=None, name=String, sub_type=None))

Node Type: ReferenceType
  name: lang
  sub_type: ReferenceType(arguments=None, dimensions=None, name=String, sub_type=None)

Node Type: ReferenceType
  name: String

Node Type: ThrowStatement
  expression: ClassCreator(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Method not decompiled: com.android.security.WebManager.MakeHttpRequest(java.lang.String):int")], body=None, constructor_type_arguments=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=UnsupportedOperationException, sub_type=None))
  _position: Position(line=100, column=9)

Node Type: ClassCreator
  type: ReferenceType(arguments=None, dimensions=None, name=UnsupportedOperationException, sub_type=None)
  arguments: [Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Method not decompiled: com.android.security.WebManager.MakeHttpRequest(java.lang.String):int")]

Node Type: ReferenceType
  name: UnsupportedOperationException

Node Type: Literal
  value: "Method not decompiled: com.android.security.WebManager.MakeHttpRequest(java.lang.String):int"
  _position: Position(line=100, column=49)

========================================
